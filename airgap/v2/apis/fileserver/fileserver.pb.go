// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.6
// source: apis/fileserver/fileserver.proto

package fileserver

import (
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/redhat-marketplace/redhat-marketplace-operator/airgap/v2/apis/model/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListFileMetadataRequest_ListFileFilter_Comparison int32

const (
	ListFileMetadataRequest_ListFileFilter_EQUAL        ListFileMetadataRequest_ListFileFilter_Comparison = 0
	ListFileMetadataRequest_ListFileFilter_LESS_THAN    ListFileMetadataRequest_ListFileFilter_Comparison = 1
	ListFileMetadataRequest_ListFileFilter_GREATER_THAN ListFileMetadataRequest_ListFileFilter_Comparison = 2
	ListFileMetadataRequest_ListFileFilter_CONTAINS     ListFileMetadataRequest_ListFileFilter_Comparison = 3
)

// Enum value maps for ListFileMetadataRequest_ListFileFilter_Comparison.
var (
	ListFileMetadataRequest_ListFileFilter_Comparison_name = map[int32]string{
		0: "EQUAL",
		1: "LESS_THAN",
		2: "GREATER_THAN",
		3: "CONTAINS",
	}
	ListFileMetadataRequest_ListFileFilter_Comparison_value = map[string]int32{
		"EQUAL":        0,
		"LESS_THAN":    1,
		"GREATER_THAN": 2,
		"CONTAINS":     3,
	}
)

func (x ListFileMetadataRequest_ListFileFilter_Comparison) Enum() *ListFileMetadataRequest_ListFileFilter_Comparison {
	p := new(ListFileMetadataRequest_ListFileFilter_Comparison)
	*p = x
	return p
}

func (x ListFileMetadataRequest_ListFileFilter_Comparison) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListFileMetadataRequest_ListFileFilter_Comparison) Descriptor() protoreflect.EnumDescriptor {
	return file_apis_fileserver_fileserver_proto_enumTypes[0].Descriptor()
}

func (ListFileMetadataRequest_ListFileFilter_Comparison) Type() protoreflect.EnumType {
	return &file_apis_fileserver_fileserver_proto_enumTypes[0]
}

func (x ListFileMetadataRequest_ListFileFilter_Comparison) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListFileMetadataRequest_ListFileFilter_Comparison.Descriptor instead.
func (ListFileMetadataRequest_ListFileFilter_Comparison) EnumDescriptor() ([]byte, []int) {
	return file_apis_fileserver_fileserver_proto_rawDescGZIP(), []int{6, 0, 0}
}

type ListFileMetadataRequest_ListFileSort_SortOrder int32

const (
	ListFileMetadataRequest_ListFileSort_ASC  ListFileMetadataRequest_ListFileSort_SortOrder = 0
	ListFileMetadataRequest_ListFileSort_DESC ListFileMetadataRequest_ListFileSort_SortOrder = 1
)

// Enum value maps for ListFileMetadataRequest_ListFileSort_SortOrder.
var (
	ListFileMetadataRequest_ListFileSort_SortOrder_name = map[int32]string{
		0: "ASC",
		1: "DESC",
	}
	ListFileMetadataRequest_ListFileSort_SortOrder_value = map[string]int32{
		"ASC":  0,
		"DESC": 1,
	}
)

func (x ListFileMetadataRequest_ListFileSort_SortOrder) Enum() *ListFileMetadataRequest_ListFileSort_SortOrder {
	p := new(ListFileMetadataRequest_ListFileSort_SortOrder)
	*p = x
	return p
}

func (x ListFileMetadataRequest_ListFileSort_SortOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListFileMetadataRequest_ListFileSort_SortOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_apis_fileserver_fileserver_proto_enumTypes[1].Descriptor()
}

func (ListFileMetadataRequest_ListFileSort_SortOrder) Type() protoreflect.EnumType {
	return &file_apis_fileserver_fileserver_proto_enumTypes[1]
}

func (x ListFileMetadataRequest_ListFileSort_SortOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListFileMetadataRequest_ListFileSort_SortOrder.Descriptor instead.
func (ListFileMetadataRequest_ListFileSort_SortOrder) EnumDescriptor() ([]byte, []int) {
	return file_apis_fileserver_fileserver_proto_rawDescGZIP(), []int{6, 1, 0}
}

// streams a file identified by
type UploadFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*UploadFileRequest_Info
	//	*UploadFileRequest_ChunkData
	Data isUploadFileRequest_Data `protobuf_oneof:"data"`
}

func (x *UploadFileRequest) Reset() {
	*x = UploadFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_fileserver_fileserver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileRequest) ProtoMessage() {}

func (x *UploadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_fileserver_fileserver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileRequest.ProtoReflect.Descriptor instead.
func (*UploadFileRequest) Descriptor() ([]byte, []int) {
	return file_apis_fileserver_fileserver_proto_rawDescGZIP(), []int{0}
}

func (m *UploadFileRequest) GetData() isUploadFileRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *UploadFileRequest) GetInfo() *v1.FileInfo {
	if x, ok := x.GetData().(*UploadFileRequest_Info); ok {
		return x.Info
	}
	return nil
}

func (x *UploadFileRequest) GetChunkData() []byte {
	if x, ok := x.GetData().(*UploadFileRequest_ChunkData); ok {
		return x.ChunkData
	}
	return nil
}

type isUploadFileRequest_Data interface {
	isUploadFileRequest_Data()
}

type UploadFileRequest_Info struct {
	Info *v1.FileInfo `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type UploadFileRequest_ChunkData struct {
	ChunkData []byte `protobuf:"bytes,2,opt,name=chunk_data,json=chunkData,proto3,oneof"`
}

func (*UploadFileRequest_Info) isUploadFileRequest_Data() {}

func (*UploadFileRequest_ChunkData) isUploadFileRequest_Data() {}

type UploadFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId *v1.FileID `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Size   uint32     `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *UploadFileResponse) Reset() {
	*x = UploadFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_fileserver_fileserver_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileResponse) ProtoMessage() {}

func (x *UploadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_fileserver_fileserver_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileResponse.ProtoReflect.Descriptor instead.
func (*UploadFileResponse) Descriptor() ([]byte, []int) {
	return file_apis_fileserver_fileserver_proto_rawDescGZIP(), []int{1}
}

func (x *UploadFileResponse) GetFileId() *v1.FileID {
	if x != nil {
		return x.FileId
	}
	return nil
}

func (x *UploadFileResponse) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type GetFileMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId *v1.FileID `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
}

func (x *GetFileMetadataRequest) Reset() {
	*x = GetFileMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_fileserver_fileserver_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileMetadataRequest) ProtoMessage() {}

func (x *GetFileMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_fileserver_fileserver_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetFileMetadataRequest) Descriptor() ([]byte, []int) {
	return file_apis_fileserver_fileserver_proto_rawDescGZIP(), []int{2}
}

func (x *GetFileMetadataRequest) GetFileId() *v1.FileID {
	if x != nil {
		return x.FileId
	}
	return nil
}

type GetFileMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *v1.FileInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetFileMetadataResponse) Reset() {
	*x = GetFileMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_fileserver_fileserver_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileMetadataResponse) ProtoMessage() {}

func (x *GetFileMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_fileserver_fileserver_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetFileMetadataResponse) Descriptor() ([]byte, []int) {
	return file_apis_fileserver_fileserver_proto_rawDescGZIP(), []int{3}
}

func (x *GetFileMetadataResponse) GetInfo() *v1.FileInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type DownloadFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId *v1.FileID `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
}

func (x *DownloadFileRequest) Reset() {
	*x = DownloadFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_fileserver_fileserver_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileRequest) ProtoMessage() {}

func (x *DownloadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_fileserver_fileserver_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileRequest.ProtoReflect.Descriptor instead.
func (*DownloadFileRequest) Descriptor() ([]byte, []int) {
	return file_apis_fileserver_fileserver_proto_rawDescGZIP(), []int{4}
}

func (x *DownloadFileRequest) GetFileId() *v1.FileID {
	if x != nil {
		return x.FileId
	}
	return nil
}

type DownloadFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*DownloadFileResponse_Info
	//	*DownloadFileResponse_ChunkData
	Data isDownloadFileResponse_Data `protobuf_oneof:"data"`
}

func (x *DownloadFileResponse) Reset() {
	*x = DownloadFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_fileserver_fileserver_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileResponse) ProtoMessage() {}

func (x *DownloadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_fileserver_fileserver_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileResponse.ProtoReflect.Descriptor instead.
func (*DownloadFileResponse) Descriptor() ([]byte, []int) {
	return file_apis_fileserver_fileserver_proto_rawDescGZIP(), []int{5}
}

func (m *DownloadFileResponse) GetData() isDownloadFileResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *DownloadFileResponse) GetInfo() *v1.FileInfo {
	if x, ok := x.GetData().(*DownloadFileResponse_Info); ok {
		return x.Info
	}
	return nil
}

func (x *DownloadFileResponse) GetChunkData() []byte {
	if x, ok := x.GetData().(*DownloadFileResponse_ChunkData); ok {
		return x.ChunkData
	}
	return nil
}

type isDownloadFileResponse_Data interface {
	isDownloadFileResponse_Data()
}

type DownloadFileResponse_Info struct {
	Info *v1.FileInfo `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type DownloadFileResponse_ChunkData struct {
	ChunkData []byte `protobuf:"bytes,2,opt,name=chunk_data,json=chunkData,proto3,oneof"`
}

func (*DownloadFileResponse_Info) isDownloadFileResponse_Data() {}

func (*DownloadFileResponse_ChunkData) isDownloadFileResponse_Data() {}

type ListFileMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterBy []*ListFileMetadataRequest_ListFileFilter `protobuf:"bytes,1,rep,name=filter_by,json=filterBy,proto3" json:"filter_by,omitempty"`
	SortBy   []*ListFileMetadataRequest_ListFileSort   `protobuf:"bytes,2,rep,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
}

func (x *ListFileMetadataRequest) Reset() {
	*x = ListFileMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_fileserver_fileserver_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFileMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFileMetadataRequest) ProtoMessage() {}

func (x *ListFileMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_fileserver_fileserver_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFileMetadataRequest.ProtoReflect.Descriptor instead.
func (*ListFileMetadataRequest) Descriptor() ([]byte, []int) {
	return file_apis_fileserver_fileserver_proto_rawDescGZIP(), []int{6}
}

func (x *ListFileMetadataRequest) GetFilterBy() []*ListFileMetadataRequest_ListFileFilter {
	if x != nil {
		return x.FilterBy
	}
	return nil
}

func (x *ListFileMetadataRequest) GetSortBy() []*ListFileMetadataRequest_ListFileSort {
	if x != nil {
		return x.SortBy
	}
	return nil
}

type ListFileMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results *v1.FileInfo `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"`
}

func (x *ListFileMetadataResponse) Reset() {
	*x = ListFileMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_fileserver_fileserver_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFileMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFileMetadataResponse) ProtoMessage() {}

func (x *ListFileMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_fileserver_fileserver_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFileMetadataResponse.ProtoReflect.Descriptor instead.
func (*ListFileMetadataResponse) Descriptor() ([]byte, []int) {
	return file_apis_fileserver_fileserver_proto_rawDescGZIP(), []int{7}
}

func (x *ListFileMetadataResponse) GetResults() *v1.FileInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

type UpdateFileMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId *v1.FileID `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
}

func (x *UpdateFileMetadataRequest) Reset() {
	*x = UpdateFileMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_fileserver_fileserver_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFileMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFileMetadataRequest) ProtoMessage() {}

func (x *UpdateFileMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_fileserver_fileserver_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFileMetadataRequest.ProtoReflect.Descriptor instead.
func (*UpdateFileMetadataRequest) Descriptor() ([]byte, []int) {
	return file_apis_fileserver_fileserver_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateFileMetadataRequest) GetFileId() *v1.FileID {
	if x != nil {
		return x.FileId
	}
	return nil
}

type UpdateFileMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId *v1.FileID `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
}

func (x *UpdateFileMetadataResponse) Reset() {
	*x = UpdateFileMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_fileserver_fileserver_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFileMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFileMetadataResponse) ProtoMessage() {}

func (x *UpdateFileMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_fileserver_fileserver_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFileMetadataResponse.ProtoReflect.Descriptor instead.
func (*UpdateFileMetadataResponse) Descriptor() ([]byte, []int) {
	return file_apis_fileserver_fileserver_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateFileMetadataResponse) GetFileId() *v1.FileID {
	if x != nil {
		return x.FileId
	}
	return nil
}

// sets the files tombstone with the current timestamp
type DeleteFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId *v1.FileID `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
}

func (x *DeleteFileRequest) Reset() {
	*x = DeleteFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_fileserver_fileserver_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileRequest) ProtoMessage() {}

func (x *DeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_fileserver_fileserver_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_apis_fileserver_fileserver_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteFileRequest) GetFileId() *v1.FileID {
	if x != nil {
		return x.FileId
	}
	return nil
}

type DeleteFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId *v1.FileID `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
}

func (x *DeleteFileResponse) Reset() {
	*x = DeleteFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_fileserver_fileserver_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileResponse) ProtoMessage() {}

func (x *DeleteFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_fileserver_fileserver_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileResponse.ProtoReflect.Descriptor instead.
func (*DeleteFileResponse) Descriptor() ([]byte, []int) {
	return file_apis_fileserver_fileserver_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteFileResponse) GetFileId() *v1.FileID {
	if x != nil {
		return x.FileId
	}
	return nil
}

type CleanTombstonesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
}

func (x *CleanTombstonesRequest) Reset() {
	*x = CleanTombstonesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_fileserver_fileserver_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanTombstonesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanTombstonesRequest) ProtoMessage() {}

func (x *CleanTombstonesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_fileserver_fileserver_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanTombstonesRequest.ProtoReflect.Descriptor instead.
func (*CleanTombstonesRequest) Descriptor() ([]byte, []int) {
	return file_apis_fileserver_fileserver_proto_rawDescGZIP(), []int{12}
}

func (x *CleanTombstonesRequest) GetBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.Before
	}
	return nil
}

type CleanTombstonesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TombstonesCleaned int32        `protobuf:"varint,1,opt,name=tombstones_cleaned,json=tombstonesCleaned,proto3" json:"tombstones_cleaned,omitempty"`
	Files             []*v1.FileID `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *CleanTombstonesResponse) Reset() {
	*x = CleanTombstonesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_fileserver_fileserver_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanTombstonesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanTombstonesResponse) ProtoMessage() {}

func (x *CleanTombstonesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_fileserver_fileserver_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanTombstonesResponse.ProtoReflect.Descriptor instead.
func (*CleanTombstonesResponse) Descriptor() ([]byte, []int) {
	return file_apis_fileserver_fileserver_proto_rawDescGZIP(), []int{13}
}

func (x *CleanTombstonesResponse) GetTombstonesCleaned() int32 {
	if x != nil {
		return x.TombstonesCleaned
	}
	return 0
}

func (x *CleanTombstonesResponse) GetFiles() []*v1.FileID {
	if x != nil {
		return x.Files
	}
	return nil
}

type ListFileMetadataRequest_ListFileFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string                                            `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Operator ListFileMetadataRequest_ListFileFilter_Comparison `protobuf:"varint,2,opt,name=operator,proto3,enum=fileserver.v1.ListFileMetadataRequest_ListFileFilter_Comparison" json:"operator,omitempty"`
	Value    string                                            `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ListFileMetadataRequest_ListFileFilter) Reset() {
	*x = ListFileMetadataRequest_ListFileFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_fileserver_fileserver_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFileMetadataRequest_ListFileFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFileMetadataRequest_ListFileFilter) ProtoMessage() {}

func (x *ListFileMetadataRequest_ListFileFilter) ProtoReflect() protoreflect.Message {
	mi := &file_apis_fileserver_fileserver_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFileMetadataRequest_ListFileFilter.ProtoReflect.Descriptor instead.
func (*ListFileMetadataRequest_ListFileFilter) Descriptor() ([]byte, []int) {
	return file_apis_fileserver_fileserver_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ListFileMetadataRequest_ListFileFilter) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ListFileMetadataRequest_ListFileFilter) GetOperator() ListFileMetadataRequest_ListFileFilter_Comparison {
	if x != nil {
		return x.Operator
	}
	return ListFileMetadataRequest_ListFileFilter_EQUAL
}

func (x *ListFileMetadataRequest_ListFileFilter) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ListFileMetadataRequest_ListFileSort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       string                                         `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	SortOrder ListFileMetadataRequest_ListFileSort_SortOrder `protobuf:"varint,2,opt,name=sort_order,json=sortOrder,proto3,enum=fileserver.v1.ListFileMetadataRequest_ListFileSort_SortOrder" json:"sort_order,omitempty"`
}

func (x *ListFileMetadataRequest_ListFileSort) Reset() {
	*x = ListFileMetadataRequest_ListFileSort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_fileserver_fileserver_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFileMetadataRequest_ListFileSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFileMetadataRequest_ListFileSort) ProtoMessage() {}

func (x *ListFileMetadataRequest_ListFileSort) ProtoReflect() protoreflect.Message {
	mi := &file_apis_fileserver_fileserver_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFileMetadataRequest_ListFileSort.ProtoReflect.Descriptor instead.
func (*ListFileMetadataRequest_ListFileSort) Descriptor() ([]byte, []int) {
	return file_apis_fileserver_fileserver_proto_rawDescGZIP(), []int{6, 1}
}

func (x *ListFileMetadataRequest_ListFileSort) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ListFileMetadataRequest_ListFileSort) GetSortOrder() ListFileMetadataRequest_ListFileSort_SortOrder {
	if x != nil {
		return x.SortOrder
	}
	return ListFileMetadataRequest_ListFileSort_ASC
}

var File_apis_fileserver_fileserver_proto protoreflect.FileDescriptor

var file_apis_fileserver_fileserver_proto_rawDesc = []byte{
	0x0a, 0x20, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x1a, 0x1b, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x66, 0x0a, 0x11, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1f,
	0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x42,
	0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x53, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x43, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x22, 0x41, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0x40, 0x0a, 0x13, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x14, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xbd, 0x04, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42,
	0x79, 0x12, 0x4c, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x1a,
	0xde, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x5c, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x46, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x48, 0x41, 0x4e, 0x10, 0x01,
	0x12, 0x10, 0x0a, 0x0c, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x48, 0x41, 0x4e,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x53, 0x10, 0x03,
	0x1a, 0x9e, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x6f, 0x72,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x5c, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x6f, 0x72,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x22, 0x1e, 0x0a, 0x09, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x07,
	0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10,
	0x01, 0x22, 0x48, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x46, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x29, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x44, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x29, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x44, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x44, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x4c, 0x0a,
	0x16, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x6f, 0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x22, 0x70, 0x0a, 0x17, 0x43,
	0x6c, 0x65, 0x61, 0x6e, 0x54, 0x6f, 0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x74, 0x6f, 0x6d, 0x62, 0x73, 0x74,
	0x6f, 0x6e, 0x65, 0x73, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x74, 0x6f, 0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x73, 0x43, 0x6c,
	0x65, 0x61, 0x6e, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x32, 0xb3, 0x05,
	0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x0a,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x28, 0x01, 0x12, 0x67, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x26, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x62, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x25, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5b, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x22, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x6b, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x28, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x62, 0x0a, 0x0f, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x6f, 0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e,
	0x65, 0x73, 0x12, 0x25, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x6f, 0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54,
	0x6f, 0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x8d, 0x01, 0x0a, 0x28, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x64, 0x68,
	0x61, 0x74, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x61,
	0x69, 0x72, 0x67, 0x61, 0x70, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x42, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x01, 0x5a, 0x53,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x65, 0x64, 0x68, 0x61,
	0x74, 0x2d, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2f, 0x72, 0x65,
	0x64, 0x68, 0x61, 0x74, 0x2d, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x2d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x69, 0x72, 0x67, 0x61, 0x70,
	0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apis_fileserver_fileserver_proto_rawDescOnce sync.Once
	file_apis_fileserver_fileserver_proto_rawDescData = file_apis_fileserver_fileserver_proto_rawDesc
)

func file_apis_fileserver_fileserver_proto_rawDescGZIP() []byte {
	file_apis_fileserver_fileserver_proto_rawDescOnce.Do(func() {
		file_apis_fileserver_fileserver_proto_rawDescData = protoimpl.X.CompressGZIP(file_apis_fileserver_fileserver_proto_rawDescData)
	})
	return file_apis_fileserver_fileserver_proto_rawDescData
}

var file_apis_fileserver_fileserver_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_apis_fileserver_fileserver_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_apis_fileserver_fileserver_proto_goTypes = []interface{}{
	(ListFileMetadataRequest_ListFileFilter_Comparison)(0), // 0: fileserver.v1.ListFileMetadataRequest.ListFileFilter.Comparison
	(ListFileMetadataRequest_ListFileSort_SortOrder)(0),    // 1: fileserver.v1.ListFileMetadataRequest.ListFileSort.SortOrder
	(*UploadFileRequest)(nil),                              // 2: fileserver.v1.UploadFileRequest
	(*UploadFileResponse)(nil),                             // 3: fileserver.v1.UploadFileResponse
	(*GetFileMetadataRequest)(nil),                         // 4: fileserver.v1.GetFileMetadataRequest
	(*GetFileMetadataResponse)(nil),                        // 5: fileserver.v1.GetFileMetadataResponse
	(*DownloadFileRequest)(nil),                            // 6: fileserver.v1.DownloadFileRequest
	(*DownloadFileResponse)(nil),                           // 7: fileserver.v1.DownloadFileResponse
	(*ListFileMetadataRequest)(nil),                        // 8: fileserver.v1.ListFileMetadataRequest
	(*ListFileMetadataResponse)(nil),                       // 9: fileserver.v1.ListFileMetadataResponse
	(*UpdateFileMetadataRequest)(nil),                      // 10: fileserver.v1.UpdateFileMetadataRequest
	(*UpdateFileMetadataResponse)(nil),                     // 11: fileserver.v1.UpdateFileMetadataResponse
	(*DeleteFileRequest)(nil),                              // 12: fileserver.v1.DeleteFileRequest
	(*DeleteFileResponse)(nil),                             // 13: fileserver.v1.DeleteFileResponse
	(*CleanTombstonesRequest)(nil),                         // 14: fileserver.v1.CleanTombstonesRequest
	(*CleanTombstonesResponse)(nil),                        // 15: fileserver.v1.CleanTombstonesResponse
	(*ListFileMetadataRequest_ListFileFilter)(nil),         // 16: fileserver.v1.ListFileMetadataRequest.ListFileFilter
	(*ListFileMetadataRequest_ListFileSort)(nil),           // 17: fileserver.v1.ListFileMetadataRequest.ListFileSort
	(*v1.FileInfo)(nil),                                    // 18: model.v1.FileInfo
	(*v1.FileID)(nil),                                      // 19: model.v1.FileID
	(*timestamppb.Timestamp)(nil),                          // 20: google.protobuf.Timestamp
}
var file_apis_fileserver_fileserver_proto_depIdxs = []int32{
	18, // 0: fileserver.v1.UploadFileRequest.info:type_name -> model.v1.FileInfo
	19, // 1: fileserver.v1.UploadFileResponse.file_id:type_name -> model.v1.FileID
	19, // 2: fileserver.v1.GetFileMetadataRequest.file_id:type_name -> model.v1.FileID
	18, // 3: fileserver.v1.GetFileMetadataResponse.info:type_name -> model.v1.FileInfo
	19, // 4: fileserver.v1.DownloadFileRequest.file_id:type_name -> model.v1.FileID
	18, // 5: fileserver.v1.DownloadFileResponse.info:type_name -> model.v1.FileInfo
	16, // 6: fileserver.v1.ListFileMetadataRequest.filter_by:type_name -> fileserver.v1.ListFileMetadataRequest.ListFileFilter
	17, // 7: fileserver.v1.ListFileMetadataRequest.sort_by:type_name -> fileserver.v1.ListFileMetadataRequest.ListFileSort
	18, // 8: fileserver.v1.ListFileMetadataResponse.results:type_name -> model.v1.FileInfo
	19, // 9: fileserver.v1.UpdateFileMetadataRequest.file_id:type_name -> model.v1.FileID
	19, // 10: fileserver.v1.UpdateFileMetadataResponse.file_id:type_name -> model.v1.FileID
	19, // 11: fileserver.v1.DeleteFileRequest.file_id:type_name -> model.v1.FileID
	19, // 12: fileserver.v1.DeleteFileResponse.file_id:type_name -> model.v1.FileID
	20, // 13: fileserver.v1.CleanTombstonesRequest.before:type_name -> google.protobuf.Timestamp
	19, // 14: fileserver.v1.CleanTombstonesResponse.files:type_name -> model.v1.FileID
	0,  // 15: fileserver.v1.ListFileMetadataRequest.ListFileFilter.operator:type_name -> fileserver.v1.ListFileMetadataRequest.ListFileFilter.Comparison
	1,  // 16: fileserver.v1.ListFileMetadataRequest.ListFileSort.sort_order:type_name -> fileserver.v1.ListFileMetadataRequest.ListFileSort.SortOrder
	2,  // 17: fileserver.v1.FileServer.UploadFile:input_type -> fileserver.v1.UploadFileRequest
	8,  // 18: fileserver.v1.FileServer.ListFileMetadata:input_type -> fileserver.v1.ListFileMetadataRequest
	4,  // 19: fileserver.v1.FileServer.GetFileMetadata:input_type -> fileserver.v1.GetFileMetadataRequest
	6,  // 20: fileserver.v1.FileServer.DownloadFile:input_type -> fileserver.v1.DownloadFileRequest
	10, // 21: fileserver.v1.FileServer.UpdateFileMetadata:input_type -> fileserver.v1.UpdateFileMetadataRequest
	12, // 22: fileserver.v1.FileServer.DeleteFile:input_type -> fileserver.v1.DeleteFileRequest
	14, // 23: fileserver.v1.FileServer.CleanTombstones:input_type -> fileserver.v1.CleanTombstonesRequest
	3,  // 24: fileserver.v1.FileServer.UploadFile:output_type -> fileserver.v1.UploadFileResponse
	9,  // 25: fileserver.v1.FileServer.ListFileMetadata:output_type -> fileserver.v1.ListFileMetadataResponse
	5,  // 26: fileserver.v1.FileServer.GetFileMetadata:output_type -> fileserver.v1.GetFileMetadataResponse
	7,  // 27: fileserver.v1.FileServer.DownloadFile:output_type -> fileserver.v1.DownloadFileResponse
	11, // 28: fileserver.v1.FileServer.UpdateFileMetadata:output_type -> fileserver.v1.UpdateFileMetadataResponse
	13, // 29: fileserver.v1.FileServer.DeleteFile:output_type -> fileserver.v1.DeleteFileResponse
	15, // 30: fileserver.v1.FileServer.CleanTombstones:output_type -> fileserver.v1.CleanTombstonesResponse
	24, // [24:31] is the sub-list for method output_type
	17, // [17:24] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_apis_fileserver_fileserver_proto_init() }
func file_apis_fileserver_fileserver_proto_init() {
	if File_apis_fileserver_fileserver_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apis_fileserver_fileserver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_fileserver_fileserver_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_fileserver_fileserver_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_fileserver_fileserver_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_fileserver_fileserver_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_fileserver_fileserver_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_fileserver_fileserver_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFileMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_fileserver_fileserver_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFileMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_fileserver_fileserver_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFileMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_fileserver_fileserver_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFileMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_fileserver_fileserver_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_fileserver_fileserver_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_fileserver_fileserver_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanTombstonesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_fileserver_fileserver_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanTombstonesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_fileserver_fileserver_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFileMetadataRequest_ListFileFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_fileserver_fileserver_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFileMetadataRequest_ListFileSort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_apis_fileserver_fileserver_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*UploadFileRequest_Info)(nil),
		(*UploadFileRequest_ChunkData)(nil),
	}
	file_apis_fileserver_fileserver_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*DownloadFileResponse_Info)(nil),
		(*DownloadFileResponse_ChunkData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apis_fileserver_fileserver_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apis_fileserver_fileserver_proto_goTypes,
		DependencyIndexes: file_apis_fileserver_fileserver_proto_depIdxs,
		EnumInfos:         file_apis_fileserver_fileserver_proto_enumTypes,
		MessageInfos:      file_apis_fileserver_fileserver_proto_msgTypes,
	}.Build()
	File_apis_fileserver_fileserver_proto = out.File
	file_apis_fileserver_fileserver_proto_rawDesc = nil
	file_apis_fileserver_fileserver_proto_goTypes = nil
	file_apis_fileserver_fileserver_proto_depIdxs = nil
}
