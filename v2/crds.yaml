apiVersion: v1
items:
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: "2020-12-15T02:12:03Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:controller-gen.kubebuilder.io/version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-12-15T02:12:03Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-12-15T02:12:03Z"
    name: alertmanagers.monitoring.coreos.com
    resourceVersion: "15669413"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/alertmanagers.monitoring.coreos.com
    uid: 65097ae2-0ae5-4eeb-a440-b9a19f69d26d
  spec:
    conversion:
      strategy: None
    group: monitoring.coreos.com
    names:
      kind: Alertmanager
      listKind: AlertmanagerList
      plural: alertmanagers
      singular: alertmanager
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: The version of Alertmanager
        jsonPath: .spec.version
        name: Version
        type: string
      - description: The desired replicas number of Alertmanagers
        jsonPath: .spec.replicas
        name: Replicas
        type: integer
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: Alertmanager describes an Alertmanager cluster.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: 'Specification of the desired behavior of the Alertmanager
                cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
              properties:
                additionalPeers:
                  description: AdditionalPeers allows injecting a set of additional
                    Alertmanagers to peer with to form a highly available cluster.
                  items:
                    type: string
                  type: array
                affinity:
                  description: If specified, the pod's scheduling constraints.
                  properties:
                    nodeAffinity:
                      description: Describes node affinity scheduling rules for the
                        pod.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            matches the corresponding matchExpressions; the node(s)
                            with the highest sum are the most preferred.
                          items:
                            description: An empty preferred scheduling term matches
                              all objects with implicit weight 0 (i.e. it's a no-op).
                              A null preferred scheduling term matches no objects
                              (i.e. is also a no-op).
                            properties:
                              preference:
                                description: A node selector term, associated with
                                  the corresponding weight.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              weight:
                                description: Weight associated with matching the corresponding
                                  nodeSelectorTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - preference
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by this
                            field are not met at scheduling time, the pod will not
                            be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to an update), the system
                            may or may not try to eventually evict the pod from its
                            node.
                          properties:
                            nodeSelectorTerms:
                              description: Required. A list of node selector terms.
                                The terms are ORed.
                              items:
                                description: A null or empty node selector term matches
                                  no objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a subset
                                  of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              type: array
                          required:
                          - nodeSelectorTerms
                          type: object
                      type: object
                    podAffinity:
                      description: Describes pod affinity scheduling rules (e.g. co-locate
                        this pod in the same node, zone, etc. as some other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            has pods which matches the corresponding podAffinityTerm;
                            the node(s) with the highest sum are the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Required. A pod affinity term, associated
                                  with the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - podAffinityTerm
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by this
                            field are not met at scheduling time, the pod will not
                            be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to a pod label update),
                            the system may or may not try to eventually evict the
                            pod from its node. When there are multiple elements, the
                            lists of nodes corresponding to each podAffinityTerm are
                            intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label query over a set of resources,
                                  in this case pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      description: Describes pod anti-affinity scheduling rules (e.g.
                        avoid putting this pod in the same node, zone, etc. as some
                        other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the anti-affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling anti-affinity
                            expressions, etc.), compute a sum by iterating through
                            the elements of this field and adding "weight" to the
                            sum if the node has pods which matches the corresponding
                            podAffinityTerm; the node(s) with the highest sum are
                            the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Required. A pod affinity term, associated
                                  with the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - podAffinityTerm
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the anti-affinity requirements specified
                            by this field are not met at scheduling time, the pod
                            will not be scheduled onto the node. If the anti-affinity
                            requirements specified by this field cease to be met at
                            some point during pod execution (e.g. due to a pod label
                            update), the system may or may not try to eventually evict
                            the pod from its node. When there are multiple elements,
                            the lists of nodes corresponding to each podAffinityTerm
                            are intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label query over a set of resources,
                                  in this case pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                  type: object
                baseImage:
                  description: 'Base image that is used to deploy pods, without tag.
                    Deprecated: use ''image'' instead'
                  type: string
                clusterAdvertiseAddress:
                  description: 'ClusterAdvertiseAddress is the explicit address to
                    advertise in cluster. Needs to be provided for non RFC1918 [1]
                    (public) addresses. [1] RFC1918: https://tools.ietf.org/html/rfc1918'
                  type: string
                configMaps:
                  description: ConfigMaps is a list of ConfigMaps in the same namespace
                    as the Alertmanager object, which shall be mounted into the Alertmanager
                    Pods. The ConfigMaps are mounted into /etc/alertmanager/configmaps/<configmap-name>.
                  items:
                    type: string
                  type: array
                configSecret:
                  description: ConfigSecret is the name of a Kubernetes Secret in
                    the same namespace as the Alertmanager object, which contains
                    configuration for this Alertmanager instance. Defaults to 'alertmanager-<alertmanager-name>'
                    The secret is mounted into /etc/alertmanager/config.
                  type: string
                containers:
                  description: Containers allows injecting additional containers.
                    This is meant to allow adding an authentication proxy to an Alertmanager
                    pod.
                  items:
                    description: A single application container that you want to run
                      within a pod.
                    properties:
                      args:
                        description: 'Arguments to the entrypoint. The docker image''s
                          CMD is used if this is not provided. Variable references
                          $(VAR_NAME) are expanded using the container''s environment.
                          If a variable cannot be resolved, the reference in the input
                          string will be unchanged. The $(VAR_NAME) syntax can be
                          escaped with a double $$, ie: $$(VAR_NAME). Escaped references
                          will never be expanded, regardless of whether the variable
                          exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        items:
                          type: string
                        type: array
                      command:
                        description: 'Entrypoint array. Not executed within a shell.
                          The docker image''s ENTRYPOINT is used if this is not provided.
                          Variable references $(VAR_NAME) are expanded using the container''s
                          environment. If a variable cannot be resolved, the reference
                          in the input string will be unchanged. The $(VAR_NAME) syntax
                          can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
                          references will never be expanded, regardless of whether
                          the variable exists or not. Cannot be updated. More info:
                          https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        items:
                          type: string
                        type: array
                      env:
                        description: List of environment variables to set in the container.
                          Cannot be updated.
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previous defined environment variables in
                                the container and any service environment variables.
                                If a variable cannot be resolved, the reference in
                                the input string will be unchanged. The $(VAR_NAME)
                                syntax can be escaped with a double $$, ie: $$(VAR_NAME).
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to
                                "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, metadata.labels,
                                    metadata.annotations, spec.nodeName, spec.serviceAccountName,
                                    status.hostIP, status.podIP, status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      type: string
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      envFrom:
                        description: List of sources to populate environment variables
                          in the container. The keys defined within a source must
                          be a C_IDENTIFIER. All invalid keys will be reported as
                          an event when the container is starting. When a key exists
                          in multiple sources, the value associated with the last
                          source will take precedence. Values defined by an Env with
                          a duplicate key will take precedence. Cannot be updated.
                        items:
                          description: EnvFromSource represents the source of a set
                            of ConfigMaps
                          properties:
                            configMapRef:
                              description: The ConfigMap to select from
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap must
                                    be defined
                                  type: boolean
                              type: object
                            prefix:
                              description: An optional identifier to prepend to each
                                key in the ConfigMap. Must be a C_IDENTIFIER.
                              type: string
                            secretRef:
                              description: The Secret to select from
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret must be
                                    defined
                                  type: boolean
                              type: object
                          type: object
                        type: array
                      image:
                        description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                          This field is optional to allow higher level config management
                          to default or override container images in workload controllers
                          like Deployments and StatefulSets.'
                        type: string
                      imagePullPolicy:
                        description: 'Image pull policy. One of Always, Never, IfNotPresent.
                          Defaults to Always if :latest tag is specified, or IfNotPresent
                          otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                        type: string
                      lifecycle:
                        description: Actions that the management system should take
                          in response to container lifecycle events. Cannot be updated.
                        properties:
                          postStart:
                            description: 'PostStart is called immediately after a
                              container is created. If the handler fails, the container
                              is terminated and restarted according to its restart
                              policy. Other management of the container blocks until
                              the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                            type: object
                          preStop:
                            description: 'PreStop is called immediately before a container
                              is terminated due to an API request or management event
                              such as liveness/startup probe failure, preemption,
                              resource contention, etc. The handler is not called
                              if the container crashes or exits. The reason for termination
                              is passed to the handler. The Pod''s termination grace
                              period countdown begins before the PreStop hooked is
                              executed. Regardless of the outcome of the handler,
                              the container will eventually terminate within the Pod''s
                              termination grace period. Other management of the container
                              blocks until the hook completes or until the termination
                              grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                            type: object
                        type: object
                      livenessProbe:
                        description: 'Periodic probe of container liveness. Container
                          will be restarted if the probe fails. Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      name:
                        description: Name of the container specified as a DNS_LABEL.
                          Each container in a pod must have a unique name (DNS_LABEL).
                          Cannot be updated.
                        type: string
                      ports:
                        description: List of ports to expose from the container. Exposing
                          a port here gives the system additional information about
                          the network connections a container uses, but is primarily
                          informational. Not specifying a port here DOES NOT prevent
                          that port from being exposed. Any port which is listening
                          on the default "0.0.0.0" address inside a container will
                          be accessible from the network. Cannot be updated.
                        items:
                          description: ContainerPort represents a network port in
                            a single container.
                          properties:
                            containerPort:
                              description: Number of port to expose on the pod's IP
                                address. This must be a valid port number, 0 < x <
                                65536.
                              format: int32
                              type: integer
                            hostIP:
                              description: What host IP to bind the external port
                                to.
                              type: string
                            hostPort:
                              description: Number of port to expose on the host. If
                                specified, this must be a valid port number, 0 < x
                                < 65536. If HostNetwork is specified, this must match
                                ContainerPort. Most containers do not need this.
                              format: int32
                              type: integer
                            name:
                              description: If specified, this must be an IANA_SVC_NAME
                                and unique within the pod. Each named port in a pod
                                must have a unique name. Name for the port that can
                                be referred to by services.
                              type: string
                            protocol:
                              description: Protocol for port. Must be UDP, TCP, or
                                SCTP. Defaults to "TCP".
                              type: string
                          required:
                          - containerPort
                          type: object
                        type: array
                      readinessProbe:
                        description: 'Periodic probe of container service readiness.
                          Container will be removed from service endpoints if the
                          probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      resources:
                        description: 'Compute Resources required by this container.
                          Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        properties:
                          limits:
                            additionalProperties:
                              type: string
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                          requests:
                            additionalProperties:
                              type: string
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                        type: object
                      securityContext:
                        description: 'Security options the pod should run with. More
                          info: https://kubernetes.io/docs/concepts/policy/security-context/
                          More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                        properties:
                          allowPrivilegeEscalation:
                            description: 'AllowPrivilegeEscalation controls whether
                              a process can gain more privileges than its parent process.
                              This bool directly controls if the no_new_privs flag
                              will be set on the container process. AllowPrivilegeEscalation
                              is true always when the container is: 1) run as Privileged
                              2) has CAP_SYS_ADMIN'
                            type: boolean
                          capabilities:
                            description: The capabilities to add/drop when running
                              containers. Defaults to the default set of capabilities
                              granted by the container runtime.
                            properties:
                              add:
                                description: Added capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                              drop:
                                description: Removed capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                            type: object
                          privileged:
                            description: Run container in privileged mode. Processes
                              in privileged containers are essentially equivalent
                              to root on the host. Defaults to false.
                            type: boolean
                          procMount:
                            description: procMount denotes the type of proc mount
                              to use for the containers. The default is DefaultProcMount
                              which uses the container runtime defaults for readonly
                              paths and masked paths. This requires the ProcMountType
                              feature flag to be enabled.
                            type: string
                          readOnlyRootFilesystem:
                            description: Whether this container has a read-only root
                              filesystem. Default is false.
                            type: boolean
                          runAsGroup:
                            description: The GID to run the entrypoint of the container
                              process. Uses runtime default if unset. May also be
                              set in PodSecurityContext.  If set in both SecurityContext
                              and PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            format: int64
                            type: integer
                          runAsNonRoot:
                            description: Indicates that the container must run as
                              a non-root user. If true, the Kubelet will validate
                              the image at runtime to ensure that it does not run
                              as UID 0 (root) and fail to start the container if it
                              does. If unset or false, no such validation will be
                              performed. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: The UID to run the entrypoint of the container
                              process. Defaults to user specified in image metadata
                              if unspecified. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence.
                            format: int64
                            type: integer
                          seLinuxOptions:
                            description: The SELinux context to be applied to the
                              container. If unspecified, the container runtime will
                              allocate a random SELinux context for each container.  May
                              also be set in PodSecurityContext.  If set in both SecurityContext
                              and PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          windowsOptions:
                            description: The Windows specific settings applied to
                              all containers. If unspecified, the options from the
                              PodSecurityContext will be used. If set in both SecurityContext
                              and PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            properties:
                              gmsaCredentialSpec:
                                description: GMSACredentialSpec is where the GMSA
                                  admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                  inlines the contents of the GMSA credential spec
                                  named by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of
                                  the GMSA credential spec to use.
                                type: string
                              runAsUserName:
                                description: The UserName in Windows to run the entrypoint
                                  of the container process. Defaults to the user specified
                                  in image metadata if unspecified. May also be set
                                  in PodSecurityContext. If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                type: string
                            type: object
                        type: object
                      startupProbe:
                        description: 'StartupProbe indicates that the Pod has successfully
                          initialized. If specified, no other probes are executed
                          until this completes successfully. If this probe fails,
                          the Pod will be restarted, just as if the livenessProbe
                          failed. This can be used to provide different probe parameters
                          at the beginning of a Pod''s lifecycle, when it might take
                          a long time to load data or warm a cache, than during steady-state
                          operation. This cannot be updated. This is a beta feature
                          enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      stdin:
                        description: Whether this container should allocate a buffer
                          for stdin in the container runtime. If this is not set,
                          reads from stdin in the container will always result in
                          EOF. Default is false.
                        type: boolean
                      stdinOnce:
                        description: Whether the container runtime should close the
                          stdin channel after it has been opened by a single attach.
                          When stdin is true the stdin stream will remain open across
                          multiple attach sessions. If stdinOnce is set to true, stdin
                          is opened on container start, is empty until the first client
                          attaches to stdin, and then remains open and accepts data
                          until the client disconnects, at which time stdin is closed
                          and remains closed until the container is restarted. If
                          this flag is false, a container processes that reads from
                          stdin will never receive an EOF. Default is false
                        type: boolean
                      terminationMessagePath:
                        description: 'Optional: Path at which the file to which the
                          container''s termination message will be written is mounted
                          into the container''s filesystem. Message written is intended
                          to be brief final status, such as an assertion failure message.
                          Will be truncated by the node if greater than 4096 bytes.
                          The total message length across all containers will be limited
                          to 12kb. Defaults to /dev/termination-log. Cannot be updated.'
                        type: string
                      terminationMessagePolicy:
                        description: Indicate how the termination message should be
                          populated. File will use the contents of terminationMessagePath
                          to populate the container status message on both success
                          and failure. FallbackToLogsOnError will use the last chunk
                          of container log output if the termination message file
                          is empty and the container exited with an error. The log
                          output is limited to 2048 bytes or 80 lines, whichever is
                          smaller. Defaults to File. Cannot be updated.
                        type: string
                      tty:
                        description: Whether this container should allocate a TTY
                          for itself, also requires 'stdin' to be true. Default is
                          false.
                        type: boolean
                      volumeDevices:
                        description: volumeDevices is the list of block devices to
                          be used by the container.
                        items:
                          description: volumeDevice describes a mapping of a raw block
                            device within a container.
                          properties:
                            devicePath:
                              description: devicePath is the path inside of the container
                                that the device will be mapped to.
                              type: string
                            name:
                              description: name must match the name of a persistentVolumeClaim
                                in the pod
                              type: string
                          required:
                          - devicePath
                          - name
                          type: object
                        type: array
                      volumeMounts:
                        description: Pod volumes to mount into the container's filesystem.
                          Cannot be updated.
                        items:
                          description: VolumeMount describes a mounting of a Volume
                            within a container.
                          properties:
                            mountPath:
                              description: Path within the container at which the
                                volume should be mounted.  Must not contain ':'.
                              type: string
                            mountPropagation:
                              description: mountPropagation determines how mounts
                                are propagated from the host to container and the
                                other way around. When not set, MountPropagationNone
                                is used. This field is beta in 1.10.
                              type: string
                            name:
                              description: This must match the Name of a Volume.
                              type: string
                            readOnly:
                              description: Mounted read-only if true, read-write otherwise
                                (false or unspecified). Defaults to false.
                              type: boolean
                            subPath:
                              description: Path within the volume from which the container's
                                volume should be mounted. Defaults to "" (volume's
                                root).
                              type: string
                            subPathExpr:
                              description: Expanded path within the volume from which
                                the container's volume should be mounted. Behaves
                                similarly to SubPath but environment variable references
                                $(VAR_NAME) are expanded using the container's environment.
                                Defaults to "" (volume's root). SubPathExpr and SubPath
                                are mutually exclusive.
                              type: string
                          required:
                          - mountPath
                          - name
                          type: object
                        type: array
                      workingDir:
                        description: Container's working directory. If not specified,
                          the container runtime's default will be used, which might
                          be configured in the container image. Cannot be updated.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                externalUrl:
                  description: The external URL the Alertmanager instances will be
                    available under. This is necessary to generate correct URLs. This
                    is necessary if Alertmanager is not served from root of a DNS
                    name.
                  type: string
                forceEnableClusterMode:
                  description: ForceEnableClusterMode ensures Alertmanager does not
                    deactivate the cluster mode when running with a single replica.
                    Use case is e.g. spanning an Alertmanager cluster across Kubernetes
                    clusters with a single replica in each.
                  type: boolean
                image:
                  description: Image if specified has precedence over baseImage, tag
                    and sha combinations. Specifying the version is still necessary
                    to ensure the Prometheus Operator knows what version of Alertmanager
                    is being configured.
                  type: string
                imagePullSecrets:
                  description: An optional list of references to secrets in the same
                    namespace to use for pulling prometheus and alertmanager images
                    from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
                  items:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  type: array
                initContainers:
                  description: 'InitContainers allows adding initContainers to the
                    pod definition. Those can be used to e.g. fetch secrets for injection
                    into the Alertmanager configuration from external sources. Any
                    errors during the execution of an initContainer will lead to a
                    restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                    Using initContainers for any use case other then secret fetching
                    is entirely outside the scope of what the maintainers will support
                    and by doing so, you accept that this behaviour may break at any
                    time without notice.'
                  items:
                    description: A single application container that you want to run
                      within a pod.
                    properties:
                      args:
                        description: 'Arguments to the entrypoint. The docker image''s
                          CMD is used if this is not provided. Variable references
                          $(VAR_NAME) are expanded using the container''s environment.
                          If a variable cannot be resolved, the reference in the input
                          string will be unchanged. The $(VAR_NAME) syntax can be
                          escaped with a double $$, ie: $$(VAR_NAME). Escaped references
                          will never be expanded, regardless of whether the variable
                          exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        items:
                          type: string
                        type: array
                      command:
                        description: 'Entrypoint array. Not executed within a shell.
                          The docker image''s ENTRYPOINT is used if this is not provided.
                          Variable references $(VAR_NAME) are expanded using the container''s
                          environment. If a variable cannot be resolved, the reference
                          in the input string will be unchanged. The $(VAR_NAME) syntax
                          can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
                          references will never be expanded, regardless of whether
                          the variable exists or not. Cannot be updated. More info:
                          https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        items:
                          type: string
                        type: array
                      env:
                        description: List of environment variables to set in the container.
                          Cannot be updated.
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previous defined environment variables in
                                the container and any service environment variables.
                                If a variable cannot be resolved, the reference in
                                the input string will be unchanged. The $(VAR_NAME)
                                syntax can be escaped with a double $$, ie: $$(VAR_NAME).
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to
                                "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, metadata.labels,
                                    metadata.annotations, spec.nodeName, spec.serviceAccountName,
                                    status.hostIP, status.podIP, status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      type: string
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      envFrom:
                        description: List of sources to populate environment variables
                          in the container. The keys defined within a source must
                          be a C_IDENTIFIER. All invalid keys will be reported as
                          an event when the container is starting. When a key exists
                          in multiple sources, the value associated with the last
                          source will take precedence. Values defined by an Env with
                          a duplicate key will take precedence. Cannot be updated.
                        items:
                          description: EnvFromSource represents the source of a set
                            of ConfigMaps
                          properties:
                            configMapRef:
                              description: The ConfigMap to select from
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap must
                                    be defined
                                  type: boolean
                              type: object
                            prefix:
                              description: An optional identifier to prepend to each
                                key in the ConfigMap. Must be a C_IDENTIFIER.
                              type: string
                            secretRef:
                              description: The Secret to select from
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret must be
                                    defined
                                  type: boolean
                              type: object
                          type: object
                        type: array
                      image:
                        description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                          This field is optional to allow higher level config management
                          to default or override container images in workload controllers
                          like Deployments and StatefulSets.'
                        type: string
                      imagePullPolicy:
                        description: 'Image pull policy. One of Always, Never, IfNotPresent.
                          Defaults to Always if :latest tag is specified, or IfNotPresent
                          otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                        type: string
                      lifecycle:
                        description: Actions that the management system should take
                          in response to container lifecycle events. Cannot be updated.
                        properties:
                          postStart:
                            description: 'PostStart is called immediately after a
                              container is created. If the handler fails, the container
                              is terminated and restarted according to its restart
                              policy. Other management of the container blocks until
                              the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                            type: object
                          preStop:
                            description: 'PreStop is called immediately before a container
                              is terminated due to an API request or management event
                              such as liveness/startup probe failure, preemption,
                              resource contention, etc. The handler is not called
                              if the container crashes or exits. The reason for termination
                              is passed to the handler. The Pod''s termination grace
                              period countdown begins before the PreStop hooked is
                              executed. Regardless of the outcome of the handler,
                              the container will eventually terminate within the Pod''s
                              termination grace period. Other management of the container
                              blocks until the hook completes or until the termination
                              grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                            type: object
                        type: object
                      livenessProbe:
                        description: 'Periodic probe of container liveness. Container
                          will be restarted if the probe fails. Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      name:
                        description: Name of the container specified as a DNS_LABEL.
                          Each container in a pod must have a unique name (DNS_LABEL).
                          Cannot be updated.
                        type: string
                      ports:
                        description: List of ports to expose from the container. Exposing
                          a port here gives the system additional information about
                          the network connections a container uses, but is primarily
                          informational. Not specifying a port here DOES NOT prevent
                          that port from being exposed. Any port which is listening
                          on the default "0.0.0.0" address inside a container will
                          be accessible from the network. Cannot be updated.
                        items:
                          description: ContainerPort represents a network port in
                            a single container.
                          properties:
                            containerPort:
                              description: Number of port to expose on the pod's IP
                                address. This must be a valid port number, 0 < x <
                                65536.
                              format: int32
                              type: integer
                            hostIP:
                              description: What host IP to bind the external port
                                to.
                              type: string
                            hostPort:
                              description: Number of port to expose on the host. If
                                specified, this must be a valid port number, 0 < x
                                < 65536. If HostNetwork is specified, this must match
                                ContainerPort. Most containers do not need this.
                              format: int32
                              type: integer
                            name:
                              description: If specified, this must be an IANA_SVC_NAME
                                and unique within the pod. Each named port in a pod
                                must have a unique name. Name for the port that can
                                be referred to by services.
                              type: string
                            protocol:
                              description: Protocol for port. Must be UDP, TCP, or
                                SCTP. Defaults to "TCP".
                              type: string
                          required:
                          - containerPort
                          type: object
                        type: array
                      readinessProbe:
                        description: 'Periodic probe of container service readiness.
                          Container will be removed from service endpoints if the
                          probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      resources:
                        description: 'Compute Resources required by this container.
                          Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        properties:
                          limits:
                            additionalProperties:
                              type: string
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                          requests:
                            additionalProperties:
                              type: string
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                        type: object
                      securityContext:
                        description: 'Security options the pod should run with. More
                          info: https://kubernetes.io/docs/concepts/policy/security-context/
                          More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                        properties:
                          allowPrivilegeEscalation:
                            description: 'AllowPrivilegeEscalation controls whether
                              a process can gain more privileges than its parent process.
                              This bool directly controls if the no_new_privs flag
                              will be set on the container process. AllowPrivilegeEscalation
                              is true always when the container is: 1) run as Privileged
                              2) has CAP_SYS_ADMIN'
                            type: boolean
                          capabilities:
                            description: The capabilities to add/drop when running
                              containers. Defaults to the default set of capabilities
                              granted by the container runtime.
                            properties:
                              add:
                                description: Added capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                              drop:
                                description: Removed capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                            type: object
                          privileged:
                            description: Run container in privileged mode. Processes
                              in privileged containers are essentially equivalent
                              to root on the host. Defaults to false.
                            type: boolean
                          procMount:
                            description: procMount denotes the type of proc mount
                              to use for the containers. The default is DefaultProcMount
                              which uses the container runtime defaults for readonly
                              paths and masked paths. This requires the ProcMountType
                              feature flag to be enabled.
                            type: string
                          readOnlyRootFilesystem:
                            description: Whether this container has a read-only root
                              filesystem. Default is false.
                            type: boolean
                          runAsGroup:
                            description: The GID to run the entrypoint of the container
                              process. Uses runtime default if unset. May also be
                              set in PodSecurityContext.  If set in both SecurityContext
                              and PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            format: int64
                            type: integer
                          runAsNonRoot:
                            description: Indicates that the container must run as
                              a non-root user. If true, the Kubelet will validate
                              the image at runtime to ensure that it does not run
                              as UID 0 (root) and fail to start the container if it
                              does. If unset or false, no such validation will be
                              performed. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: The UID to run the entrypoint of the container
                              process. Defaults to user specified in image metadata
                              if unspecified. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence.
                            format: int64
                            type: integer
                          seLinuxOptions:
                            description: The SELinux context to be applied to the
                              container. If unspecified, the container runtime will
                              allocate a random SELinux context for each container.  May
                              also be set in PodSecurityContext.  If set in both SecurityContext
                              and PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          windowsOptions:
                            description: The Windows specific settings applied to
                              all containers. If unspecified, the options from the
                              PodSecurityContext will be used. If set in both SecurityContext
                              and PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            properties:
                              gmsaCredentialSpec:
                                description: GMSACredentialSpec is where the GMSA
                                  admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                  inlines the contents of the GMSA credential spec
                                  named by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of
                                  the GMSA credential spec to use.
                                type: string
                              runAsUserName:
                                description: The UserName in Windows to run the entrypoint
                                  of the container process. Defaults to the user specified
                                  in image metadata if unspecified. May also be set
                                  in PodSecurityContext. If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                type: string
                            type: object
                        type: object
                      startupProbe:
                        description: 'StartupProbe indicates that the Pod has successfully
                          initialized. If specified, no other probes are executed
                          until this completes successfully. If this probe fails,
                          the Pod will be restarted, just as if the livenessProbe
                          failed. This can be used to provide different probe parameters
                          at the beginning of a Pod''s lifecycle, when it might take
                          a long time to load data or warm a cache, than during steady-state
                          operation. This cannot be updated. This is a beta feature
                          enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      stdin:
                        description: Whether this container should allocate a buffer
                          for stdin in the container runtime. If this is not set,
                          reads from stdin in the container will always result in
                          EOF. Default is false.
                        type: boolean
                      stdinOnce:
                        description: Whether the container runtime should close the
                          stdin channel after it has been opened by a single attach.
                          When stdin is true the stdin stream will remain open across
                          multiple attach sessions. If stdinOnce is set to true, stdin
                          is opened on container start, is empty until the first client
                          attaches to stdin, and then remains open and accepts data
                          until the client disconnects, at which time stdin is closed
                          and remains closed until the container is restarted. If
                          this flag is false, a container processes that reads from
                          stdin will never receive an EOF. Default is false
                        type: boolean
                      terminationMessagePath:
                        description: 'Optional: Path at which the file to which the
                          container''s termination message will be written is mounted
                          into the container''s filesystem. Message written is intended
                          to be brief final status, such as an assertion failure message.
                          Will be truncated by the node if greater than 4096 bytes.
                          The total message length across all containers will be limited
                          to 12kb. Defaults to /dev/termination-log. Cannot be updated.'
                        type: string
                      terminationMessagePolicy:
                        description: Indicate how the termination message should be
                          populated. File will use the contents of terminationMessagePath
                          to populate the container status message on both success
                          and failure. FallbackToLogsOnError will use the last chunk
                          of container log output if the termination message file
                          is empty and the container exited with an error. The log
                          output is limited to 2048 bytes or 80 lines, whichever is
                          smaller. Defaults to File. Cannot be updated.
                        type: string
                      tty:
                        description: Whether this container should allocate a TTY
                          for itself, also requires 'stdin' to be true. Default is
                          false.
                        type: boolean
                      volumeDevices:
                        description: volumeDevices is the list of block devices to
                          be used by the container.
                        items:
                          description: volumeDevice describes a mapping of a raw block
                            device within a container.
                          properties:
                            devicePath:
                              description: devicePath is the path inside of the container
                                that the device will be mapped to.
                              type: string
                            name:
                              description: name must match the name of a persistentVolumeClaim
                                in the pod
                              type: string
                          required:
                          - devicePath
                          - name
                          type: object
                        type: array
                      volumeMounts:
                        description: Pod volumes to mount into the container's filesystem.
                          Cannot be updated.
                        items:
                          description: VolumeMount describes a mounting of a Volume
                            within a container.
                          properties:
                            mountPath:
                              description: Path within the container at which the
                                volume should be mounted.  Must not contain ':'.
                              type: string
                            mountPropagation:
                              description: mountPropagation determines how mounts
                                are propagated from the host to container and the
                                other way around. When not set, MountPropagationNone
                                is used. This field is beta in 1.10.
                              type: string
                            name:
                              description: This must match the Name of a Volume.
                              type: string
                            readOnly:
                              description: Mounted read-only if true, read-write otherwise
                                (false or unspecified). Defaults to false.
                              type: boolean
                            subPath:
                              description: Path within the volume from which the container's
                                volume should be mounted. Defaults to "" (volume's
                                root).
                              type: string
                            subPathExpr:
                              description: Expanded path within the volume from which
                                the container's volume should be mounted. Behaves
                                similarly to SubPath but environment variable references
                                $(VAR_NAME) are expanded using the container's environment.
                                Defaults to "" (volume's root). SubPathExpr and SubPath
                                are mutually exclusive.
                              type: string
                          required:
                          - mountPath
                          - name
                          type: object
                        type: array
                      workingDir:
                        description: Container's working directory. If not specified,
                          the container runtime's default will be used, which might
                          be configured in the container image. Cannot be updated.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                listenLocal:
                  description: ListenLocal makes the Alertmanager server listen on
                    loopback, so that it does not bind against the Pod IP. Note this
                    is only for the Alertmanager UI, not the gossip communication.
                  type: boolean
                logFormat:
                  description: Log format for Alertmanager to be configured with.
                  type: string
                logLevel:
                  description: Log level for Alertmanager to be configured with.
                  type: string
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: Define which Nodes the Pods are scheduled on.
                  type: object
                paused:
                  description: If set to true all actions on the underlaying managed
                    objects are not goint to be performed, except for delete actions.
                  type: boolean
                podMetadata:
                  description: PodMetadata configures Labels and Annotations which
                    are propagated to the alertmanager pods.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: 'Annotations is an unstructured key value map stored
                        with a resource that may be set by external tools to store
                        and retrieve arbitrary metadata. They are not queryable and
                        should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: 'Map of string keys and values that can be used
                        to organize and categorize (scope and select) objects. May
                        match selectors of replication controllers and services. More
                        info: http://kubernetes.io/docs/user-guide/labels'
                      type: object
                    name:
                      description: 'Name must be unique within a namespace. Is required
                        when creating resources, although some resources may allow
                        a client to request the generation of an appropriate name
                        automatically. Name is primarily intended for creation idempotence
                        and configuration definition. Cannot be updated. More info:
                        http://kubernetes.io/docs/user-guide/identifiers#names'
                      type: string
                  type: object
                portName:
                  description: Port name used for the pods and governing service.
                    This defaults to web
                  type: string
                priorityClassName:
                  description: Priority class assigned to the Pods
                  type: string
                replicas:
                  description: Size is the expected size of the alertmanager cluster.
                    The controller will eventually make the size of the running cluster
                    equal to the expected size.
                  format: int32
                  type: integer
                resources:
                  description: Define resources requests and limits for single Pods.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                retention:
                  description: Time duration Alertmanager shall retain data for. Default
                    is '120h', and must match the regular expression `[0-9]+(ms|s|m|h)`
                    (milliseconds seconds minutes hours).
                  type: string
                routePrefix:
                  description: The route prefix Alertmanager registers HTTP handlers
                    for. This is useful, if using ExternalURL and a proxy is rewriting
                    HTTP routes of a request, and the actual ExternalURL is still
                    true, but the server serves requests under a different route prefix.
                    For example for use with `kubectl proxy`.
                  type: string
                secrets:
                  description: Secrets is a list of Secrets in the same namespace
                    as the Alertmanager object, which shall be mounted into the Alertmanager
                    Pods. The Secrets are mounted into /etc/alertmanager/secrets/<secret-name>.
                  items:
                    type: string
                  type: array
                securityContext:
                  description: SecurityContext holds pod-level security attributes
                    and common container settings. This defaults to the default PodSecurityContext.
                  properties:
                    fsGroup:
                      description: "A special supplemental group that applies to all
                        containers in a pod. Some volume types allow the Kubelet to
                        change the ownership of that volume to be owned by the pod:
                        \n 1. The owning GID will be the FSGroup 2. The setgid bit
                        is set (new files created in the volume will be owned by FSGroup)
                        3. The permission bits are OR'd with rw-rw---- \n If unset,
                        the Kubelet will not modify the ownership and permissions
                        of any volume."
                      format: int64
                      type: integer
                    fsGroupChangePolicy:
                      description: 'fsGroupChangePolicy defines behavior of changing
                        ownership and permission of the volume before being exposed
                        inside Pod. This field will only apply to volume types which
                        support fsGroup based ownership(and permissions). It will
                        have no effect on ephemeral volume types such as: secret,
                        configmaps and emptydir. Valid values are "OnRootMismatch"
                        and "Always". If not specified defaults to "Always".'
                      type: string
                    runAsGroup:
                      description: The GID to run the entrypoint of the container
                        process. Uses runtime default if unset. May also be set in
                        SecurityContext.  If set in both SecurityContext and PodSecurityContext,
                        the value specified in SecurityContext takes precedence for
                        that container.
                      format: int64
                      type: integer
                    runAsNonRoot:
                      description: Indicates that the container must run as a non-root
                        user. If true, the Kubelet will validate the image at runtime
                        to ensure that it does not run as UID 0 (root) and fail to
                        start the container if it does. If unset or false, no such
                        validation will be performed. May also be set in SecurityContext.  If
                        set in both SecurityContext and PodSecurityContext, the value
                        specified in SecurityContext takes precedence.
                      type: boolean
                    runAsUser:
                      description: The UID to run the entrypoint of the container
                        process. Defaults to user specified in image metadata if unspecified.
                        May also be set in SecurityContext.  If set in both SecurityContext
                        and PodSecurityContext, the value specified in SecurityContext
                        takes precedence for that container.
                      format: int64
                      type: integer
                    seLinuxOptions:
                      description: The SELinux context to be applied to all containers.
                        If unspecified, the container runtime will allocate a random
                        SELinux context for each container.  May also be set in SecurityContext.  If
                        set in both SecurityContext and PodSecurityContext, the value
                        specified in SecurityContext takes precedence for that container.
                      properties:
                        level:
                          description: Level is SELinux level label that applies to
                            the container.
                          type: string
                        role:
                          description: Role is a SELinux role label that applies to
                            the container.
                          type: string
                        type:
                          description: Type is a SELinux type label that applies to
                            the container.
                          type: string
                        user:
                          description: User is a SELinux user label that applies to
                            the container.
                          type: string
                      type: object
                    supplementalGroups:
                      description: A list of groups applied to the first process run
                        in each container, in addition to the container's primary
                        GID.  If unspecified, no groups will be added to any container.
                      items:
                        format: int64
                        type: integer
                      type: array
                    sysctls:
                      description: Sysctls hold a list of namespaced sysctls used
                        for the pod. Pods with unsupported sysctls (by the container
                        runtime) might fail to launch.
                      items:
                        description: Sysctl defines a kernel parameter to be set
                        properties:
                          name:
                            description: Name of a property to set
                            type: string
                          value:
                            description: Value of a property to set
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    windowsOptions:
                      description: The Windows specific settings applied to all containers.
                        If unspecified, the options within a container's SecurityContext
                        will be used. If set in both SecurityContext and PodSecurityContext,
                        the value specified in SecurityContext takes precedence.
                      properties:
                        gmsaCredentialSpec:
                          description: GMSACredentialSpec is where the GMSA admission
                            webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                            inlines the contents of the GMSA credential spec named
                            by the GMSACredentialSpecName field.
                          type: string
                        gmsaCredentialSpecName:
                          description: GMSACredentialSpecName is the name of the GMSA
                            credential spec to use.
                          type: string
                        runAsUserName:
                          description: The UserName in Windows to run the entrypoint
                            of the container process. Defaults to the user specified
                            in image metadata if unspecified. May also be set in PodSecurityContext.
                            If set in both SecurityContext and PodSecurityContext,
                            the value specified in SecurityContext takes precedence.
                          type: string
                      type: object
                  type: object
                serviceAccountName:
                  description: ServiceAccountName is the name of the ServiceAccount
                    to use to run the Prometheus Pods.
                  type: string
                sha:
                  description: 'SHA of Alertmanager container image to be deployed.
                    Defaults to the value of `version`. Similar to a tag, but the
                    SHA explicitly deploys an immutable container image. Version and
                    Tag are ignored if SHA is set. Deprecated: use ''image'' instead.  The
                    image digest can be specified as part of the image URL.'
                  type: string
                storage:
                  description: Storage is the definition of how storage will be used
                    by the Alertmanager instances.
                  properties:
                    disableMountSubPath:
                      description: 'Deprecated: subPath usage will be disabled by
                        default in a future release, this option will become unnecessary.
                        DisableMountSubPath allows to remove any subPath usage in
                        volume mounts.'
                      type: boolean
                    emptyDir:
                      description: 'EmptyDirVolumeSource to be used by the Prometheus
                        StatefulSets. If specified, used in place of any volumeClaimTemplate.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir'
                      properties:
                        medium:
                          description: 'What type of storage medium should back this
                            directory. The default is "" which means to use the node''s
                            default medium. Must be an empty string (default) or Memory.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                          type: string
                        sizeLimit:
                          description: 'Total amount of local storage required for
                            this EmptyDir volume. The size limit is also applicable
                            for memory medium. The maximum usage on memory medium
                            EmptyDir would be the minimum value between the SizeLimit
                            specified here and the sum of memory limits of all containers
                            in a pod. The default is nil which means that the limit
                            is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                          type: string
                      type: object
                    volumeClaimTemplate:
                      description: A PVC spec to be used by the Prometheus StatefulSets.
                      properties:
                        apiVersion:
                          description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                        kind:
                          description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        metadata:
                          description: EmbeddedMetadata contains metadata relevant
                            to an EmbeddedResource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: 'Annotations is an unstructured key value
                                map stored with a resource that may be set by external
                                tools to store and retrieve arbitrary metadata. They
                                are not queryable and should be preserved when modifying
                                objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: 'Map of string keys and values that can
                                be used to organize and categorize (scope and select)
                                objects. May match selectors of replication controllers
                                and services. More info: http://kubernetes.io/docs/user-guide/labels'
                              type: object
                            name:
                              description: 'Name must be unique within a namespace.
                                Is required when creating resources, although some
                                resources may allow a client to request the generation
                                of an appropriate name automatically. Name is primarily
                                intended for creation idempotence and configuration
                                definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                              type: string
                          type: object
                        spec:
                          description: 'Spec defines the desired characteristics of
                            a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          properties:
                            accessModes:
                              description: 'AccessModes contains the desired access
                                modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                              items:
                                type: string
                              type: array
                            dataSource:
                              description: 'This field can be used to specify either:
                                * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot
                                - Beta) * An existing PVC (PersistentVolumeClaim)
                                * An existing custom resource/object that implements
                                data population (Alpha) In order to use VolumeSnapshot
                                object types, the appropriate feature gate must be
                                enabled (VolumeSnapshotDataSource or AnyVolumeDataSource)
                                If the provisioner or an external controller can support
                                the specified data source, it will create a new volume
                                based on the contents of the specified data source.
                                If the specified data source is not supported, the
                                volume will not be created and the failure will be
                                reported as an event. In the future, we plan to support
                                more data source types and the behavior of the provisioner
                                may change.'
                              properties:
                                apiGroup:
                                  description: APIGroup is the group for the resource
                                    being referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                            resources:
                              description: 'Resources represents the minimum resources
                                the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                              properties:
                                limits:
                                  additionalProperties:
                                    type: string
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    type: string
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                              type: object
                            selector:
                              description: A label query over volumes to consider
                                for binding.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            storageClassName:
                              description: 'Name of the StorageClass required by the
                                claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                              type: string
                            volumeMode:
                              description: volumeMode defines what type of volume
                                is required by the claim. Value of Filesystem is implied
                                when not included in claim spec.
                              type: string
                            volumeName:
                              description: VolumeName is the binding reference to
                                the PersistentVolume backing this claim.
                              type: string
                          type: object
                        status:
                          description: 'Status represents the current information/status
                            of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          properties:
                            accessModes:
                              description: 'AccessModes contains the actual access
                                modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                              items:
                                type: string
                              type: array
                            capacity:
                              additionalProperties:
                                type: string
                              description: Represents the actual resources of the
                                underlying volume.
                              type: object
                            conditions:
                              description: Current Condition of persistent volume
                                claim. If underlying persistent volume is being resized
                                then the Condition will be set to 'ResizeStarted'.
                              items:
                                description: PersistentVolumeClaimCondition contails
                                  details about state of pvc
                                properties:
                                  lastProbeTime:
                                    description: Last time we probed the condition.
                                    format: date-time
                                    type: string
                                  lastTransitionTime:
                                    description: Last time the condition transitioned
                                      from one status to another.
                                    format: date-time
                                    type: string
                                  message:
                                    description: Human-readable message indicating
                                      details about last transition.
                                    type: string
                                  reason:
                                    description: Unique, this should be a short, machine
                                      understandable string that gives the reason
                                      for condition's last transition. If it reports
                                      "ResizeStarted" that means the underlying persistent
                                      volume is being resized.
                                    type: string
                                  status:
                                    type: string
                                  type:
                                    description: PersistentVolumeClaimConditionType
                                      is a valid value of PersistentVolumeClaimCondition.Type
                                    type: string
                                required:
                                - status
                                - type
                                type: object
                              type: array
                            phase:
                              description: Phase represents the current phase of PersistentVolumeClaim.
                              type: string
                          type: object
                      type: object
                  type: object
                tag:
                  description: 'Tag of Alertmanager container image to be deployed.
                    Defaults to the value of `version`. Version is ignored if Tag
                    is set. Deprecated: use ''image'' instead.  The image tag can
                    be specified as part of the image URL.'
                  type: string
                tolerations:
                  description: If specified, the pod's tolerations.
                  items:
                    description: The pod this Toleration is attached to tolerates
                      any taint that matches the triple <key,value,effect> using the
                      matching operator <operator>.
                    properties:
                      effect:
                        description: Effect indicates the taint effect to match. Empty
                          means match all taint effects. When specified, allowed values
                          are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Key is the taint key that the toleration applies
                          to. Empty means match all taint keys. If the key is empty,
                          operator must be Exists; this combination means to match
                          all values and all keys.
                        type: string
                      operator:
                        description: Operator represents a key's relationship to the
                          value. Valid operators are Exists and Equal. Defaults to
                          Equal. Exists is equivalent to wildcard for value, so that
                          a pod can tolerate all taints of a particular category.
                        type: string
                      tolerationSeconds:
                        description: TolerationSeconds represents the period of time
                          the toleration (which must be of effect NoExecute, otherwise
                          this field is ignored) tolerates the taint. By default,
                          it is not set, which means tolerate the taint forever (do
                          not evict). Zero and negative values will be treated as
                          0 (evict immediately) by the system.
                        format: int64
                        type: integer
                      value:
                        description: Value is the taint value the toleration matches
                          to. If the operator is Exists, the value should be empty,
                          otherwise just a regular string.
                        type: string
                    type: object
                  type: array
                version:
                  description: Version the cluster should be on.
                  type: string
                volumeMounts:
                  description: VolumeMounts allows configuration of additional VolumeMounts
                    on the output StatefulSet definition. VolumeMounts specified will
                    be appended to other VolumeMounts in the alertmanager container,
                    that are generated as a result of StorageSpec objects.
                  items:
                    description: VolumeMount describes a mounting of a Volume within
                      a container.
                    properties:
                      mountPath:
                        description: Path within the container at which the volume
                          should be mounted.  Must not contain ':'.
                        type: string
                      mountPropagation:
                        description: mountPropagation determines how mounts are propagated
                          from the host to container and the other way around. When
                          not set, MountPropagationNone is used. This field is beta
                          in 1.10.
                        type: string
                      name:
                        description: This must match the Name of a Volume.
                        type: string
                      readOnly:
                        description: Mounted read-only if true, read-write otherwise
                          (false or unspecified). Defaults to false.
                        type: boolean
                      subPath:
                        description: Path within the volume from which the container's
                          volume should be mounted. Defaults to "" (volume's root).
                        type: string
                      subPathExpr:
                        description: Expanded path within the volume from which the
                          container's volume should be mounted. Behaves similarly
                          to SubPath but environment variable references $(VAR_NAME)
                          are expanded using the container's environment. Defaults
                          to "" (volume's root). SubPathExpr and SubPath are mutually
                          exclusive.
                        type: string
                    required:
                    - mountPath
                    - name
                    type: object
                  type: array
                volumes:
                  description: Volumes allows configuration of additional volumes
                    on the output StatefulSet definition. Volumes specified will be
                    appended to other volumes that are generated as a result of StorageSpec
                    objects.
                  items:
                    description: Volume represents a named volume in a pod that may
                      be accessed by any container in the pod.
                    properties:
                      awsElasticBlockStore:
                        description: 'AWSElasticBlockStore represents an AWS Disk
                          resource that is attached to a kubelet''s host machine and
                          then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                        properties:
                          fsType:
                            description: 'Filesystem type of the volume that you want
                              to mount. Tip: Ensure that the filesystem type is supported
                              by the host operating system. Examples: "ext4", "xfs",
                              "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                            type: string
                          partition:
                            description: 'The partition in the volume that you want
                              to mount. If omitted, the default is to mount by volume
                              name. Examples: For volume /dev/sda1, you specify the
                              partition as "1". Similarly, the volume partition for
                              /dev/sda is "0" (or you can leave the property empty).'
                            format: int32
                            type: integer
                          readOnly:
                            description: 'Specify "true" to force and set the ReadOnly
                              property in VolumeMounts to "true". If omitted, the
                              default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                            type: boolean
                          volumeID:
                            description: 'Unique ID of the persistent disk resource
                              in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                            type: string
                        required:
                        - volumeID
                        type: object
                      azureDisk:
                        description: AzureDisk represents an Azure Data Disk mount
                          on the host and bind mount to the pod.
                        properties:
                          cachingMode:
                            description: 'Host Caching mode: None, Read Only, Read
                              Write.'
                            type: string
                          diskName:
                            description: The Name of the data disk in the blob storage
                            type: string
                          diskURI:
                            description: The URI the data disk in the blob storage
                            type: string
                          fsType:
                            description: Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Ex. "ext4",
                              "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          kind:
                            description: 'Expected values Shared: multiple blob disks
                              per storage account  Dedicated: single blob disk per
                              storage account  Managed: azure managed data disk (only
                              in managed availability set). defaults to shared'
                            type: string
                          readOnly:
                            description: Defaults to false (read/write). ReadOnly
                              here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                        required:
                        - diskName
                        - diskURI
                        type: object
                      azureFile:
                        description: AzureFile represents an Azure File Service mount
                          on the host and bind mount to the pod.
                        properties:
                          readOnly:
                            description: Defaults to false (read/write). ReadOnly
                              here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretName:
                            description: the name of secret that contains Azure Storage
                              Account Name and Key
                            type: string
                          shareName:
                            description: Share Name
                            type: string
                        required:
                        - secretName
                        - shareName
                        type: object
                      cephfs:
                        description: CephFS represents a Ceph FS mount on the host
                          that shares a pod's lifetime
                        properties:
                          monitors:
                            description: 'Required: Monitors is a collection of Ceph
                              monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            items:
                              type: string
                            type: array
                          path:
                            description: 'Optional: Used as the mounted root, rather
                              than the full Ceph tree, default is /'
                            type: string
                          readOnly:
                            description: 'Optional: Defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            type: boolean
                          secretFile:
                            description: 'Optional: SecretFile is the path to key
                              ring for User, default is /etc/ceph/user.secret More
                              info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            type: string
                          secretRef:
                            description: 'Optional: SecretRef is reference to the
                              authentication secret for User, default is empty. More
                              info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          user:
                            description: 'Optional: User is the rados user name, default
                              is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            type: string
                        required:
                        - monitors
                        type: object
                      cinder:
                        description: 'Cinder represents a cinder volume attached and
                          mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                        properties:
                          fsType:
                            description: 'Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Examples:
                              "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                              if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            type: string
                          readOnly:
                            description: 'Optional: Defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            type: boolean
                          secretRef:
                            description: 'Optional: points to a secret object containing
                              parameters used to connect to OpenStack.'
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          volumeID:
                            description: 'volume id used to identify the volume in
                              cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            type: string
                        required:
                        - volumeID
                        type: object
                      configMap:
                        description: ConfigMap represents a configMap that should
                          populate this volume
                        properties:
                          defaultMode:
                            description: 'Optional: mode bits to use on created files
                              by default. Must be a value between 0 and 0777. Defaults
                              to 0644. Directories within the path are not affected
                              by this setting. This might be in conflict with other
                              options that affect the file mode, like fsGroup, and
                              the result can be other mode bits set.'
                            format: int32
                            type: integer
                          items:
                            description: If unspecified, each key-value pair in the
                              Data field of the referenced ConfigMap will be projected
                              into the volume as a file whose name is the key and
                              content is the value. If specified, the listed keys
                              will be projected into the specified paths, and unlisted
                              keys will not be present. If a key is specified which
                              is not present in the ConfigMap, the volume setup will
                              error unless it is marked optional. Paths must be relative
                              and may not contain the '..' path or start with '..'.
                            items:
                              description: Maps a string key to a path within a volume.
                              properties:
                                key:
                                  description: The key to project.
                                  type: string
                                mode:
                                  description: 'Optional: mode bits to use on this
                                    file, must be a value between 0 and 0777. If not
                                    specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that
                                    affect the file mode, like fsGroup, and the result
                                    can be other mode bits set.'
                                  format: int32
                                  type: integer
                                path:
                                  description: The relative path of the file to map
                                    the key to. May not be an absolute path. May not
                                    contain the path element '..'. May not start with
                                    the string '..'.
                                  type: string
                              required:
                              - key
                              - path
                              type: object
                            type: array
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its keys
                              must be defined
                            type: boolean
                        type: object
                      csi:
                        description: CSI (Container Storage Interface) represents
                          storage that is handled by an external CSI driver (Alpha
                          feature).
                        properties:
                          driver:
                            description: Driver is the name of the CSI driver that
                              handles this volume. Consult with your admin for the
                              correct name as registered in the cluster.
                            type: string
                          fsType:
                            description: Filesystem type to mount. Ex. "ext4", "xfs",
                              "ntfs". If not provided, the empty value is passed to
                              the associated CSI driver which will determine the default
                              filesystem to apply.
                            type: string
                          nodePublishSecretRef:
                            description: NodePublishSecretRef is a reference to the
                              secret object containing sensitive information to pass
                              to the CSI driver to complete the CSI NodePublishVolume
                              and NodeUnpublishVolume calls. This field is optional,
                              and  may be empty if no secret is required. If the secret
                              object contains more than one secret, all secret references
                              are passed.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          readOnly:
                            description: Specifies a read-only configuration for the
                              volume. Defaults to false (read/write).
                            type: boolean
                          volumeAttributes:
                            additionalProperties:
                              type: string
                            description: VolumeAttributes stores driver-specific properties
                              that are passed to the CSI driver. Consult your driver's
                              documentation for supported values.
                            type: object
                        required:
                        - driver
                        type: object
                      downwardAPI:
                        description: DownwardAPI represents downward API about the
                          pod that should populate this volume
                        properties:
                          defaultMode:
                            description: 'Optional: mode bits to use on created files
                              by default. Must be a value between 0 and 0777. Defaults
                              to 0644. Directories within the path are not affected
                              by this setting. This might be in conflict with other
                              options that affect the file mode, like fsGroup, and
                              the result can be other mode bits set.'
                            format: int32
                            type: integer
                          items:
                            description: Items is a list of downward API volume file
                            items:
                              description: DownwardAPIVolumeFile represents information
                                to create the file containing the pod field
                              properties:
                                fieldRef:
                                  description: 'Required: Selects a field of the pod:
                                    only annotations, labels, name and namespace are
                                    supported.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                mode:
                                  description: 'Optional: mode bits to use on this
                                    file, must be a value between 0 and 0777. If not
                                    specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that
                                    affect the file mode, like fsGroup, and the result
                                    can be other mode bits set.'
                                  format: int32
                                  type: integer
                                path:
                                  description: 'Required: Path is  the relative path
                                    name of the file to be created. Must not be absolute
                                    or contain the ''..'' path. Must be utf-8 encoded.
                                    The first item of the relative path must not start
                                    with ''..'''
                                  type: string
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, requests.cpu and requests.memory)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      type: string
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                              required:
                              - path
                              type: object
                            type: array
                        type: object
                      emptyDir:
                        description: 'EmptyDir represents a temporary directory that
                          shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                        properties:
                          medium:
                            description: 'What type of storage medium should back
                              this directory. The default is "" which means to use
                              the node''s default medium. Must be an empty string
                              (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                            type: string
                          sizeLimit:
                            description: 'Total amount of local storage required for
                              this EmptyDir volume. The size limit is also applicable
                              for memory medium. The maximum usage on memory medium
                              EmptyDir would be the minimum value between the SizeLimit
                              specified here and the sum of memory limits of all containers
                              in a pod. The default is nil which means that the limit
                              is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                            type: string
                        type: object
                      fc:
                        description: FC represents a Fibre Channel resource that is
                          attached to a kubelet's host machine and then exposed to
                          the pod.
                        properties:
                          fsType:
                            description: 'Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Ex. "ext4",
                              "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                            type: string
                          lun:
                            description: 'Optional: FC target lun number'
                            format: int32
                            type: integer
                          readOnly:
                            description: 'Optional: Defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                            type: boolean
                          targetWWNs:
                            description: 'Optional: FC target worldwide names (WWNs)'
                            items:
                              type: string
                            type: array
                          wwids:
                            description: 'Optional: FC volume world wide identifiers
                              (wwids) Either wwids or combination of targetWWNs and
                              lun must be set, but not both simultaneously.'
                            items:
                              type: string
                            type: array
                        type: object
                      flexVolume:
                        description: FlexVolume represents a generic volume resource
                          that is provisioned/attached using an exec based plugin.
                        properties:
                          driver:
                            description: Driver is the name of the driver to use for
                              this volume.
                            type: string
                          fsType:
                            description: Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Ex. "ext4",
                              "xfs", "ntfs". The default filesystem depends on FlexVolume
                              script.
                            type: string
                          options:
                            additionalProperties:
                              type: string
                            description: 'Optional: Extra command options if any.'
                            type: object
                          readOnly:
                            description: 'Optional: Defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                            type: boolean
                          secretRef:
                            description: 'Optional: SecretRef is reference to the
                              secret object containing sensitive information to pass
                              to the plugin scripts. This may be empty if no secret
                              object is specified. If the secret object contains more
                              than one secret, all secrets are passed to the plugin
                              scripts.'
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                        required:
                        - driver
                        type: object
                      flocker:
                        description: Flocker represents a Flocker volume attached
                          to a kubelet's host machine. This depends on the Flocker
                          control service being running
                        properties:
                          datasetName:
                            description: Name of the dataset stored as metadata ->
                              name on the dataset for Flocker should be considered
                              as deprecated
                            type: string
                          datasetUUID:
                            description: UUID of the dataset. This is unique identifier
                              of a Flocker dataset
                            type: string
                        type: object
                      gcePersistentDisk:
                        description: 'GCEPersistentDisk represents a GCE Disk resource
                          that is attached to a kubelet''s host machine and then exposed
                          to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                        properties:
                          fsType:
                            description: 'Filesystem type of the volume that you want
                              to mount. Tip: Ensure that the filesystem type is supported
                              by the host operating system. Examples: "ext4", "xfs",
                              "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                            type: string
                          partition:
                            description: 'The partition in the volume that you want
                              to mount. If omitted, the default is to mount by volume
                              name. Examples: For volume /dev/sda1, you specify the
                              partition as "1". Similarly, the volume partition for
                              /dev/sda is "0" (or you can leave the property empty).
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            format: int32
                            type: integer
                          pdName:
                            description: 'Unique name of the PD resource in GCE. Used
                              to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            type: string
                          readOnly:
                            description: 'ReadOnly here will force the ReadOnly setting
                              in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            type: boolean
                        required:
                        - pdName
                        type: object
                      gitRepo:
                        description: 'GitRepo represents a git repository at a particular
                          revision. DEPRECATED: GitRepo is deprecated. To provision
                          a container with a git repo, mount an EmptyDir into an InitContainer
                          that clones the repo using git, then mount the EmptyDir
                          into the Pod''s container.'
                        properties:
                          directory:
                            description: Target directory name. Must not contain or
                              start with '..'.  If '.' is supplied, the volume directory
                              will be the git repository.  Otherwise, if specified,
                              the volume will contain the git repository in the subdirectory
                              with the given name.
                            type: string
                          repository:
                            description: Repository URL
                            type: string
                          revision:
                            description: Commit hash for the specified revision.
                            type: string
                        required:
                        - repository
                        type: object
                      glusterfs:
                        description: 'Glusterfs represents a Glusterfs mount on the
                          host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                        properties:
                          endpoints:
                            description: 'EndpointsName is the endpoint name that
                              details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                            type: string
                          path:
                            description: 'Path is the Glusterfs volume path. More
                              info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                            type: string
                          readOnly:
                            description: 'ReadOnly here will force the Glusterfs volume
                              to be mounted with read-only permissions. Defaults to
                              false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                            type: boolean
                        required:
                        - endpoints
                        - path
                        type: object
                      hostPath:
                        description: 'HostPath represents a pre-existing file or directory
                          on the host machine that is directly exposed to the container.
                          This is generally used for system agents or other privileged
                          things that are allowed to see the host machine. Most containers
                          will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                          --- TODO(jonesdl) We need to restrict who can use host directory
                          mounts and who can/can not mount host directories as read/write.'
                        properties:
                          path:
                            description: 'Path of the directory on the host. If the
                              path is a symlink, it will follow the link to the real
                              path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                            type: string
                          type:
                            description: 'Type for HostPath Volume Defaults to ""
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                            type: string
                        required:
                        - path
                        type: object
                      iscsi:
                        description: 'ISCSI represents an ISCSI Disk resource that
                          is attached to a kubelet''s host machine and then exposed
                          to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                        properties:
                          chapAuthDiscovery:
                            description: whether support iSCSI Discovery CHAP authentication
                            type: boolean
                          chapAuthSession:
                            description: whether support iSCSI Session CHAP authentication
                            type: boolean
                          fsType:
                            description: 'Filesystem type of the volume that you want
                              to mount. Tip: Ensure that the filesystem type is supported
                              by the host operating system. Examples: "ext4", "xfs",
                              "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                            type: string
                          initiatorName:
                            description: Custom iSCSI Initiator Name. If initiatorName
                              is specified with iscsiInterface simultaneously, new
                              iSCSI interface <target portal>:<volume name> will be
                              created for the connection.
                            type: string
                          iqn:
                            description: Target iSCSI Qualified Name.
                            type: string
                          iscsiInterface:
                            description: iSCSI Interface Name that uses an iSCSI transport.
                              Defaults to 'default' (tcp).
                            type: string
                          lun:
                            description: iSCSI Target Lun number.
                            format: int32
                            type: integer
                          portals:
                            description: iSCSI Target Portal List. The portal is either
                              an IP or ip_addr:port if the port is other than default
                              (typically TCP ports 860 and 3260).
                            items:
                              type: string
                            type: array
                          readOnly:
                            description: ReadOnly here will force the ReadOnly setting
                              in VolumeMounts. Defaults to false.
                            type: boolean
                          secretRef:
                            description: CHAP Secret for iSCSI target and initiator
                              authentication
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          targetPortal:
                            description: iSCSI Target Portal. The Portal is either
                              an IP or ip_addr:port if the port is other than default
                              (typically TCP ports 860 and 3260).
                            type: string
                        required:
                        - iqn
                        - lun
                        - targetPortal
                        type: object
                      name:
                        description: 'Volume''s name. Must be a DNS_LABEL and unique
                          within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      nfs:
                        description: 'NFS represents an NFS mount on the host that
                          shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                        properties:
                          path:
                            description: 'Path that is exported by the NFS server.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                            type: string
                          readOnly:
                            description: 'ReadOnly here will force the NFS export
                              to be mounted with read-only permissions. Defaults to
                              false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                            type: boolean
                          server:
                            description: 'Server is the hostname or IP address of
                              the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                            type: string
                        required:
                        - path
                        - server
                        type: object
                      persistentVolumeClaim:
                        description: 'PersistentVolumeClaimVolumeSource represents
                          a reference to a PersistentVolumeClaim in the same namespace.
                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                        properties:
                          claimName:
                            description: 'ClaimName is the name of a PersistentVolumeClaim
                              in the same namespace as the pod using this volume.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                            type: string
                          readOnly:
                            description: Will force the ReadOnly setting in VolumeMounts.
                              Default false.
                            type: boolean
                        required:
                        - claimName
                        type: object
                      photonPersistentDisk:
                        description: PhotonPersistentDisk represents a PhotonController
                          persistent disk attached and mounted on kubelets host machine
                        properties:
                          fsType:
                            description: Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Ex. "ext4",
                              "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          pdID:
                            description: ID that identifies Photon Controller persistent
                              disk
                            type: string
                        required:
                        - pdID
                        type: object
                      portworxVolume:
                        description: PortworxVolume represents a portworx volume attached
                          and mounted on kubelets host machine
                        properties:
                          fsType:
                            description: FSType represents the filesystem type to
                              mount Must be a filesystem type supported by the host
                              operating system. Ex. "ext4", "xfs". Implicitly inferred
                              to be "ext4" if unspecified.
                            type: string
                          readOnly:
                            description: Defaults to false (read/write). ReadOnly
                              here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          volumeID:
                            description: VolumeID uniquely identifies a Portworx volume
                            type: string
                        required:
                        - volumeID
                        type: object
                      projected:
                        description: Items for all in one resources secrets, configmaps,
                          and downward API
                        properties:
                          defaultMode:
                            description: Mode bits to use on created files by default.
                              Must be a value between 0 and 0777. Directories within
                              the path are not affected by this setting. This might
                              be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode
                              bits set.
                            format: int32
                            type: integer
                          sources:
                            description: list of volume projections
                            items:
                              description: Projection that may be projected along
                                with other supported volume types
                              properties:
                                configMap:
                                  description: information about the configMap data
                                    to project
                                  properties:
                                    items:
                                      description: If unspecified, each key-value
                                        pair in the Data field of the referenced ConfigMap
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified
                                        which is not present in the ConfigMap, the
                                        volume setup will error unless it is marked
                                        optional. Paths must be relative and may not
                                        contain the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: The key to project.
                                            type: string
                                          mode:
                                            description: 'Optional: mode bits to use
                                              on this file, must be a value between
                                              0 and 0777. If not specified, the volume
                                              defaultMode will be used. This might
                                              be in conflict with other options that
                                              affect the file mode, like fsGroup,
                                              and the result can be other mode bits
                                              set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: The relative path of the
                                              file to map the key to. May not be an
                                              absolute path. May not contain the path
                                              element '..'. May not start with the
                                              string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its keys must be defined
                                      type: boolean
                                  type: object
                                downwardAPI:
                                  description: information about the downwardAPI data
                                    to project
                                  properties:
                                    items:
                                      description: Items is a list of DownwardAPIVolume
                                        file
                                      items:
                                        description: DownwardAPIVolumeFile represents
                                          information to create the file containing
                                          the pod field
                                        properties:
                                          fieldRef:
                                            description: 'Required: Selects a field
                                              of the pod: only annotations, labels,
                                              name and namespace are supported.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                          mode:
                                            description: 'Optional: mode bits to use
                                              on this file, must be a value between
                                              0 and 0777. If not specified, the volume
                                              defaultMode will be used. This might
                                              be in conflict with other options that
                                              affect the file mode, like fsGroup,
                                              and the result can be other mode bits
                                              set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: 'Required: Path is  the relative
                                              path name of the file to be created.
                                              Must not be absolute or contain the
                                              ''..'' path. Must be utf-8 encoded.
                                              The first item of the relative path
                                              must not start with ''..'''
                                            type: string
                                          resourceFieldRef:
                                            description: 'Selects a resource of the
                                              container: only resources limits and
                                              requests (limits.cpu, limits.memory,
                                              requests.cpu and requests.memory) are
                                              currently supported.'
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                type: string
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                        required:
                                        - path
                                        type: object
                                      type: array
                                  type: object
                                secret:
                                  description: information about the secret data to
                                    project
                                  properties:
                                    items:
                                      description: If unspecified, each key-value
                                        pair in the Data field of the referenced Secret
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified
                                        which is not present in the Secret, the volume
                                        setup will error unless it is marked optional.
                                        Paths must be relative and may not contain
                                        the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: The key to project.
                                            type: string
                                          mode:
                                            description: 'Optional: mode bits to use
                                              on this file, must be a value between
                                              0 and 0777. If not specified, the volume
                                              defaultMode will be used. This might
                                              be in conflict with other options that
                                              affect the file mode, like fsGroup,
                                              and the result can be other mode bits
                                              set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: The relative path of the
                                              file to map the key to. May not be an
                                              absolute path. May not contain the path
                                              element '..'. May not start with the
                                              string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  type: object
                                serviceAccountToken:
                                  description: information about the serviceAccountToken
                                    data to project
                                  properties:
                                    audience:
                                      description: Audience is the intended audience
                                        of the token. A recipient of a token must
                                        identify itself with an identifier specified
                                        in the audience of the token, and otherwise
                                        should reject the token. The audience defaults
                                        to the identifier of the apiserver.
                                      type: string
                                    expirationSeconds:
                                      description: ExpirationSeconds is the requested
                                        duration of validity of the service account
                                        token. As the token approaches expiration,
                                        the kubelet volume plugin will proactively
                                        rotate the service account token. The kubelet
                                        will start trying to rotate the token if the
                                        token is older than 80 percent of its time
                                        to live or if the token is older than 24 hours.Defaults
                                        to 1 hour and must be at least 10 minutes.
                                      format: int64
                                      type: integer
                                    path:
                                      description: Path is the path relative to the
                                        mount point of the file to project the token
                                        into.
                                      type: string
                                  required:
                                  - path
                                  type: object
                              type: object
                            type: array
                        required:
                        - sources
                        type: object
                      quobyte:
                        description: Quobyte represents a Quobyte mount on the host
                          that shares a pod's lifetime
                        properties:
                          group:
                            description: Group to map volume access to Default is
                              no group
                            type: string
                          readOnly:
                            description: ReadOnly here will force the Quobyte volume
                              to be mounted with read-only permissions. Defaults to
                              false.
                            type: boolean
                          registry:
                            description: Registry represents a single or multiple
                              Quobyte Registry services specified as a string as host:port
                              pair (multiple entries are separated with commas) which
                              acts as the central registry for volumes
                            type: string
                          tenant:
                            description: Tenant owning the given Quobyte volume in
                              the Backend Used with dynamically provisioned Quobyte
                              volumes, value is set by the plugin
                            type: string
                          user:
                            description: User to map volume access to Defaults to
                              serivceaccount user
                            type: string
                          volume:
                            description: Volume is a string that references an already
                              created Quobyte volume by name.
                            type: string
                        required:
                        - registry
                        - volume
                        type: object
                      rbd:
                        description: 'RBD represents a Rados Block Device mount on
                          the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md'
                        properties:
                          fsType:
                            description: 'Filesystem type of the volume that you want
                              to mount. Tip: Ensure that the filesystem type is supported
                              by the host operating system. Examples: "ext4", "xfs",
                              "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                            type: string
                          image:
                            description: 'The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: string
                          keyring:
                            description: 'Keyring is the path to key ring for RBDUser.
                              Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: string
                          monitors:
                            description: 'A collection of Ceph monitors. More info:
                              https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            items:
                              type: string
                            type: array
                          pool:
                            description: 'The rados pool name. Default is rbd. More
                              info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: string
                          readOnly:
                            description: 'ReadOnly here will force the ReadOnly setting
                              in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: boolean
                          secretRef:
                            description: 'SecretRef is name of the authentication
                              secret for RBDUser. If provided overrides keyring. Default
                              is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          user:
                            description: 'The rados user name. Default is admin. More
                              info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: string
                        required:
                        - image
                        - monitors
                        type: object
                      scaleIO:
                        description: ScaleIO represents a ScaleIO persistent volume
                          attached and mounted on Kubernetes nodes.
                        properties:
                          fsType:
                            description: Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Ex. "ext4",
                              "xfs", "ntfs". Default is "xfs".
                            type: string
                          gateway:
                            description: The host address of the ScaleIO API Gateway.
                            type: string
                          protectionDomain:
                            description: The name of the ScaleIO Protection Domain
                              for the configured storage.
                            type: string
                          readOnly:
                            description: Defaults to false (read/write). ReadOnly
                              here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretRef:
                            description: SecretRef references to the secret for ScaleIO
                              user and other sensitive information. If this is not
                              provided, Login operation will fail.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          sslEnabled:
                            description: Flag to enable/disable SSL communication
                              with Gateway, default false
                            type: boolean
                          storageMode:
                            description: Indicates whether the storage for a volume
                              should be ThickProvisioned or ThinProvisioned. Default
                              is ThinProvisioned.
                            type: string
                          storagePool:
                            description: The ScaleIO Storage Pool associated with
                              the protection domain.
                            type: string
                          system:
                            description: The name of the storage system as configured
                              in ScaleIO.
                            type: string
                          volumeName:
                            description: The name of a volume already created in the
                              ScaleIO system that is associated with this volume source.
                            type: string
                        required:
                        - gateway
                        - secretRef
                        - system
                        type: object
                      secret:
                        description: 'Secret represents a secret that should populate
                          this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                        properties:
                          defaultMode:
                            description: 'Optional: mode bits to use on created files
                              by default. Must be a value between 0 and 0777. Defaults
                              to 0644. Directories within the path are not affected
                              by this setting. This might be in conflict with other
                              options that affect the file mode, like fsGroup, and
                              the result can be other mode bits set.'
                            format: int32
                            type: integer
                          items:
                            description: If unspecified, each key-value pair in the
                              Data field of the referenced Secret will be projected
                              into the volume as a file whose name is the key and
                              content is the value. If specified, the listed keys
                              will be projected into the specified paths, and unlisted
                              keys will not be present. If a key is specified which
                              is not present in the Secret, the volume setup will
                              error unless it is marked optional. Paths must be relative
                              and may not contain the '..' path or start with '..'.
                            items:
                              description: Maps a string key to a path within a volume.
                              properties:
                                key:
                                  description: The key to project.
                                  type: string
                                mode:
                                  description: 'Optional: mode bits to use on this
                                    file, must be a value between 0 and 0777. If not
                                    specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that
                                    affect the file mode, like fsGroup, and the result
                                    can be other mode bits set.'
                                  format: int32
                                  type: integer
                                path:
                                  description: The relative path of the file to map
                                    the key to. May not be an absolute path. May not
                                    contain the path element '..'. May not start with
                                    the string '..'.
                                  type: string
                              required:
                              - key
                              - path
                              type: object
                            type: array
                          optional:
                            description: Specify whether the Secret or its keys must
                              be defined
                            type: boolean
                          secretName:
                            description: 'Name of the secret in the pod''s namespace
                              to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                            type: string
                        type: object
                      storageos:
                        description: StorageOS represents a StorageOS volume attached
                          and mounted on Kubernetes nodes.
                        properties:
                          fsType:
                            description: Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Ex. "ext4",
                              "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          readOnly:
                            description: Defaults to false (read/write). ReadOnly
                              here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretRef:
                            description: SecretRef specifies the secret to use for
                              obtaining the StorageOS API credentials.  If not specified,
                              default values will be attempted.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          volumeName:
                            description: VolumeName is the human-readable name of
                              the StorageOS volume.  Volume names are only unique
                              within a namespace.
                            type: string
                          volumeNamespace:
                            description: VolumeNamespace specifies the scope of the
                              volume within StorageOS.  If no namespace is specified
                              then the Pod's namespace will be used.  This allows
                              the Kubernetes name scoping to be mirrored within StorageOS
                              for tighter integration. Set VolumeName to any name
                              to override the default behaviour. Set to "default"
                              if you are not using namespaces within StorageOS. Namespaces
                              that do not pre-exist within StorageOS will be created.
                            type: string
                        type: object
                      vsphereVolume:
                        description: VsphereVolume represents a vSphere volume attached
                          and mounted on kubelets host machine
                        properties:
                          fsType:
                            description: Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Ex. "ext4",
                              "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          storagePolicyID:
                            description: Storage Policy Based Management (SPBM) profile
                              ID associated with the StoragePolicyName.
                            type: string
                          storagePolicyName:
                            description: Storage Policy Based Management (SPBM) profile
                              name.
                            type: string
                          volumePath:
                            description: Path that identifies vSphere volume vmdk
                            type: string
                        required:
                        - volumePath
                        type: object
                    required:
                    - name
                    type: object
                  type: array
              type: object
            status:
              description: 'Most recent observed status of the Alertmanager cluster.
                Read-only. Not included when requesting from the apiserver, only from
                the Prometheus Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
              properties:
                availableReplicas:
                  description: Total number of available pods (ready for at least
                    minReadySeconds) targeted by this Alertmanager cluster.
                  format: int32
                  type: integer
                paused:
                  description: Represents whether any actions on the underlaying managed
                    objects are being performed. Only delete actions will be performed.
                  type: boolean
                replicas:
                  description: Total number of non-terminated pods targeted by this
                    Alertmanager cluster (their labels match the selector).
                  format: int32
                  type: integer
                unavailableReplicas:
                  description: Total number of unavailable pods targeted by this Alertmanager
                    cluster.
                  format: int32
                  type: integer
                updatedReplicas:
                  description: Total number of non-terminated pods targeted by this
                    Alertmanager cluster that have the desired version spec.
                  format: int32
                  type: integer
              required:
              - availableReplicas
              - paused
              - replicas
              - unavailableReplicas
              - updatedReplicas
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: Alertmanager
      listKind: AlertmanagerList
      plural: alertmanagers
      singular: alertmanager
    conditions:
    - lastTransitionTime: "2020-12-15T02:12:03Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-12-15T02:12:03Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-12-15T02:11:43Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-12-15T02:11:43Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-12-15T02:11:43Z"
    name: apiservers.config.openshift.io
    resourceVersion: "15669073"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/apiservers.config.openshift.io
    uid: 84bd5f5b-4a47-4dff-bc69-985c73a5a180
  spec:
    conversion:
      strategy: None
    group: config.openshift.io
    names:
      kind: APIServer
      listKind: APIServerList
      plural: apiservers
      singular: apiserver
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: APIServer holds configuration (like serving certificates, client
            CA and CORS domains) shared by all API servers in the system, among them
            especially kube-apiserver and openshift-apiserver. The canonical name
            of an instance is 'cluster'.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec holds user settable values for configuration
              properties:
                additionalCORSAllowedOrigins:
                  description: additionalCORSAllowedOrigins lists additional, user-defined
                    regular expressions describing hosts for which the API server
                    allows access using the CORS headers. This may be needed to access
                    the API and the integrated OAuth server from JavaScript applications.
                    The values are regular expressions that correspond to the Golang
                    regular expression language.
                  items:
                    type: string
                  type: array
                audit:
                  default:
                    profile: Default
                  description: audit specifies the settings for audit configuration
                    to be applied to all OpenShift-provided API servers in the cluster.
                  properties:
                    profile:
                      default: Default
                      description: "profile specifies the name of the desired audit
                        policy configuration to be deployed to all OpenShift-provided
                        API servers in the cluster. \n The following profiles are
                        provided: - Default: the existing default policy. - WriteRequestBodies:
                        like 'Default', but logs request and response HTTP payloads
                        for write requests (create, update, patch). - AllRequestBodies:
                        like 'WriteRequestBodies', but also logs request and response
                        HTTP payloads for read requests (get, list). \n If unset,
                        the 'Default' profile is used as the default."
                      enum:
                      - Default
                      - WriteRequestBodies
                      - AllRequestBodies
                      type: string
                  type: object
                clientCA:
                  description: 'clientCA references a ConfigMap containing a certificate
                    bundle for the signers that will be recognized for incoming client
                    certificates in addition to the operator managed signers. If this
                    is empty, then only operator managed signers are valid. You usually
                    only have to set this if you have your own PKI you wish to honor
                    client certificates from. The ConfigMap must exist in the openshift-config
                    namespace and contain the following required fields: - ConfigMap.Data["ca-bundle.crt"]
                    - CA bundle.'
                  properties:
                    name:
                      description: name is the metadata.name of the referenced config
                        map
                      type: string
                  required:
                  - name
                  type: object
                encryption:
                  description: encryption allows the configuration of encryption of
                    resources at the datastore layer.
                  properties:
                    type:
                      description: "type defines what encryption type should be used
                        to encrypt resources at the datastore layer. When this field
                        is unset (i.e. when it is set to the empty string), identity
                        is implied. The behavior of unset can and will change over
                        time.  Even if encryption is enabled by default, the meaning
                        of unset may change to a different encryption type based on
                        changes in best practices. \n When encryption is enabled,
                        all sensitive resources shipped with the platform are encrypted.
                        This list of sensitive resources can and will change over
                        time.  The current authoritative list is: \n   1. secrets
                        \  2. configmaps   3. routes.route.openshift.io   4. oauthaccesstokens.oauth.openshift.io
                        \  5. oauthauthorizetokens.oauth.openshift.io"
                      enum:
                      - ""
                      - identity
                      - aescbc
                      type: string
                  type: object
                servingCerts:
                  description: servingCert is the TLS cert info for serving secure
                    traffic. If not specified, operator managed certificates will
                    be used for serving secure traffic.
                  properties:
                    namedCertificates:
                      description: namedCertificates references secrets containing
                        the TLS cert info for serving secure traffic to specific hostnames.
                        If no named certificates are provided, or no named certificates
                        match the server name as understood by a client, the defaultServingCertificate
                        will be used.
                      items:
                        description: APIServerNamedServingCert maps a server DNS name,
                          as understood by a client, to a certificate.
                        properties:
                          names:
                            description: names is a optional list of explicit DNS
                              names (leading wildcards allowed) that should use this
                              certificate to serve secure traffic. If no names are
                              provided, the implicit names will be extracted from
                              the certificates. Exact names trump over wildcard names.
                              Explicit names defined here trump over extracted implicit
                              names.
                            items:
                              type: string
                            type: array
                          servingCertificate:
                            description: 'servingCertificate references a kubernetes.io/tls
                              type secret containing the TLS cert info for serving
                              secure traffic. The secret must exist in the openshift-config
                              namespace and contain the following required fields:
                              - Secret.Data["tls.key"] - TLS private key. - Secret.Data["tls.crt"]
                              - TLS certificate.'
                            properties:
                              name:
                                description: name is the metadata.name of the referenced
                                  secret
                                type: string
                            required:
                            - name
                            type: object
                        type: object
                      type: array
                  type: object
                tlsSecurityProfile:
                  description: "tlsSecurityProfile specifies settings for TLS connections
                    for externally exposed servers. \n If unset, a default (which
                    may change between releases) is chosen. Note that only Old and
                    Intermediate profiles are currently supported, and the maximum
                    available MinTLSVersions is VersionTLS12."
                  properties:
                    custom:
                      description: "custom is a user-defined TLS security profile.
                        Be extremely careful using a custom profile as invalid configurations
                        can be catastrophic. An example custom profile looks like
                        this: \n   ciphers:     - ECDHE-ECDSA-CHACHA20-POLY1305     -
                        ECDHE-RSA-CHACHA20-POLY1305     - ECDHE-RSA-AES128-GCM-SHA256
                        \    - ECDHE-ECDSA-AES128-GCM-SHA256   minTLSVersion: TLSv1.1"
                      nullable: true
                      properties:
                        ciphers:
                          description: "ciphers is used to specify the cipher algorithms
                            that are negotiated during the TLS handshake.  Operators
                            may remove entries their operands do not support.  For
                            example, to use DES-CBC3-SHA  (yaml): \n   ciphers:     -
                            DES-CBC3-SHA"
                          items:
                            type: string
                          type: array
                        minTLSVersion:
                          description: "minTLSVersion is used to specify the minimal
                            version of the TLS protocol that is negotiated during
                            the TLS handshake. For example, to use TLS versions 1.1,
                            1.2 and 1.3 (yaml): \n   minTLSVersion: TLSv1.1 \n NOTE:
                            currently the highest minTLSVersion allowed is VersionTLS12"
                          enum:
                          - VersionTLS10
                          - VersionTLS11
                          - VersionTLS12
                          - VersionTLS13
                          type: string
                      type: object
                    intermediate:
                      description: "intermediate is a TLS security profile based on:
                        \n https://wiki.mozilla.org/Security/Server_Side_TLS#Intermediate_compatibility_.28recommended.29
                        \n and looks like this (yaml): \n   ciphers:     - TLS_AES_128_GCM_SHA256
                        \    - TLS_AES_256_GCM_SHA384     - TLS_CHACHA20_POLY1305_SHA256
                        \    - ECDHE-ECDSA-AES128-GCM-SHA256     - ECDHE-RSA-AES128-GCM-SHA256
                        \    - ECDHE-ECDSA-AES256-GCM-SHA384     - ECDHE-RSA-AES256-GCM-SHA384
                        \    - ECDHE-ECDSA-CHACHA20-POLY1305     - ECDHE-RSA-CHACHA20-POLY1305
                        \    - DHE-RSA-AES128-GCM-SHA256     - DHE-RSA-AES256-GCM-SHA384
                        \  minTLSVersion: TLSv1.2"
                      nullable: true
                      type: object
                    modern:
                      description: "modern is a TLS security profile based on: \n
                        https://wiki.mozilla.org/Security/Server_Side_TLS#Modern_compatibility
                        \n and looks like this (yaml): \n   ciphers:     - TLS_AES_128_GCM_SHA256
                        \    - TLS_AES_256_GCM_SHA384     - TLS_CHACHA20_POLY1305_SHA256
                        \  minTLSVersion: TLSv1.3 \n NOTE: Currently unsupported."
                      nullable: true
                      type: object
                    old:
                      description: "old is a TLS security profile based on: \n https://wiki.mozilla.org/Security/Server_Side_TLS#Old_backward_compatibility
                        \n and looks like this (yaml): \n   ciphers:     - TLS_AES_128_GCM_SHA256
                        \    - TLS_AES_256_GCM_SHA384     - TLS_CHACHA20_POLY1305_SHA256
                        \    - ECDHE-ECDSA-AES128-GCM-SHA256     - ECDHE-RSA-AES128-GCM-SHA256
                        \    - ECDHE-ECDSA-AES256-GCM-SHA384     - ECDHE-RSA-AES256-GCM-SHA384
                        \    - ECDHE-ECDSA-CHACHA20-POLY1305     - ECDHE-RSA-CHACHA20-POLY1305
                        \    - DHE-RSA-AES128-GCM-SHA256     - DHE-RSA-AES256-GCM-SHA384
                        \    - DHE-RSA-CHACHA20-POLY1305     - ECDHE-ECDSA-AES128-SHA256
                        \    - ECDHE-RSA-AES128-SHA256     - ECDHE-ECDSA-AES128-SHA
                        \    - ECDHE-RSA-AES128-SHA     - ECDHE-ECDSA-AES256-SHA384
                        \    - ECDHE-RSA-AES256-SHA384     - ECDHE-ECDSA-AES256-SHA
                        \    - ECDHE-RSA-AES256-SHA     - DHE-RSA-AES128-SHA256     -
                        DHE-RSA-AES256-SHA256     - AES128-GCM-SHA256     - AES256-GCM-SHA384
                        \    - AES128-SHA256     - AES256-SHA256     - AES128-SHA
                        \    - AES256-SHA     - DES-CBC3-SHA   minTLSVersion: TLSv1.0"
                      nullable: true
                      type: object
                    type:
                      description: "type is one of Old, Intermediate, Modern or Custom.
                        Custom provides the ability to specify individual TLS security
                        profile parameters. Old, Intermediate and Modern are TLS security
                        profiles based on: \n https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations
                        \n The profiles are intent based, so they may change over
                        time as new ciphers are developed and existing ciphers are
                        found to be insecure.  Depending on precisely which ciphers
                        are available to a process, the list may be reduced. \n Note
                        that the Modern profile is currently not supported because
                        it is not yet well adopted by common software libraries."
                      enum:
                      - Old
                      - Intermediate
                      - Modern
                      - Custom
                      type: string
                  type: object
              type: object
            status:
              description: status holds observed values from the cluster. They may
                not be overridden.
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: APIServer
      listKind: APIServerList
      plural: apiservers
      singular: apiserver
    conditions:
    - lastTransitionTime: "2020-12-15T02:11:43Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-12-15T02:11:43Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-12-15T02:11:43Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:oauthMetadata:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:name:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:required: {}
                      f:type: {}
                    f:serviceAccountIssuer:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:type:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:webhookTokenAuthenticator:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:kubeConfig:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:name:
                              .: {}
                              f:description: {}
                              f:type: {}
                          f:required: {}
                          f:type: {}
                      f:required: {}
                      f:type: {}
                    f:webhookTokenAuthenticators:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:integratedOAuthMetadata:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:name:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:required: {}
                      f:type: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-12-15T02:11:43Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-12-15T02:11:43Z"
    name: authentications.config.openshift.io
    resourceVersion: "15669077"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/authentications.config.openshift.io
    uid: 066fdd90-86b0-46d7-b37a-b72d1278724c
  spec:
    conversion:
      strategy: None
    group: config.openshift.io
    names:
      kind: Authentication
      listKind: AuthenticationList
      plural: authentications
      singular: authentication
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Authentication specifies cluster-wide settings for authentication
            (like OAuth and webhook token authenticators). The canonical name of an
            instance is `cluster`.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec holds user settable values for configuration
              properties:
                oauthMetadata:
                  description: 'oauthMetadata contains the discovery endpoint data
                    for OAuth 2.0 Authorization Server Metadata for an external OAuth
                    server. This discovery document can be viewed from its served
                    location: oc get --raw ''/.well-known/oauth-authorization-server''
                    For further details, see the IETF Draft: https://tools.ietf.org/html/draft-ietf-oauth-discovery-04#section-2
                    If oauthMetadata.name is non-empty, this value has precedence
                    over any metadata reference stored in status. The key "oauthMetadata"
                    is used to locate the data. If specified and the config map or
                    expected key is not found, no metadata is served. If the specified
                    metadata is not valid, no metadata is served. The namespace for
                    this config map is openshift-config.'
                  properties:
                    name:
                      description: name is the metadata.name of the referenced config
                        map
                      type: string
                  required:
                  - name
                  type: object
                serviceAccountIssuer:
                  description: serviceAccountIssuer is the identifier of the bound
                    service account token issuer. The default is https://kubernetes.default.svc
                  type: string
                type:
                  description: type identifies the cluster managed, user facing authentication
                    mode in use. Specifically, it manages the component that responds
                    to login attempts. The default is IntegratedOAuth.
                  type: string
                webhookTokenAuthenticator:
                  description: webhookTokenAuthenticator configures a remote token
                    reviewer. These remote authentication webhooks can be used to
                    verify bearer tokens via the tokenreviews.authentication.k8s.io
                    REST API. This is required to honor bearer tokens that are provisioned
                    by an external authentication service.
                  properties:
                    kubeConfig:
                      description: "kubeConfig references a secret that contains kube
                        config file data which describes how to access the remote
                        webhook service. The namespace for the referenced secret is
                        openshift-config. \n For further details, see: \n https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication
                        \n The key \"kubeConfig\" is used to locate the data. If the
                        secret or expected key is not found, the webhook is not honored.
                        If the specified kube config data is not valid, the webhook
                        is not honored."
                      properties:
                        name:
                          description: name is the metadata.name of the referenced
                            secret
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - kubeConfig
                  type: object
                webhookTokenAuthenticators:
                  description: webhookTokenAuthenticators is DEPRECATED, setting it
                    has no effect.
                  items:
                    description: deprecatedWebhookTokenAuthenticator holds the necessary
                      configuration options for a remote token authenticator. It's
                      the same as WebhookTokenAuthenticator but it's missing the 'required'
                      validation on KubeConfig field.
                    properties:
                      kubeConfig:
                        description: 'kubeConfig contains kube config file data which
                          describes how to access the remote webhook service. For
                          further details, see: https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication
                          The key "kubeConfig" is used to locate the data. If the
                          secret or expected key is not found, the webhook is not
                          honored. If the specified kube config data is not valid,
                          the webhook is not honored. The namespace for this secret
                          is determined by the point of use.'
                        properties:
                          name:
                            description: name is the metadata.name of the referenced
                              secret
                            type: string
                        required:
                        - name
                        type: object
                    type: object
                  type: array
              type: object
            status:
              description: status holds observed values from the cluster. They may
                not be overridden.
              properties:
                integratedOAuthMetadata:
                  description: 'integratedOAuthMetadata contains the discovery endpoint
                    data for OAuth 2.0 Authorization Server Metadata for the in-cluster
                    integrated OAuth server. This discovery document can be viewed
                    from its served location: oc get --raw ''/.well-known/oauth-authorization-server''
                    For further details, see the IETF Draft: https://tools.ietf.org/html/draft-ietf-oauth-discovery-04#section-2
                    This contains the observed value based on cluster state. An explicitly
                    set value in spec.oauthMetadata has precedence over this field.
                    This field has no meaning if authentication spec.type is not set
                    to IntegratedOAuth. The key "oauthMetadata" is used to locate
                    the data. If the config map or expected key is not found, no metadata
                    is served. If the specified metadata is not valid, no metadata
                    is served. The namespace for this config map is openshift-config-managed.'
                  properties:
                    name:
                      description: name is the metadata.name of the referenced config
                        map
                      type: string
                  required:
                  - name
                  type: object
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Authentication
      listKind: AuthenticationList
      plural: authentications
      singular: authentication
    conditions:
    - lastTransitionTime: "2020-12-15T02:11:43Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-12-15T02:11:43Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-12-15T02:11:54Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-12-15T02:11:54Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-12-15T02:11:54Z"
    name: authentications.operator.openshift.io
    resourceVersion: "15669219"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/authentications.operator.openshift.io
    uid: 14bd4263-ea38-4dd1-bc09-1173ccef9c1e
  spec:
    conversion:
      strategy: None
    group: operator.openshift.io
    names:
      kind: Authentication
      listKind: AuthenticationList
      plural: authentications
      singular: authentication
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Authentication provides information to configure an operator
            to manage authentication.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                logLevel:
                  default: Normal
                  description: "logLevel is an intent based logging for an overall
                    component.  It does not give fine grained control, but it is a
                    simple way to manage coarse grained logging choices that operators
                    have to interpret for their operands. \n Valid values are: \"Normal\",
                    \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                managementState:
                  description: managementState indicates whether and how the operator
                    should manage the component
                  pattern: ^(Managed|Unmanaged|Force|Removed)$
                  type: string
                observedConfig:
                  description: observedConfig holds a sparse config that controller
                    has observed from the cluster state.  It exists in spec because
                    it is an input to the level for the operator
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                operatorLogLevel:
                  default: Normal
                  description: "operatorLogLevel is an intent based logging for the
                    operator itself.  It does not give fine grained control, but it
                    is a simple way to manage coarse grained logging choices that
                    operators have to interpret for themselves. \n Valid values are:
                    \"Normal\", \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                unsupportedConfigOverrides:
                  description: 'unsupportedConfigOverrides holds a sparse config that
                    will override any previously set options.  It only needs to be
                    the fields to override it will end up overlaying in the following
                    order: 1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides'
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              type: object
            status:
              properties:
                conditions:
                  description: conditions is a list of conditions and their status
                  items:
                    description: OperatorCondition is just the standard condition
                      fields.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
                generations:
                  description: generations are used to determine when an item needs
                    to be reconciled or has changed in a way that needs a reaction.
                  items:
                    description: GenerationStatus keeps track of the generation for
                      a given resource so that decisions about forced updates can
                      be made.
                    properties:
                      group:
                        description: group is the group of the thing you're tracking
                        type: string
                      hash:
                        description: hash is an optional field set for resources without
                          generation that are content sensitive like secrets and configmaps
                        type: string
                      lastGeneration:
                        description: lastGeneration is the last generation of the
                          workload controller involved
                        format: int64
                        type: integer
                      name:
                        description: name is the name of the thing you're tracking
                        type: string
                      namespace:
                        description: namespace is where the thing you're tracking
                          is
                        type: string
                      resource:
                        description: resource is the resource type of the thing you're
                          tracking
                        type: string
                    type: object
                  type: array
                managingOAuthAPIServer:
                  description: ManagingOAuthAPIServer indicates whether this operator
                    is managing OAuth related APIs. Setting this field to true will
                    cause OAS-O to step down. Note that this field will be removed
                    in the future releases, once https://github.com/openshift/enhancements/blob/master/enhancements/authentication/separate-oauth-resources.md
                    is fully implemented
                  type: boolean
                oauthAPIServer:
                  description: OAuthAPIServer holds status specific only to oauth-apiserver
                  properties:
                    latestAvailableRevision:
                      description: LatestAvailableRevision is the latest revision
                        used as suffix of revisioned secrets like encryption-config.
                        A new revision causes a new deployment of pods.
                      format: int32
                      minimum: 0
                      type: integer
                  type: object
                observedGeneration:
                  description: observedGeneration is the last generation change you've
                    dealt with
                  format: int64
                  type: integer
                readyReplicas:
                  description: readyReplicas indicates how many replicas are ready
                    and at the desired state
                  format: int32
                  type: integer
                version:
                  description: version is the level this availability applies to
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Authentication
      listKind: AuthenticationList
      plural: authentications
      singular: authentication
    conditions:
    - lastTransitionTime: "2020-12-15T02:11:54Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-12-15T02:11:54Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-12-15T02:12:13Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-12-15T02:12:13Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-12-15T02:12:13Z"
    name: baremetalhosts.metal3.io
    resourceVersion: "15669566"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/baremetalhosts.metal3.io
    uid: e19e5fe3-fce8-4f8f-b68c-17412440a8b6
  spec:
    conversion:
      strategy: None
    group: metal3.io
    names:
      kind: BareMetalHost
      listKind: BareMetalHostList
      plural: baremetalhosts
      shortNames:
      - bmh
      - bmhost
      singular: baremetalhost
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Operational status
        jsonPath: .status.operationalStatus
        name: Status
        type: string
      - description: Provisioning status
        jsonPath: .status.provisioning.state
        name: Provisioning Status
        type: string
      - description: Consumer using this host
        jsonPath: .spec.consumerRef.name
        name: Consumer
        type: string
      - description: Address of management controller
        jsonPath: .spec.bmc.address
        name: BMC
        type: string
      - description: The type of hardware detected
        jsonPath: .status.hardwareProfile
        name: Hardware Profile
        type: string
      - description: Whether the host is online or not
        jsonPath: .spec.online
        name: Online
        type: string
      - description: Most recent error
        jsonPath: .status.errorMessage
        name: Error
        type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: BareMetalHost is the Schema for the baremetalhosts API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: BareMetalHostSpec defines the desired state of BareMetalHost
              properties:
                bmc:
                  description: How do we connect to the BMC?
                  properties:
                    address:
                      description: Address holds the URL for accessing the controller
                        on the network.
                      type: string
                    credentialsName:
                      description: The name of the secret containing the BMC credentials
                        (requires keys "username" and "password").
                      type: string
                    disableCertificateVerification:
                      description: DisableCertificateVerification disables verification
                        of server certificates when using HTTPS to connect to the
                        BMC. This is required when the server certificate is self-signed,
                        but is insecure because it allows a man-in-the-middle to intercept
                        the connection.
                      type: boolean
                  required:
                  - address
                  - credentialsName
                  type: object
                bootMACAddress:
                  description: Which MAC address will PXE boot? This is optional for
                    some types, but required for libvirt VMs driven by vbmc.
                  pattern: '[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'
                  type: string
                bootMode:
                  description: Select the method of initializing the hardware during
                    boot. Defaults to UEFI.
                  enum:
                  - UEFI
                  - legacy
                  type: string
                consumerRef:
                  description: ConsumerRef can be used to store information about
                    something that is using a host. When it is not empty, the host
                    is considered "in use".
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                description:
                  description: Description is a human-entered text used to help identify
                    the host
                  type: string
                externallyProvisioned:
                  description: ExternallyProvisioned means something else is managing
                    the image running on the host and the operator should only manage
                    the power status and hardware inventory inspection. If the Image
                    field is filled in, this field is ignored.
                  type: boolean
                hardwareProfile:
                  description: What is the name of the hardware profile for this host?
                    It should only be necessary to set this when inspection cannot
                    automatically determine the profile.
                  type: string
                image:
                  description: Image holds the details of the image to be provisioned.
                  properties:
                    checksum:
                      description: Checksum is the checksum for the image.
                      type: string
                    checksumType:
                      description: ChecksumType is the checksum algorithm for the
                        image. e.g md5, sha256, sha512
                      enum:
                      - md5
                      - sha256
                      - sha512
                      type: string
                    format:
                      description: DiskFormat contains the format of the image (raw,
                        qcow2, ...) Needs to be set to raw for raw images streaming
                      enum:
                      - raw
                      - qcow2
                      - vdi
                      - vmdk
                      type: string
                    url:
                      description: URL is a location of an image to deploy.
                      type: string
                  required:
                  - checksum
                  - url
                  type: object
                metaData:
                  description: MetaData holds the reference to the Secret containing
                    host metadata (e.g. meta_data.json which is passed to Config Drive).
                  properties:
                    name:
                      description: Name is unique within a namespace to reference
                        a secret resource.
                      type: string
                    namespace:
                      description: Namespace defines the space within which the secret
                        name must be unique.
                      type: string
                  type: object
                networkData:
                  description: NetworkData holds the reference to the Secret containing
                    network configuration (e.g content of network_data.json which
                    is passed to Config Drive).
                  properties:
                    name:
                      description: Name is unique within a namespace to reference
                        a secret resource.
                      type: string
                    namespace:
                      description: Namespace defines the space within which the secret
                        name must be unique.
                      type: string
                  type: object
                online:
                  description: Should the server be online?
                  type: boolean
                rootDeviceHints:
                  description: Provide guidance about how to choose the device for
                    the image being provisioned.
                  properties:
                    deviceName:
                      description: A Linux device name like "/dev/vda". The hint must
                        match the actual value exactly.
                      type: string
                    hctl:
                      description: A SCSI bus address like 0:0:0:0. The hint must
                        match the actual value exactly.
                      type: string
                    minSizeGigabytes:
                      description: The minimum size of the device in Gigabytes.
                      minimum: 0
                      type: integer
                    model:
                      description: A vendor-specific device identifier. The hint can
                        be a substring of the actual value.
                      type: string
                    rotational:
                      description: True if the device should use spinning media, false
                        otherwise.
                      type: boolean
                    serialNumber:
                      description: Device serial number. The hint must match the actual
                        value exactly.
                      type: string
                    vendor:
                      description: The name of the vendor or manufacturer of the device.
                        The hint can be a substring of the actual value.
                      type: string
                    wwn:
                      description: Unique storage identifier. The hint must match
                        the actual value exactly.
                      type: string
                    wwnVendorExtension:
                      description: Unique vendor storage identifier. The hint must
                        match the actual value exactly.
                      type: string
                    wwnWithExtension:
                      description: Unique storage identifier with the vendor extension
                        appended. The hint must match the actual value exactly.
                      type: string
                  type: object
                taints:
                  description: Taints is the full, authoritative list of taints to
                    apply to the corresponding Machine. This list will overwrite any
                    modifications made to the Machine on an ongoing basis.
                  items:
                    description: The node this Taint is attached to has the "effect"
                      on any pod that does not tolerate the Taint.
                    properties:
                      effect:
                        description: Required. The effect of the taint on pods that
                          do not tolerate the taint. Valid effects are NoSchedule,
                          PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Required. The taint key to be applied to a node.
                        type: string
                      timeAdded:
                        description: TimeAdded represents the time at which the taint
                          was added. It is only written for NoExecute taints.
                        format: date-time
                        type: string
                      value:
                        description: Required. The taint value corresponding to the
                          taint key.
                        type: string
                    required:
                    - effect
                    - key
                    type: object
                  type: array
                userData:
                  description: UserData holds the reference to the Secret containing
                    the user data to be passed to the host before it boots.
                  properties:
                    name:
                      description: Name is unique within a namespace to reference
                        a secret resource.
                      type: string
                    namespace:
                      description: Namespace defines the space within which the secret
                        name must be unique.
                      type: string
                  type: object
              required:
              - online
              type: object
            status:
              description: BareMetalHostStatus defines the observed state of BareMetalHost
              properties:
                errorMessage:
                  description: the last error message reported by the provisioning
                    subsystem
                  type: string
                errorType:
                  description: ErrorType indicates the type of failure encountered
                    when the OperationalStatus is OperationalStatusError
                  enum:
                  - registration error
                  - inspection error
                  - provisioning error
                  - power management error
                  type: string
                goodCredentials:
                  description: the last credentials we were able to validate as working
                  properties:
                    credentials:
                      description: SecretReference represents a Secret Reference.
                        It has enough information to retrieve secret in any namespace
                      properties:
                        name:
                          description: Name is unique within a namespace to reference
                            a secret resource.
                          type: string
                        namespace:
                          description: Namespace defines the space within which the
                            secret name must be unique.
                          type: string
                      type: object
                    credentialsVersion:
                      type: string
                  type: object
                hardware:
                  description: The hardware discovered to exist on the host.
                  properties:
                    cpu:
                      description: CPU describes one processor on the host.
                      properties:
                        arch:
                          type: string
                        clockMegahertz:
                          description: ClockSpeed is a clock speed in MHz
                          type: number
                        count:
                          type: integer
                        flags:
                          items:
                            type: string
                          type: array
                        model:
                          type: string
                      required:
                      - arch
                      - clockMegahertz
                      - count
                      - flags
                      - model
                      type: object
                    firmware:
                      description: Firmware describes the firmware on the host.
                      properties:
                        bios:
                          description: The BIOS for this firmware
                          properties:
                            date:
                              description: The release/build date for this BIOS
                              type: string
                            vendor:
                              description: The vendor name for this BIOS
                              type: string
                            version:
                              description: The version of the BIOS
                              type: string
                          required:
                          - date
                          - vendor
                          - version
                          type: object
                      required:
                      - bios
                      type: object
                    hostname:
                      type: string
                    nics:
                      items:
                        description: NIC describes one network interface on the host.
                        properties:
                          ip:
                            description: The IP address of the device
                            type: string
                          mac:
                            description: The device MAC addr
                            pattern: '[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'
                            type: string
                          model:
                            description: The name of the model, e.g. "virt-io"
                            type: string
                          name:
                            description: The name of the NIC, e.g. "nic-1"
                            type: string
                          pxe:
                            description: Whether the NIC is PXE Bootable
                            type: boolean
                          speedGbps:
                            description: The speed of the device
                            type: integer
                          vlanId:
                            description: The untagged VLAN ID
                            format: int32
                            maximum: 4094
                            minimum: 0
                            type: integer
                          vlans:
                            description: The VLANs available
                            items:
                              description: VLAN represents the name and ID of a VLAN
                              properties:
                                id:
                                  description: VLANID is a 12-bit 802.1Q VLAN identifier
                                  format: int32
                                  maximum: 4094
                                  minimum: 0
                                  type: integer
                                name:
                                  type: string
                              required:
                              - id
                              type: object
                            type: array
                        required:
                        - ip
                        - mac
                        - model
                        - name
                        - pxe
                        - speedGbps
                        - vlanId
                        type: object
                      type: array
                    ramMebibytes:
                      type: integer
                    storage:
                      items:
                        description: Storage describes one storage device (disk, SSD,
                          etc.) on the host.
                        properties:
                          hctl:
                            description: The SCSI location of the device
                            type: string
                          model:
                            description: Hardware model
                            type: string
                          name:
                            description: A name for the disk, e.g. "disk 1 (boot)"
                            type: string
                          rotational:
                            description: Whether this disk represents rotational storage
                            type: boolean
                          serialNumber:
                            description: The serial number of the device
                            type: string
                          sizeBytes:
                            description: The size of the disk in Bytes
                            format: int64
                            type: integer
                          vendor:
                            description: The name of the vendor of the device
                            type: string
                          wwn:
                            description: The WWN of the device
                            type: string
                          wwnVendorExtension:
                            description: The WWN Vendor extension of the device
                            type: string
                          wwnWithExtension:
                            description: The WWN with the extension
                            type: string
                        required:
                        - name
                        - rotational
                        - serialNumber
                        - sizeBytes
                        type: object
                      type: array
                    systemVendor:
                      description: HardwareSystemVendor stores details about the whole
                        hardware system.
                      properties:
                        manufacturer:
                          type: string
                        productName:
                          type: string
                        serialNumber:
                          type: string
                      required:
                      - manufacturer
                      - productName
                      - serialNumber
                      type: object
                  required:
                  - cpu
                  - firmware
                  - hostname
                  - nics
                  - ramMebibytes
                  - storage
                  - systemVendor
                  type: object
                hardwareProfile:
                  description: The name of the profile matching the hardware details.
                  type: string
                lastUpdated:
                  description: LastUpdated identifies when this status was last observed.
                  format: date-time
                  type: string
                operationHistory:
                  description: OperationHistory holds information about operations
                    performed on this host.
                  properties:
                    deprovision:
                      description: OperationMetric contains metadata about an operation
                        (inspection, provisioning, etc.) used for tracking metrics.
                      properties:
                        end:
                          format: date-time
                          nullable: true
                          type: string
                        start:
                          format: date-time
                          nullable: true
                          type: string
                      type: object
                    inspect:
                      description: OperationMetric contains metadata about an operation
                        (inspection, provisioning, etc.) used for tracking metrics.
                      properties:
                        end:
                          format: date-time
                          nullable: true
                          type: string
                        start:
                          format: date-time
                          nullable: true
                          type: string
                      type: object
                    provision:
                      description: OperationMetric contains metadata about an operation
                        (inspection, provisioning, etc.) used for tracking metrics.
                      properties:
                        end:
                          format: date-time
                          nullable: true
                          type: string
                        start:
                          format: date-time
                          nullable: true
                          type: string
                      type: object
                    register:
                      description: OperationMetric contains metadata about an operation
                        (inspection, provisioning, etc.) used for tracking metrics.
                      properties:
                        end:
                          format: date-time
                          nullable: true
                          type: string
                        start:
                          format: date-time
                          nullable: true
                          type: string
                      type: object
                  type: object
                operationalStatus:
                  description: OperationalStatus holds the status of the host
                  enum:
                  - ""
                  - OK
                  - discovered
                  - error
                  type: string
                poweredOn:
                  description: indicator for whether or not the host is powered on
                  type: boolean
                provisioning:
                  description: Information tracked by the provisioner.
                  properties:
                    ID:
                      description: The machine's UUID from the underlying provisioning
                        tool
                      type: string
                    bootMode:
                      description: BootMode indicates the boot mode used to provision
                        the node
                      enum:
                      - UEFI
                      - legacy
                      type: string
                    image:
                      description: Image holds the details of the last image successfully
                        provisioned to the host.
                      properties:
                        checksum:
                          description: Checksum is the checksum for the image.
                          type: string
                        checksumType:
                          description: ChecksumType is the checksum algorithm for
                            the image. e.g md5, sha256, sha512
                          enum:
                          - md5
                          - sha256
                          - sha512
                          type: string
                        format:
                          description: DiskFormat contains the format of the image
                            (raw, qcow2, ...) Needs to be set to raw for raw images
                            streaming
                          enum:
                          - raw
                          - qcow2
                          - vdi
                          - vmdk
                          type: string
                        url:
                          description: URL is a location of an image to deploy.
                          type: string
                      required:
                      - checksum
                      - url
                      type: object
                    rootDeviceHints:
                      description: The RootDevicehints set by the user
                      properties:
                        deviceName:
                          description: A Linux device name like "/dev/vda". The hint
                            must match the actual value exactly.
                          type: string
                        hctl:
                          description: A SCSI bus address like 0:0:0:0. The hint must
                            match the actual value exactly.
                          type: string
                        minSizeGigabytes:
                          description: The minimum size of the device in Gigabytes.
                          minimum: 0
                          type: integer
                        model:
                          description: A vendor-specific device identifier. The hint
                            can be a substring of the actual value.
                          type: string
                        rotational:
                          description: True if the device should use spinning media,
                            false otherwise.
                          type: boolean
                        serialNumber:
                          description: Device serial number. The hint must match the
                            actual value exactly.
                          type: string
                        vendor:
                          description: The name of the vendor or manufacturer of the
                            device. The hint can be a substring of the actual value.
                          type: string
                        wwn:
                          description: Unique storage identifier. The hint must match
                            the actual value exactly.
                          type: string
                        wwnVendorExtension:
                          description: Unique vendor storage identifier. The hint
                            must match the actual value exactly.
                          type: string
                        wwnWithExtension:
                          description: Unique storage identifier with the vendor extension
                            appended. The hint must match the actual value exactly.
                          type: string
                      type: object
                    state:
                      description: An indiciator for what the provisioner is doing
                        with the host.
                      type: string
                  required:
                  - ID
                  - state
                  type: object
                triedCredentials:
                  description: the last credentials we sent to the provisioning backend
                  properties:
                    credentials:
                      description: SecretReference represents a Secret Reference.
                        It has enough information to retrieve secret in any namespace
                      properties:
                        name:
                          description: Name is unique within a namespace to reference
                            a secret resource.
                          type: string
                        namespace:
                          description: Namespace defines the space within which the
                            secret name must be unique.
                          type: string
                      type: object
                    credentialsVersion:
                      type: string
                  type: object
              required:
              - errorMessage
              - hardwareProfile
              - operationHistory
              - operationalStatus
              - poweredOn
              - provisioning
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: BareMetalHost
      listKind: BareMetalHostList
      plural: baremetalhosts
      shortNames:
      - bmh
      - bmhost
      singular: baremetalhost
    conditions:
    - lastTransitionTime: "2020-12-15T02:12:13Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-12-15T02:12:13Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-12-15T02:11:44Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:additionalTrustedCA:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:name:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:required: {}
                      f:type: {}
                    f:buildDefaults:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:defaultProxy:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:httpProxy:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:httpsProxy:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:noProxy:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:readinessEndpoints:
                              .: {}
                              f:description: {}
                              f:items: {}
                              f:type: {}
                            f:trustedCA:
                              .: {}
                              f:description: {}
                              f:properties:
                                .: {}
                                f:name:
                                  .: {}
                                  f:description: {}
                                  f:type: {}
                              f:required: {}
                              f:type: {}
                          f:type: {}
                        f:env:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                        f:gitProxy:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:httpProxy:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:httpsProxy:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:noProxy:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:readinessEndpoints:
                              .: {}
                              f:description: {}
                              f:items: {}
                              f:type: {}
                            f:trustedCA:
                              .: {}
                              f:description: {}
                              f:properties:
                                .: {}
                                f:name:
                                  .: {}
                                  f:description: {}
                                  f:type: {}
                              f:required: {}
                              f:type: {}
                          f:type: {}
                        f:imageLabels:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                        f:resources:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:limits:
                              .: {}
                              f:additionalProperties: {}
                              f:description: {}
                              f:type: {}
                            f:requests:
                              .: {}
                              f:additionalProperties: {}
                              f:description: {}
                              f:type: {}
                          f:type: {}
                      f:type: {}
                    f:buildOverrides:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:forcePull:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:imageLabels:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                        f:nodeSelector:
                          .: {}
                          f:additionalProperties: {}
                          f:description: {}
                          f:type: {}
                        f:tolerations:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                      f:type: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-12-15T02:11:44Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-12-15T02:11:44Z"
    name: builds.config.openshift.io
    resourceVersion: "15669082"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/builds.config.openshift.io
    uid: e3be75c9-6bb5-4c05-b552-f7423f15f007
  spec:
    conversion:
      strategy: None
    group: config.openshift.io
    names:
      kind: Build
      listKind: BuildList
      plural: builds
      singular: build
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: "Build configures the behavior of OpenShift builds for the
            entire cluster. This includes default settings that can be overridden
            in BuildConfig objects, and overrides which are applied to all builds.
            \n The canonical name is \"cluster\""
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec holds user-settable values for the build controller
                configuration
              properties:
                additionalTrustedCA:
                  description: "AdditionalTrustedCA is a reference to a ConfigMap
                    containing additional CAs that should be trusted for image pushes
                    and pulls during builds. The namespace for this config map is
                    openshift-config. \n DEPRECATED: Additional CAs for image pull
                    and push should be set on image.config.openshift.io/cluster instead."
                  properties:
                    name:
                      description: name is the metadata.name of the referenced config
                        map
                      type: string
                  required:
                  - name
                  type: object
                buildDefaults:
                  description: BuildDefaults controls the default information for
                    Builds
                  properties:
                    defaultProxy:
                      description: "DefaultProxy contains the default proxy settings
                        for all build operations, including image pull/push and source
                        download. \n Values can be overrode by setting the `HTTP_PROXY`,
                        `HTTPS_PROXY`, and `NO_PROXY` environment variables in the
                        build config's strategy."
                      properties:
                        httpProxy:
                          description: httpProxy is the URL of the proxy for HTTP
                            requests.  Empty means unset and will not result in an
                            env var.
                          type: string
                        httpsProxy:
                          description: httpsProxy is the URL of the proxy for HTTPS
                            requests.  Empty means unset and will not result in an
                            env var.
                          type: string
                        noProxy:
                          description: noProxy is a comma-separated list of hostnames
                            and/or CIDRs for which the proxy should not be used. Empty
                            means unset and will not result in an env var.
                          type: string
                        readinessEndpoints:
                          description: readinessEndpoints is a list of endpoints used
                            to verify readiness of the proxy.
                          items:
                            type: string
                          type: array
                        trustedCA:
                          description: "trustedCA is a reference to a ConfigMap containing
                            a CA certificate bundle. The trustedCA field should only
                            be consumed by a proxy validator. The validator is responsible
                            for reading the certificate bundle from the required key
                            \"ca-bundle.crt\", merging it with the system default
                            trust bundle, and writing the merged trust bundle to a
                            ConfigMap named \"trusted-ca-bundle\" in the \"openshift-config-managed\"
                            namespace. Clients that expect to make proxy connections
                            must use the trusted-ca-bundle for all HTTPS requests
                            to the proxy, and may use the trusted-ca-bundle for non-proxy
                            HTTPS requests as well. \n The namespace for the ConfigMap
                            referenced by trustedCA is \"openshift-config\". Here
                            is an example ConfigMap (in yaml): \n apiVersion: v1 kind:
                            ConfigMap metadata:  name: user-ca-bundle  namespace:
                            openshift-config  data:    ca-bundle.crt: |      -----BEGIN
                            CERTIFICATE-----      Custom CA certificate bundle.      -----END
                            CERTIFICATE-----"
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    env:
                      description: Env is a set of default environment variables that
                        will be applied to the build if the specified variables do
                        not exist on the build
                      items:
                        description: EnvVar represents an environment variable present
                          in a Container.
                        properties:
                          name:
                            description: Name of the environment variable. Must be
                              a C_IDENTIFIER.
                            type: string
                          value:
                            description: 'Variable references $(VAR_NAME) are expanded
                              using the previous defined environment variables in
                              the container and any service environment variables.
                              If a variable cannot be resolved, the reference in the
                              input string will be unchanged. The $(VAR_NAME) syntax
                              can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
                              references will never be expanded, regardless of whether
                              the variable exists or not. Defaults to "".'
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              fieldRef:
                                description: 'Selects a field of the pod: supports
                                  metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                  `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                  spec.serviceAccountName, status.hostIP, status.podIP,
                                  status.podIPs.'
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath
                                      is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the
                                      specified API version.
                                    type: string
                                required:
                                - fieldPath
                                type: object
                              resourceFieldRef:
                                description: 'Selects a resource of the container:
                                  only resources limits and requests (limits.cpu,
                                  limits.memory, limits.ephemeral-storage, requests.cpu,
                                  requests.memory and requests.ephemeral-storage)
                                  are currently supported.'
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes,
                                      optional for env vars'
                                    type: string
                                  divisor:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Specifies the output format of the
                                      exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                                required:
                                - resource
                                type: object
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's
                                  namespace
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                        required:
                        - name
                        type: object
                      type: array
                    gitProxy:
                      description: "GitProxy contains the proxy settings for git operations
                        only. If set, this will override any Proxy settings for all
                        git commands, such as git clone. \n Values that are not set
                        here will be inherited from DefaultProxy."
                      properties:
                        httpProxy:
                          description: httpProxy is the URL of the proxy for HTTP
                            requests.  Empty means unset and will not result in an
                            env var.
                          type: string
                        httpsProxy:
                          description: httpsProxy is the URL of the proxy for HTTPS
                            requests.  Empty means unset and will not result in an
                            env var.
                          type: string
                        noProxy:
                          description: noProxy is a comma-separated list of hostnames
                            and/or CIDRs for which the proxy should not be used. Empty
                            means unset and will not result in an env var.
                          type: string
                        readinessEndpoints:
                          description: readinessEndpoints is a list of endpoints used
                            to verify readiness of the proxy.
                          items:
                            type: string
                          type: array
                        trustedCA:
                          description: "trustedCA is a reference to a ConfigMap containing
                            a CA certificate bundle. The trustedCA field should only
                            be consumed by a proxy validator. The validator is responsible
                            for reading the certificate bundle from the required key
                            \"ca-bundle.crt\", merging it with the system default
                            trust bundle, and writing the merged trust bundle to a
                            ConfigMap named \"trusted-ca-bundle\" in the \"openshift-config-managed\"
                            namespace. Clients that expect to make proxy connections
                            must use the trusted-ca-bundle for all HTTPS requests
                            to the proxy, and may use the trusted-ca-bundle for non-proxy
                            HTTPS requests as well. \n The namespace for the ConfigMap
                            referenced by trustedCA is \"openshift-config\". Here
                            is an example ConfigMap (in yaml): \n apiVersion: v1 kind:
                            ConfigMap metadata:  name: user-ca-bundle  namespace:
                            openshift-config  data:    ca-bundle.crt: |      -----BEGIN
                            CERTIFICATE-----      Custom CA certificate bundle.      -----END
                            CERTIFICATE-----"
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    imageLabels:
                      description: ImageLabels is a list of docker labels that are
                        applied to the resulting image. User can override a default
                        label by providing a label with the same name in their Build/BuildConfig.
                      items:
                        properties:
                          name:
                            description: Name defines the name of the label. It must
                              have non-zero length.
                            type: string
                          value:
                            description: Value defines the literal value of the label.
                            type: string
                        type: object
                      type: array
                    resources:
                      description: Resources defines resource requirements to execute
                        the build.
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                      type: object
                  type: object
                buildOverrides:
                  description: BuildOverrides controls override settings for builds
                  properties:
                    forcePull:
                      description: ForcePull overrides, if set, the equivalent value
                        in the builds, i.e. false disables force pull for all builds,
                        true enables force pull for all builds, independently of what
                        each build specifies itself
                      type: boolean
                    imageLabels:
                      description: ImageLabels is a list of docker labels that are
                        applied to the resulting image. If user provided a label in
                        their Build/BuildConfig with the same name as one in this
                        list, the user's label will be overwritten.
                      items:
                        properties:
                          name:
                            description: Name defines the name of the label. It must
                              have non-zero length.
                            type: string
                          value:
                            description: Value defines the literal value of the label.
                            type: string
                        type: object
                      type: array
                    nodeSelector:
                      additionalProperties:
                        type: string
                      description: NodeSelector is a selector which must be true for
                        the build pod to fit on a node
                      type: object
                    tolerations:
                      description: Tolerations is a list of Tolerations that will
                        override any existing tolerations set on a build pod.
                      items:
                        description: The pod this Toleration is attached to tolerates
                          any taint that matches the triple <key,value,effect> using
                          the matching operator <operator>.
                        properties:
                          effect:
                            description: Effect indicates the taint effect to match.
                              Empty means match all taint effects. When specified,
                              allowed values are NoSchedule, PreferNoSchedule and
                              NoExecute.
                            type: string
                          key:
                            description: Key is the taint key that the toleration
                              applies to. Empty means match all taint keys. If the
                              key is empty, operator must be Exists; this combination
                              means to match all values and all keys.
                            type: string
                          operator:
                            description: Operator represents a key's relationship
                              to the value. Valid operators are Exists and Equal.
                              Defaults to Equal. Exists is equivalent to wildcard
                              for value, so that a pod can tolerate all taints of
                              a particular category.
                            type: string
                          tolerationSeconds:
                            description: TolerationSeconds represents the period of
                              time the toleration (which must be of effect NoExecute,
                              otherwise this field is ignored) tolerates the taint.
                              By default, it is not set, which means tolerate the
                              taint forever (do not evict). Zero and negative values
                              will be treated as 0 (evict immediately) by the system.
                            format: int64
                            type: integer
                          value:
                            description: Value is the taint value the toleration matches
                              to. If the operator is Exists, the value should be empty,
                              otherwise just a regular string.
                            type: string
                        type: object
                      type: array
                  type: object
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Build
      listKind: BuildList
      plural: builds
      singular: build
    conditions:
    - lastTransitionTime: "2020-12-15T02:11:44Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-12-15T02:11:44Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.3.0
    creationTimestamp: "2020-12-15T02:11:27Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:controller-gen.kubebuilder.io/version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-12-15T02:11:27Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-12-15T02:11:27Z"
    name: catalogsources.operators.coreos.com
    resourceVersion: "15668874"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/catalogsources.operators.coreos.com
    uid: f0d430ec-b4e3-4ce5-acb8-db5984ea0ee4
  spec:
    conversion:
      strategy: None
    group: operators.coreos.com
    names:
      categories:
      - olm
      kind: CatalogSource
      listKind: CatalogSourceList
      plural: catalogsources
      shortNames:
      - catsrc
      singular: catalogsource
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: The pretty name of the catalog
        jsonPath: .spec.displayName
        name: Display
        type: string
      - description: The type of the catalog
        jsonPath: .spec.sourceType
        name: Type
        type: string
      - description: The publisher of the catalog
        jsonPath: .spec.publisher
        name: Publisher
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: CatalogSource is a repository of CSVs, CRDs, and operator packages.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                address:
                  description: 'Address is a host that OLM can use to connect to a
                    pre-existing registry. Format: <registry-host or ip>:<port> Only
                    used when SourceType = SourceTypeGrpc. Ignored when the Image
                    field is set.'
                  type: string
                configMap:
                  description: ConfigMap is the name of the ConfigMap to be used to
                    back a configmap-server registry. Only used when SourceType =
                    SourceTypeConfigmap or SourceTypeInternal.
                  type: string
                description:
                  type: string
                displayName:
                  description: Metadata
                  type: string
                icon:
                  properties:
                    base64data:
                      type: string
                    mediatype:
                      type: string
                  required:
                  - base64data
                  - mediatype
                  type: object
                image:
                  description: Image is an operator-registry container image to instantiate
                    a registry-server with. Only used when SourceType = SourceTypeGrpc.
                    If present, the address field is ignored.
                  type: string
                priority:
                  description: 'Priority field assigns a weight to the catalog source
                    to prioritize them so that it can be consumed by the dependency
                    resolver. Usage: Higher weight indicates that this catalog source
                    is preferred over lower weighted catalog sources during dependency
                    resolution. The range of the priority value can go from positive
                    to negative in the range of int32. The default value to a catalog
                    source with unassigned priority would be 0. The catalog source
                    with the same priority values will be ranked lexicographically
                    based on its name.'
                  type: integer
                publisher:
                  type: string
                secrets:
                  description: Secrets represent set of secrets that can be used to
                    access the contents of the catalog. It is best to keep this list
                    small, since each will need to be tried for every catalog entry.
                  items:
                    type: string
                  type: array
                sourceType:
                  description: SourceType is the type of source
                  type: string
                updateStrategy:
                  description: UpdateStrategy defines how updated catalog source images
                    can be discovered Consists of an interval that defines polling
                    duration and an embedded strategy type
                  properties:
                    registryPoll:
                      properties:
                        interval:
                          description: Interval is used to determine the time interval
                            between checks of the latest catalog source version. The
                            catalog operator polls to see if a new version of the
                            catalog source is available. If available, the latest
                            image is pulled and gRPC traffic is directed to the latest
                            catalog source.
                          type: string
                      type: object
                  type: object
              required:
              - sourceType
              type: object
            status:
              properties:
                configMapReference:
                  properties:
                    lastUpdateTime:
                      format: date-time
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                    resourceVersion:
                      type: string
                    uid:
                      description: UID is a type that holds unique ID values, including
                        UUIDs.  Because we don't ONLY use UUIDs, this is an alias
                        to string.  Being a type captures intent and helps make sure
                        that UIDs and names do not get conflated.
                      type: string
                  required:
                  - name
                  - namespace
                  type: object
                connectionState:
                  properties:
                    address:
                      type: string
                    lastConnect:
                      format: date-time
                      type: string
                    lastObservedState:
                      type: string
                  required:
                  - lastObservedState
                  type: object
                latestImageRegistryPoll:
                  description: The last time the CatalogSource image registry has
                    been polled to ensure the image is up-to-date
                  format: date-time
                  type: string
                message:
                  description: A human readable message indicating details about why
                    the CatalogSource is in this condition.
                  type: string
                reason:
                  description: Reason is the reason the CatalogSource was transitioned
                    to its current state.
                  type: string
                registryService:
                  properties:
                    createdAt:
                      format: date-time
                      type: string
                    port:
                      type: string
                    protocol:
                      type: string
                    serviceName:
                      type: string
                    serviceNamespace:
                      type: string
                  type: object
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - olm
      kind: CatalogSource
      listKind: CatalogSourceList
      plural: catalogsources
      shortNames:
      - catsrc
      singular: catalogsource
    conditions:
    - lastTransitionTime: "2020-12-15T02:11:27Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-12-15T02:11:27Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-12-15T02:12:04Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-12-15T02:12:04Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-12-15T02:12:04Z"
    name: cloudcredentials.operator.openshift.io
    resourceVersion: "15669430"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/cloudcredentials.operator.openshift.io
    uid: 4a2be76c-ca91-4c71-a7a4-4329e37b9cc0
  spec:
    conversion:
      strategy: None
    group: operator.openshift.io
    names:
      kind: CloudCredential
      listKind: CloudCredentialList
      plural: cloudcredentials
      singular: cloudcredential
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: CloudCredential provides a means to configure an operator to
            manage CredentialsRequests.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: CloudCredentialSpec is the specification of the desired
                behavior of the cloud-credential-operator.
              properties:
                credentialsMode:
                  description: CredentialsMode allows informing CCO that it should
                    not attempt to dynamically determine the root cloud credentials
                    capabilities, and it should just run in the specified mode. It
                    also allows putting the operator into "manual" mode if desired.
                    Leaving the field in default mode runs CCO so that the cluster's
                    cloud credentials will be dynamically probed for capabilities
                    (on supported clouds/platforms).
                  enum:
                  - ""
                  - Manual
                  - Mint
                  - Passthrough
                  type: string
                logLevel:
                  default: Normal
                  description: "logLevel is an intent based logging for an overall
                    component.  It does not give fine grained control, but it is a
                    simple way to manage coarse grained logging choices that operators
                    have to interpret for their operands. \n Valid values are: \"Normal\",
                    \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  type: string
                managementState:
                  description: managementState indicates whether and how the operator
                    should manage the component
                  pattern: ^(Managed|Unmanaged|Force|Removed)$
                  type: string
                observedConfig:
                  description: observedConfig holds a sparse config that controller
                    has observed from the cluster state.  It exists in spec because
                    it is an input to the level for the operator
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                operatorLogLevel:
                  description: operatorLogLevel is an intent based logging for the
                    operator itself.  It does not give fine grained control, but it
                    is a simple way to manage coarse grained logging choices that
                    operators have to interpret for themselves.
                  type: string
                unsupportedConfigOverrides:
                  description: 'unsupportedConfigOverrides holds a sparse config that
                    will override any previously set options.  It only needs to be
                    the fields to override it will end up overlaying in the following
                    order: 1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides'
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              type: object
            status:
              description: CloudCredentialStatus defines the observed status of the
                cloud-credential-operator.
              properties:
                conditions:
                  description: conditions is a list of conditions and their status
                  items:
                    description: OperatorCondition is just the standard condition
                      fields.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
                generations:
                  description: generations are used to determine when an item needs
                    to be reconciled or has changed in a way that needs a reaction.
                  items:
                    description: GenerationStatus keeps track of the generation for
                      a given resource so that decisions about forced updates can
                      be made.
                    properties:
                      group:
                        description: group is the group of the thing you're tracking
                        type: string
                      hash:
                        description: hash is an optional field set for resources without
                          generation that are content sensitive like secrets and configmaps
                        type: string
                      lastGeneration:
                        description: lastGeneration is the last generation of the
                          workload controller involved
                        format: int64
                        type: integer
                      name:
                        description: name is the name of the thing you're tracking
                        type: string
                      namespace:
                        description: namespace is where the thing you're tracking
                          is
                        type: string
                      resource:
                        description: resource is the resource type of the thing you're
                          tracking
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration is the last generation change you've
                    dealt with
                  format: int64
                  type: integer
                readyReplicas:
                  description: readyReplicas indicates how many replicas are ready
                    and at the desired state
                  format: int32
                  type: integer
                version:
                  description: version is the level this availability applies to
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: CloudCredential
      listKind: CloudCredentialList
      plural: cloudcredentials
      singular: cloudcredential
    conditions:
    - lastTransitionTime: "2020-12-15T02:12:04Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-12-15T02:12:04Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      exclude.release.openshift.io/internal-openshift-hosted: "true"
    creationTimestamp: "2020-11-18T12:58:51Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:exclude.release.openshift.io/internal-openshift-hosted: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:51Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:51Z"
    name: clusterautoscalers.autoscaling.openshift.io
    resourceVersion: "821"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/clusterautoscalers.autoscaling.openshift.io
    uid: 358498dd-612e-41e1-b69c-cc54356f15cc
  spec:
    conversion:
      strategy: None
    group: autoscaling.openshift.io
    names:
      kind: ClusterAutoscaler
      listKind: ClusterAutoscalerList
      plural: clusterautoscalers
      shortNames:
      - ca
      singular: clusterautoscaler
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: ClusterAutoscaler is the Schema for the clusterautoscalers
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of ClusterAutoscaler resource
              properties:
                balanceSimilarNodeGroups:
                  description: BalanceSimilarNodeGroups enables/disables the `--balance-similar-node-groups`
                    cluster-autocaler feature. This feature will automatically identify
                    node groups with the same instance type and the same set of labels
                    and try to keep the respective sizes of those node groups balanced.
                  type: boolean
                ignoreDaemonsetsUtilization:
                  description: Enables/Disables `--ignore-daemonsets-utilization`
                    CA feature flag. Should CA ignore DaemonSet pods when calculating
                    resource utilization for scaling down. false by default
                  type: boolean
                maxNodeProvisionTime:
                  description: Maximum time CA waits for node to be provisioned. Expects
                    an unsigned duration string of decimal numbers each with optional
                    fraction and a unit suffix, eg "300ms", "1.5h" or "2h45m". Valid
                    time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
                  pattern: ^([0-9]+(\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$
                  type: string
                maxPodGracePeriod:
                  description: Gives pods graceful termination time before scaling
                    down
                  format: int32
                  type: integer
                podPriorityThreshold:
                  description: 'To allow users to schedule "best-effort" pods, which
                    shouldn''t trigger Cluster Autoscaler actions, but only run when
                    there are spare resources available, More info: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#how-does-cluster-autoscaler-work-with-pod-priority-and-preemption'
                  format: int32
                  type: integer
                resourceLimits:
                  description: Constraints of autoscaling resources
                  properties:
                    cores:
                      description: Minimum and maximum number of cores in cluster,
                        in the format <min>:<max>. Cluster autoscaler will not scale
                        the cluster beyond these numbers.
                      properties:
                        max:
                          format: int32
                          type: integer
                        min:
                          format: int32
                          minimum: 0
                          type: integer
                      required:
                      - max
                      - min
                      type: object
                    gpus:
                      description: Minimum and maximum number of different GPUs in
                        cluster, in the format <gpu_type>:<min>:<max>. Cluster autoscaler
                        will not scale the cluster beyond these numbers. Can be passed
                        multiple times.
                      items:
                        properties:
                          max:
                            format: int32
                            minimum: 1
                            type: integer
                          min:
                            format: int32
                            minimum: 0
                            type: integer
                          type:
                            minLength: 1
                            type: string
                        required:
                        - max
                        - min
                        - type
                        type: object
                      type: array
                    maxNodesTotal:
                      description: Maximum number of nodes in all node groups. Cluster
                        autoscaler will not grow the cluster beyond this number.
                      format: int32
                      minimum: 0
                      type: integer
                    memory:
                      description: Minimum and maximum number of gigabytes of memory
                        in cluster, in the format <min>:<max>. Cluster autoscaler
                        will not scale the cluster beyond these numbers.
                      properties:
                        max:
                          format: int32
                          type: integer
                        min:
                          format: int32
                          minimum: 0
                          type: integer
                      required:
                      - max
                      - min
                      type: object
                  type: object
                scaleDown:
                  description: Configuration of scale down operation
                  properties:
                    delayAfterAdd:
                      description: How long after scale up that scale down evaluation
                        resumes
                      pattern: ([0-9]*(\.[0-9]*)?[a-z]+)+
                      type: string
                    delayAfterDelete:
                      description: How long after node deletion that scale down evaluation
                        resumes, defaults to scan-interval
                      pattern: ([0-9]*(\.[0-9]*)?[a-z]+)+
                      type: string
                    delayAfterFailure:
                      description: How long after scale down failure that scale down
                        evaluation resumes
                      pattern: ([0-9]*(\.[0-9]*)?[a-z]+)+
                      type: string
                    enabled:
                      description: Should CA scale down the cluster
                      type: boolean
                    unneededTime:
                      description: How long a node should be unneeded before it is
                        eligible for scale down
                      pattern: ([0-9]*(\.[0-9]*)?[a-z]+)+
                      type: string
                  required:
                  - enabled
                  type: object
                skipNodesWithLocalStorage:
                  description: Enables/Disables `--skip-nodes-with-local-storage`
                    CA feature flag. If true cluster autoscaler will never delete
                    nodes with pods with local storage, e.g. EmptyDir or HostPath.
                    true by default at autoscaler
                  type: boolean
              type: object
            status:
              description: Most recently observed status of ClusterAutoscaler resource
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ClusterAutoscaler
      listKind: ClusterAutoscalerList
      plural: clusterautoscalers
      shortNames:
      - ca
      singular: clusterautoscaler
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:59:16Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:59:16Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:59:16Z"
    name: clustercsidrivers.operator.openshift.io
    resourceVersion: "1577"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/clustercsidrivers.operator.openshift.io
    uid: f366ead8-3523-468e-adb6-ce25045a2a44
  spec:
    conversion:
      strategy: None
    group: operator.openshift.io
    names:
      kind: ClusterCSIDriver
      listKind: ClusterCSIDriverList
      plural: clustercsidrivers
      singular: clustercsidriver
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: ClusterCSIDriver object allows management and configuration
            of a CSI driver operator installed by default in OpenShift. Name of the
            object must be name of the CSI driver it operates. See CSIDriverName type
            for list of allowed values.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              properties:
                name:
                  enum:
                  - ebs.csi.aws.com
                  - manila.csi.openstack.org
                  - csi.ovirt.org
                  type: string
              type: object
            spec:
              description: spec holds user settable values for configuration
              properties:
                logLevel:
                  default: Normal
                  description: "logLevel is an intent based logging for an overall
                    component.  It does not give fine grained control, but it is a
                    simple way to manage coarse grained logging choices that operators
                    have to interpret for their operands. \n Valid values are: \"Normal\",
                    \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                managementState:
                  description: managementState indicates whether and how the operator
                    should manage the component
                  pattern: ^(Managed|Unmanaged|Force|Removed)$
                  type: string
                observedConfig:
                  description: observedConfig holds a sparse config that controller
                    has observed from the cluster state.  It exists in spec because
                    it is an input to the level for the operator
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                operatorLogLevel:
                  default: Normal
                  description: "operatorLogLevel is an intent based logging for the
                    operator itself.  It does not give fine grained control, but it
                    is a simple way to manage coarse grained logging choices that
                    operators have to interpret for themselves. \n Valid values are:
                    \"Normal\", \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                unsupportedConfigOverrides:
                  description: 'unsupportedConfigOverrides holds a sparse config that
                    will override any previously set options.  It only needs to be
                    the fields to override it will end up overlaying in the following
                    order: 1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides'
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              type: object
            status:
              description: status holds observed values from the cluster. They may
                not be overridden.
              properties:
                conditions:
                  description: conditions is a list of conditions and their status
                  items:
                    description: OperatorCondition is just the standard condition
                      fields.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
                generations:
                  description: generations are used to determine when an item needs
                    to be reconciled or has changed in a way that needs a reaction.
                  items:
                    description: GenerationStatus keeps track of the generation for
                      a given resource so that decisions about forced updates can
                      be made.
                    properties:
                      group:
                        description: group is the group of the thing you're tracking
                        type: string
                      hash:
                        description: hash is an optional field set for resources without
                          generation that are content sensitive like secrets and configmaps
                        type: string
                      lastGeneration:
                        description: lastGeneration is the last generation of the
                          workload controller involved
                        format: int64
                        type: integer
                      name:
                        description: name is the name of the thing you're tracking
                        type: string
                      namespace:
                        description: namespace is where the thing you're tracking
                          is
                        type: string
                      resource:
                        description: resource is the resource type of the thing you're
                          tracking
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration is the last generation change you've
                    dealt with
                  format: int64
                  type: integer
                readyReplicas:
                  description: readyReplicas indicates how many replicas are ready
                    and at the desired state
                  format: int32
                  type: integer
                version:
                  description: version is the level this availability applies to
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ClusterCSIDriver
      listKind: ClusterCSIDriverList
      plural: clustercsidrivers
      singular: clustercsidriver
    conditions:
    - lastTransitionTime: "2020-11-18T12:59:16Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:59:16Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T13:05:11Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:ownerReferences:
            .: {}
            k:{"uid":"629378f9-4b6d-445e-8764-cbfb5eda542e"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:additionalPrinterColumns: {}
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:clusterNetworks:
                  .: {}
                  f:description: {}
                  f:items: {}
                  f:type: {}
                f:hostsubnetlength:
                  .: {}
                  f:description: {}
                  f:format: {}
                  f:maximum: {}
                  f:minimum: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:mtu:
                  .: {}
                  f:description: {}
                  f:format: {}
                  f:maximum: {}
                  f:minimum: {}
                  f:type: {}
                f:network:
                  .: {}
                  f:description: {}
                  f:pattern: {}
                  f:type: {}
                f:pluginName:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:serviceNetwork:
                  .: {}
                  f:description: {}
                  f:pattern: {}
                  f:type: {}
                f:vxlanPort:
                  .: {}
                  f:description: {}
                  f:format: {}
                  f:maximum: {}
                  f:minimum: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
          f:storedVersions: {}
      manager: cluster-network-operator
      operation: Update
      time: "2021-01-13T04:16:18Z"
    name: clusternetworks.network.openshift.io
    ownerReferences:
    - apiVersion: operator.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Network
      name: cluster
      uid: 629378f9-4b6d-445e-8764-cbfb5eda542e
    resourceVersion: "36921687"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/clusternetworks.network.openshift.io
    uid: 884c4fd9-43dd-43c4-a58d-a33ba7080485
  spec:
    conversion:
      strategy: None
    group: network.openshift.io
    names:
      kind: ClusterNetwork
      listKind: ClusterNetworkList
      plural: clusternetworks
      singular: clusternetwork
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - description: The primary cluster network CIDR
        jsonPath: .network
        name: Cluster Network
        type: string
      - description: The service network CIDR
        jsonPath: .serviceNetwork
        name: Service Network
        type: string
      - description: The OpenShift SDN network plug-in in use
        jsonPath: .pluginName
        name: Plugin Name
        type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: ClusterNetwork describes the cluster network. There is normally
            only one object of this type, named "default", which is created by the
            SDN network plugin based on the master configuration when the cluster
            is brought up for the first time.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            clusterNetworks:
              description: ClusterNetworks is a list of ClusterNetwork objects that
                defines the global overlay network's L3 space by specifying a set
                of CIDR and netmasks that the SDN can allocate addresses from.
              items:
                description: ClusterNetworkEntry defines an individual cluster network.
                  The CIDRs cannot overlap with other cluster network CIDRs, CIDRs
                  reserved for external ips, CIDRs reserved for service networks,
                  and CIDRs reserved for ingress ips.
                properties:
                  CIDR:
                    description: CIDR defines the total range of a cluster networks
                      address space.
                    pattern: ^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/([0-9]|[12][0-9]|3[0-2])$
                    type: string
                  hostSubnetLength:
                    description: HostSubnetLength is the number of bits of the accompanying
                      CIDR address to allocate to each node. eg, 8 would mean that
                      each node would have a /24 slice of the overlay network for
                      its pods.
                    format: int32
                    maximum: 30
                    minimum: 2
                    type: integer
                required:
                - CIDR
                - hostSubnetLength
                type: object
              type: array
            hostsubnetlength:
              description: HostSubnetLength is the number of bits of network to allocate
                to each node. eg, 8 would mean that each node would have a /24 slice
                of the overlay network for its pods
              format: int32
              maximum: 30
              minimum: 2
              type: integer
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            mtu:
              description: MTU is the MTU for the overlay network. This should be
                50 less than the MTU of the network connecting the nodes. It is normally
                autodetected by the cluster network operator.
              format: int32
              maximum: 65536
              minimum: 576
              type: integer
            network:
              description: Network is a CIDR string specifying the global overlay
                network's L3 space
              pattern: ^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/([0-9]|[12][0-9]|3[0-2])$
              type: string
            pluginName:
              description: PluginName is the name of the network plugin being used
              type: string
            serviceNetwork:
              description: ServiceNetwork is the CIDR range that Service IP addresses
                are allocated from
              pattern: ^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/([0-9]|[12][0-9]|3[0-2])$
              type: string
            vxlanPort:
              description: VXLANPort sets the VXLAN destination port used by the cluster.
                It is set by the master configuration file on startup and cannot be
                edited manually. Valid values for VXLANPort are integers 1-65535 inclusive
                and if unset defaults to 4789. Changing VXLANPort allows users to
                resolve issues between openshift SDN and other software trying to
                use the same VXLAN destination port.
              format: int32
              maximum: 65535
              minimum: 1
              type: integer
          required:
          - clusterNetworks
          - serviceNetwork
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ClusterNetwork
      listKind: ClusterNetworkList
      plural: clusternetworks
      singular: clusternetwork
    conditions:
    - lastTransitionTime: "2020-11-18T13:05:11Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T13:05:11Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T12:58:29Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:additionalPrinterColumns: {}
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:conditions:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:extension:
                      .: {}
                      f:description: {}
                      f:nullable: {}
                      f:type: {}
                      f:x-kubernetes-preserve-unknown-fields: {}
                    f:relatedObjects:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:versions:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:29Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:29Z"
    name: clusteroperators.config.openshift.io
    resourceVersion: "267"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/clusteroperators.config.openshift.io
    uid: d22c9be9-473a-4a09-8d71-94e9496bbc19
  spec:
    conversion:
      strategy: None
    group: config.openshift.io
    names:
      kind: ClusterOperator
      listKind: ClusterOperatorList
      plural: clusteroperators
      shortNames:
      - co
      singular: clusteroperator
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - description: The version the operator is at.
        jsonPath: .status.versions[?(@.name=="operator")].version
        name: Version
        type: string
      - description: Whether the operator is running and stable.
        jsonPath: .status.conditions[?(@.type=="Available")].status
        name: Available
        type: string
      - description: Whether the operator is processing changes.
        jsonPath: .status.conditions[?(@.type=="Progressing")].status
        name: Progressing
        type: string
      - description: Whether the operator is degraded.
        jsonPath: .status.conditions[?(@.type=="Degraded")].status
        name: Degraded
        type: string
      - description: The time the operator's Available status last changed.
        jsonPath: .status.conditions[?(@.type=="Available")].lastTransitionTime
        name: Since
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: ClusterOperator is the Custom Resource object which holds the
            current state of an operator. This object is used by operators to convey
            their state to the rest of the cluster.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec holds configuration that could apply to any operator.
              type: object
            status:
              description: status holds the information about the state of an operator.  It
                is consistent with status information across the Kubernetes ecosystem.
              properties:
                conditions:
                  description: conditions describes the state of the operator's managed
                    and monitored components.
                  items:
                    description: ClusterOperatorStatusCondition represents the state
                      of the operator's managed and monitored components.
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the time of the last update
                          to the current status property.
                        format: date-time
                        type: string
                      message:
                        description: message provides additional information about
                          the current condition. This is only to be consumed by humans.
                        type: string
                      reason:
                        description: reason is the CamelCase reason for the condition's
                          current status.
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: type specifies the aspect reported by this condition.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                extension:
                  description: extension contains any additional status information
                    specific to the operator which owns this status object.
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                relatedObjects:
                  description: 'relatedObjects is a list of objects that are "interesting"
                    or related to this operator.  Common uses are: 1. the detailed
                    resource driving the operator 2. operator namespaces 3. operand
                    namespaces'
                  items:
                    description: ObjectReference contains enough information to let
                      you inspect or modify the referred object.
                    properties:
                      group:
                        description: group of the referent.
                        type: string
                      name:
                        description: name of the referent.
                        type: string
                      namespace:
                        description: namespace of the referent.
                        type: string
                      resource:
                        description: resource of the referent.
                        type: string
                    required:
                    - group
                    - name
                    - resource
                    type: object
                  type: array
                versions:
                  description: versions is a slice of operator and operand version
                    tuples.  Operators which manage multiple operands will have multiple
                    operand entries in the array.  Available operators must report
                    the version of the operator itself with the name "operator". An
                    operator reports a new "operator" version when it has rolled out
                    the new version to all of its operands.
                  items:
                    properties:
                      name:
                        description: name is the name of the particular operand this
                          version is for.  It usually matches container images, not
                          operators.
                        type: string
                      version:
                        description: version indicates which version of a particular
                          operand is currently being managed.  It must always match
                          the Available operand.  If 1.0.0 is Available, then this
                          must indicate 1.0.0 even if the operator is trying to rollout
                          1.1.0
                        type: string
                    required:
                    - name
                    - version
                    type: object
                  type: array
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ClusterOperator
      listKind: ClusterOperatorList
      plural: clusteroperators
      shortNames:
      - co
      singular: clusteroperator
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:29Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:29Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:30Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:quota:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:hard:
                          .: {}
                          f:additionalProperties: {}
                          f:description: {}
                          f:type: {}
                        f:scopeSelector:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:matchExpressions:
                              .: {}
                              f:description: {}
                              f:items: {}
                              f:type: {}
                          f:type: {}
                        f:scopes:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                      f:type: {}
                    f:selector:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:annotations:
                          .: {}
                          f:additionalProperties: {}
                          f:description: {}
                          f:nullable: {}
                          f:type: {}
                        f:labels:
                          .: {}
                          f:description: {}
                          f:nullable: {}
                          f:properties:
                            .: {}
                            f:matchExpressions:
                              .: {}
                              f:description: {}
                              f:items: {}
                              f:type: {}
                            f:matchLabels:
                              .: {}
                              f:additionalProperties: {}
                              f:description: {}
                              f:type: {}
                          f:type: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:namespaces:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:nullable: {}
                      f:type: {}
                    f:total:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:hard:
                          .: {}
                          f:additionalProperties: {}
                          f:description: {}
                          f:type: {}
                        f:used:
                          .: {}
                          f:additionalProperties: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:30Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:30Z"
    name: clusterresourcequotas.quota.openshift.io
    resourceVersion: "287"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/clusterresourcequotas.quota.openshift.io
    uid: a8f9772e-fada-430e-b05b-64a899d5a9b1
  spec:
    conversion:
      strategy: None
    group: quota.openshift.io
    names:
      kind: ClusterResourceQuota
      listKind: ClusterResourceQuotaList
      plural: clusterresourcequotas
      singular: clusterresourcequota
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: ClusterResourceQuota mirrors ResourceQuota at a cluster scope.  This
            object is easily convertible to synthetic ResourceQuota object to allow
            quota evaluation re-use.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired quota
              properties:
                quota:
                  description: Quota defines the desired quota
                  properties:
                    hard:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'hard is the set of desired hard limits for each
                        named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/'
                      type: object
                    scopeSelector:
                      description: scopeSelector is also a collection of filters like
                        scopes that must match each object tracked by a quota but
                        expressed using ScopeSelectorOperator in combination with
                        possible values. For a resource to match, both scopes AND
                        scopeSelector (if specified in spec), must be matched.
                      properties:
                        matchExpressions:
                          description: A list of scope selector requirements by scope
                            of the resources.
                          items:
                            description: A scoped-resource selector requirement is
                              a selector that contains values, a scope name, and an
                              operator that relates the scope name and values.
                            properties:
                              operator:
                                description: Represents a scope's relationship to
                                  a set of values. Valid operators are In, NotIn,
                                  Exists, DoesNotExist.
                                type: string
                              scopeName:
                                description: The name of the scope that the selector
                                  applies to.
                                type: string
                              values:
                                description: An array of string values. If the operator
                                  is In or NotIn, the values array must be non-empty.
                                  If the operator is Exists or DoesNotExist, the values
                                  array must be empty. This array is replaced during
                                  a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - operator
                            - scopeName
                            type: object
                          type: array
                      type: object
                    scopes:
                      description: A collection of filters that must match each object
                        tracked by a quota. If not specified, the quota matches all
                        objects.
                      items:
                        description: A ResourceQuotaScope defines a filter that must
                          match each object tracked by a quota
                        type: string
                      type: array
                  type: object
                selector:
                  description: Selector is the selector used to match projects. It
                    should only select active projects on the scale of dozens (though
                    it can select many more less active projects).  These projects
                    will contend on object creation through this resource.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: AnnotationSelector is used to select projects by
                        annotation.
                      nullable: true
                      type: object
                    labels:
                      description: LabelSelector is used to select projects by label.
                      nullable: true
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                  type: object
              required:
              - quota
              - selector
              type: object
            status:
              description: Status defines the actual enforced quota and its current
                usage
              properties:
                namespaces:
                  description: Namespaces slices the usage by project.  This division
                    allows for quick resolution of deletion reconciliation inside
                    of a single project without requiring a recalculation across all
                    projects.  This can be used to pull the deltas for a given project.
                  items:
                    description: ResourceQuotaStatusByNamespace gives status for a
                      particular project
                    properties:
                      namespace:
                        description: Namespace the project this status applies to
                        type: string
                      status:
                        description: Status indicates how many resources have been
                          consumed by this project
                        properties:
                          hard:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Hard is the set of enforced hard limits
                              for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/'
                            type: object
                          used:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: Used is the current observed total usage
                              of the resource in the namespace.
                            type: object
                        type: object
                    required:
                    - namespace
                    - status
                    type: object
                  nullable: true
                  type: array
                total:
                  description: Total defines the actual enforced quota and its current
                    usage across all projects
                  properties:
                    hard:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Hard is the set of enforced hard limits for each
                        named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/'
                      type: object
                    used:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: Used is the current observed total usage of the
                        resource in the namespace.
                      type: object
                  type: object
              required:
              - total
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ClusterResourceQuota
      listKind: ClusterResourceQuotaList
      plural: clusterresourcequotas
      singular: clusterresourcequota
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:30Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:30Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.3.0
    creationTimestamp: "2020-11-18T12:58:51Z"
    generation: 61
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
      manager: register.test
      operation: Update
      time: "2020-11-20T22:16:08Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:controller-gen.kubebuilder.io/version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-20T22:18:52Z"
    name: clusterserviceversions.operators.coreos.com
    resourceVersion: "1040778"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/clusterserviceversions.operators.coreos.com
    uid: 5d078537-7120-4f20-b239-b00b78c1365f
  spec:
    conversion:
      strategy: None
    group: operators.coreos.com
    names:
      categories:
      - olm
      kind: ClusterServiceVersion
      listKind: ClusterServiceVersionList
      plural: clusterserviceversions
      shortNames:
      - csv
      - csvs
      singular: clusterserviceversion
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: The name of the CSV
        jsonPath: .spec.displayName
        name: Display
        type: string
      - description: The version of the CSV
        jsonPath: .spec.version
        name: Version
        type: string
      - description: The name of a CSV that this one replaces
        jsonPath: .spec.replaces
        name: Replaces
        type: string
      - jsonPath: .status.phase
        name: Phase
        type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ClusterServiceVersion is a Custom Resource of type `ClusterServiceVersionSpec`.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClusterServiceVersionSpec declarations tell OLM how to
                install an operator that can manage apps for a given version.
              properties:
                annotations:
                  additionalProperties:
                    type: string
                  description: Annotations is an unstructured key value map stored
                    with a resource that may be set by external tools to store and
                    retrieve arbitrary metadata.
                  type: object
                apiservicedefinitions:
                  description: APIServiceDefinitions declares all of the extension
                    apis managed or required by an operator being ran by ClusterServiceVersion.
                  properties:
                    owned:
                      items:
                        description: APIServiceDescription provides details to OLM
                          about apis provided via aggregation
                        properties:
                          actionDescriptors:
                            items:
                              description: ActionDescriptor describes a declarative
                                action that can be performed on a custom resource
                                instance
                              properties:
                                description:
                                  type: string
                                displayName:
                                  type: string
                                path:
                                  type: string
                                value:
                                  description: RawMessage is a raw encoded JSON value.
                                    It implements Marshaler and Unmarshaler and can
                                    be used to delay JSON decoding or precompute a
                                    JSON encoding.
                                  format: byte
                                  type: string
                                x-descriptors:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - path
                              type: object
                            type: array
                          containerPort:
                            format: int32
                            type: integer
                          deploymentName:
                            type: string
                          description:
                            type: string
                          displayName:
                            type: string
                          group:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                          resources:
                            items:
                              description: APIResourceReference is a Kubernetes resource
                                type used by a custom resource
                              properties:
                                kind:
                                  type: string
                                name:
                                  type: string
                                version:
                                  type: string
                              required:
                              - kind
                              - name
                              - version
                              type: object
                            type: array
                          specDescriptors:
                            items:
                              description: SpecDescriptor describes a field in a spec
                                block of a CRD so that OLM can consume it
                              properties:
                                description:
                                  type: string
                                displayName:
                                  type: string
                                path:
                                  type: string
                                value:
                                  description: RawMessage is a raw encoded JSON value.
                                    It implements Marshaler and Unmarshaler and can
                                    be used to delay JSON decoding or precompute a
                                    JSON encoding.
                                  format: byte
                                  type: string
                                x-descriptors:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - path
                              type: object
                            type: array
                          statusDescriptors:
                            items:
                              description: StatusDescriptor describes a field in a
                                status block of a CRD so that OLM can consume it
                              properties:
                                description:
                                  type: string
                                displayName:
                                  type: string
                                path:
                                  type: string
                                value:
                                  description: RawMessage is a raw encoded JSON value.
                                    It implements Marshaler and Unmarshaler and can
                                    be used to delay JSON decoding or precompute a
                                    JSON encoding.
                                  format: byte
                                  type: string
                                x-descriptors:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - path
                              type: object
                            type: array
                          version:
                            type: string
                        required:
                        - group
                        - kind
                        - name
                        - version
                        type: object
                      type: array
                    required:
                      items:
                        description: APIServiceDescription provides details to OLM
                          about apis provided via aggregation
                        properties:
                          actionDescriptors:
                            items:
                              description: ActionDescriptor describes a declarative
                                action that can be performed on a custom resource
                                instance
                              properties:
                                description:
                                  type: string
                                displayName:
                                  type: string
                                path:
                                  type: string
                                value:
                                  description: RawMessage is a raw encoded JSON value.
                                    It implements Marshaler and Unmarshaler and can
                                    be used to delay JSON decoding or precompute a
                                    JSON encoding.
                                  format: byte
                                  type: string
                                x-descriptors:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - path
                              type: object
                            type: array
                          containerPort:
                            format: int32
                            type: integer
                          deploymentName:
                            type: string
                          description:
                            type: string
                          displayName:
                            type: string
                          group:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                          resources:
                            items:
                              description: APIResourceReference is a Kubernetes resource
                                type used by a custom resource
                              properties:
                                kind:
                                  type: string
                                name:
                                  type: string
                                version:
                                  type: string
                              required:
                              - kind
                              - name
                              - version
                              type: object
                            type: array
                          specDescriptors:
                            items:
                              description: SpecDescriptor describes a field in a spec
                                block of a CRD so that OLM can consume it
                              properties:
                                description:
                                  type: string
                                displayName:
                                  type: string
                                path:
                                  type: string
                                value:
                                  description: RawMessage is a raw encoded JSON value.
                                    It implements Marshaler and Unmarshaler and can
                                    be used to delay JSON decoding or precompute a
                                    JSON encoding.
                                  format: byte
                                  type: string
                                x-descriptors:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - path
                              type: object
                            type: array
                          statusDescriptors:
                            items:
                              description: StatusDescriptor describes a field in a
                                status block of a CRD so that OLM can consume it
                              properties:
                                description:
                                  type: string
                                displayName:
                                  type: string
                                path:
                                  type: string
                                value:
                                  description: RawMessage is a raw encoded JSON value.
                                    It implements Marshaler and Unmarshaler and can
                                    be used to delay JSON decoding or precompute a
                                    JSON encoding.
                                  format: byte
                                  type: string
                                x-descriptors:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - path
                              type: object
                            type: array
                          version:
                            type: string
                        required:
                        - group
                        - kind
                        - name
                        - version
                        type: object
                      type: array
                  type: object
                customresourcedefinitions:
                  description: "CustomResourceDefinitions declares all of the CRDs
                    managed or required by an operator being ran by ClusterServiceVersion.
                    \n If the CRD is present in the Owned list, it is implicitly required."
                  properties:
                    owned:
                      items:
                        description: CRDDescription provides details to OLM about
                          the CRDs
                        properties:
                          actionDescriptors:
                            items:
                              description: ActionDescriptor describes a declarative
                                action that can be performed on a custom resource
                                instance
                              properties:
                                description:
                                  type: string
                                displayName:
                                  type: string
                                path:
                                  type: string
                                value:
                                  description: RawMessage is a raw encoded JSON value.
                                    It implements Marshaler and Unmarshaler and can
                                    be used to delay JSON decoding or precompute a
                                    JSON encoding.
                                  format: byte
                                  type: string
                                x-descriptors:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - path
                              type: object
                            type: array
                          description:
                            type: string
                          displayName:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                          resources:
                            items:
                              description: APIResourceReference is a Kubernetes resource
                                type used by a custom resource
                              properties:
                                kind:
                                  type: string
                                name:
                                  type: string
                                version:
                                  type: string
                              required:
                              - kind
                              - name
                              - version
                              type: object
                            type: array
                          specDescriptors:
                            items:
                              description: SpecDescriptor describes a field in a spec
                                block of a CRD so that OLM can consume it
                              properties:
                                description:
                                  type: string
                                displayName:
                                  type: string
                                path:
                                  type: string
                                value:
                                  description: RawMessage is a raw encoded JSON value.
                                    It implements Marshaler and Unmarshaler and can
                                    be used to delay JSON decoding or precompute a
                                    JSON encoding.
                                  format: byte
                                  type: string
                                x-descriptors:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - path
                              type: object
                            type: array
                          statusDescriptors:
                            items:
                              description: StatusDescriptor describes a field in a
                                status block of a CRD so that OLM can consume it
                              properties:
                                description:
                                  type: string
                                displayName:
                                  type: string
                                path:
                                  type: string
                                value:
                                  description: RawMessage is a raw encoded JSON value.
                                    It implements Marshaler and Unmarshaler and can
                                    be used to delay JSON decoding or precompute a
                                    JSON encoding.
                                  format: byte
                                  type: string
                                x-descriptors:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - path
                              type: object
                            type: array
                          version:
                            type: string
                        required:
                        - kind
                        - name
                        - version
                        type: object
                      type: array
                    required:
                      items:
                        description: CRDDescription provides details to OLM about
                          the CRDs
                        properties:
                          actionDescriptors:
                            items:
                              description: ActionDescriptor describes a declarative
                                action that can be performed on a custom resource
                                instance
                              properties:
                                description:
                                  type: string
                                displayName:
                                  type: string
                                path:
                                  type: string
                                value:
                                  description: RawMessage is a raw encoded JSON value.
                                    It implements Marshaler and Unmarshaler and can
                                    be used to delay JSON decoding or precompute a
                                    JSON encoding.
                                  format: byte
                                  type: string
                                x-descriptors:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - path
                              type: object
                            type: array
                          description:
                            type: string
                          displayName:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                          resources:
                            items:
                              description: APIResourceReference is a Kubernetes resource
                                type used by a custom resource
                              properties:
                                kind:
                                  type: string
                                name:
                                  type: string
                                version:
                                  type: string
                              required:
                              - kind
                              - name
                              - version
                              type: object
                            type: array
                          specDescriptors:
                            items:
                              description: SpecDescriptor describes a field in a spec
                                block of a CRD so that OLM can consume it
                              properties:
                                description:
                                  type: string
                                displayName:
                                  type: string
                                path:
                                  type: string
                                value:
                                  description: RawMessage is a raw encoded JSON value.
                                    It implements Marshaler and Unmarshaler and can
                                    be used to delay JSON decoding or precompute a
                                    JSON encoding.
                                  format: byte
                                  type: string
                                x-descriptors:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - path
                              type: object
                            type: array
                          statusDescriptors:
                            items:
                              description: StatusDescriptor describes a field in a
                                status block of a CRD so that OLM can consume it
                              properties:
                                description:
                                  type: string
                                displayName:
                                  type: string
                                path:
                                  type: string
                                value:
                                  description: RawMessage is a raw encoded JSON value.
                                    It implements Marshaler and Unmarshaler and can
                                    be used to delay JSON decoding or precompute a
                                    JSON encoding.
                                  format: byte
                                  type: string
                                x-descriptors:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - path
                              type: object
                            type: array
                          version:
                            type: string
                        required:
                        - kind
                        - name
                        - version
                        type: object
                      type: array
                  type: object
                description:
                  type: string
                displayName:
                  type: string
                icon:
                  items:
                    properties:
                      base64data:
                        type: string
                      mediatype:
                        type: string
                    required:
                    - base64data
                    - mediatype
                    type: object
                  type: array
                install:
                  description: NamedInstallStrategy represents the block of an ClusterServiceVersion
                    resource where the install strategy is specified.
                  properties:
                    spec:
                      description: StrategyDetailsDeployment represents the parsed
                        details of a Deployment InstallStrategy.
                      properties:
                        clusterPermissions:
                          items:
                            description: StrategyDeploymentPermissions describe the
                              rbac rules and service account needed by the install
                              strategy
                            properties:
                              rules:
                                items:
                                  description: PolicyRule holds information that describes
                                    a policy rule, but does not contain information
                                    about who the rule applies to or which namespace
                                    the rule applies to.
                                  properties:
                                    apiGroups:
                                      description: APIGroups is the name of the APIGroup
                                        that contains the resources.  If multiple
                                        API groups are specified, any action requested
                                        against one of the enumerated resources in
                                        any API group will be allowed.
                                      items:
                                        type: string
                                      type: array
                                    nonResourceURLs:
                                      description: NonResourceURLs is a set of partial
                                        urls that a user should have access to.  *s
                                        are allowed, but only as the full, final step
                                        in the path Since non-resource URLs are not
                                        namespaced, this field is only applicable
                                        for ClusterRoles referenced from a ClusterRoleBinding.
                                        Rules can either apply to API resources (such
                                        as "pods" or "secrets") or non-resource URL
                                        paths (such as "/api"),  but not both.
                                      items:
                                        type: string
                                      type: array
                                    resourceNames:
                                      description: ResourceNames is an optional white
                                        list of names that the rule applies to.  An
                                        empty set means that everything is allowed.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: Resources is a list of resources
                                        this rule applies to.  ResourceAll represents
                                        all resources.
                                      items:
                                        type: string
                                      type: array
                                    verbs:
                                      description: Verbs is a list of Verbs that apply
                                        to ALL the ResourceKinds and AttributeRestrictions
                                        contained in this rule.  VerbAll represents
                                        all kinds.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - verbs
                                  type: object
                                type: array
                              serviceAccountName:
                                type: string
                            required:
                            - rules
                            - serviceAccountName
                            type: object
                          type: array
                        deployments:
                          items:
                            description: StrategyDeploymentSpec contains the name,
                              spec and labels for the deployment ALM should create
                            properties:
                              label:
                                additionalProperties:
                                  type: string
                                description: Set is a map of label:value. It implements
                                  Labels.
                                type: object
                              name:
                                type: string
                              spec:
                                description: DeploymentSpec is the specification of
                                  the desired behavior of the Deployment.
                                properties:
                                  minReadySeconds:
                                    description: Minimum number of seconds for which
                                      a newly created pod should be ready without
                                      any of its container crashing, for it to be
                                      considered available. Defaults to 0 (pod will
                                      be considered available as soon as it is ready)
                                    format: int32
                                    type: integer
                                  paused:
                                    description: Indicates that the deployment is
                                      paused.
                                    type: boolean
                                  progressDeadlineSeconds:
                                    description: The maximum time in seconds for a
                                      deployment to make progress before it is considered
                                      to be failed. The deployment controller will
                                      continue to process failed deployments and a
                                      condition with a ProgressDeadlineExceeded reason
                                      will be surfaced in the deployment status. Note
                                      that progress will not be estimated during the
                                      time a deployment is paused. Defaults to 600s.
                                    format: int32
                                    type: integer
                                  replicas:
                                    description: Number of desired pods. This is a
                                      pointer to distinguish between explicit zero
                                      and not specified. Defaults to 1.
                                    format: int32
                                    type: integer
                                  revisionHistoryLimit:
                                    description: The number of old ReplicaSets to
                                      retain to allow rollback. This is a pointer
                                      to distinguish between explicit zero and not
                                      specified. Defaults to 10.
                                    format: int32
                                    type: integer
                                  selector:
                                    description: Label selector for pods. Existing
                                      ReplicaSets whose pods are selected by this
                                      will be the ones affected by this deployment.
                                      It must match the pod template's labels.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  strategy:
                                    description: The deployment strategy to use to
                                      replace existing pods with new ones.
                                    properties:
                                      rollingUpdate:
                                        description: 'Rolling update config params.
                                          Present only if DeploymentStrategyType =
                                          RollingUpdate. --- TODO: Update this to
                                          follow our convention for oneOf, whatever
                                          we decide it to be.'
                                        properties:
                                          maxSurge:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: 'The maximum number of pods
                                              that can be scheduled above the desired
                                              number of pods. Value can be an absolute
                                              number (ex: 5) or a percentage of desired
                                              pods (ex: 10%). This can not be 0 if
                                              MaxUnavailable is 0. Absolute number
                                              is calculated from percentage by rounding
                                              up. Defaults to 25%. Example: when this
                                              is set to 30%, the new ReplicaSet can
                                              be scaled up immediately when the rolling
                                              update starts, such that the total number
                                              of old and new pods do not exceed 130%
                                              of desired pods. Once old pods have
                                              been killed, new ReplicaSet can be scaled
                                              up further, ensuring that total number
                                              of pods running at any time during the
                                              update is at most 130% of desired pods.'
                                            x-kubernetes-int-or-string: true
                                          maxUnavailable:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: 'The maximum number of pods
                                              that can be unavailable during the update.
                                              Value can be an absolute number (ex:
                                              5) or a percentage of desired pods (ex:
                                              10%). Absolute number is calculated
                                              from percentage by rounding down. This
                                              can not be 0 if MaxSurge is 0. Defaults
                                              to 25%. Example: when this is set to
                                              30%, the old ReplicaSet can be scaled
                                              down to 70% of desired pods immediately
                                              when the rolling update starts. Once
                                              new pods are ready, old ReplicaSet can
                                              be scaled down further, followed by
                                              scaling up the new ReplicaSet, ensuring
                                              that the total number of pods available
                                              at all times during the update is at
                                              least 70% of desired pods.'
                                            x-kubernetes-int-or-string: true
                                        type: object
                                      type:
                                        description: Type of deployment. Can be "Recreate"
                                          or "RollingUpdate". Default is RollingUpdate.
                                        type: string
                                    type: object
                                  template:
                                    description: Template describes the pods that
                                      will be created.
                                    properties:
                                      metadata:
                                        description: 'Standard object''s metadata.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      spec:
                                        description: 'Specification of the desired
                                          behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                                        properties:
                                          activeDeadlineSeconds:
                                            description: Optional duration in seconds
                                              the pod may be active on the node relative
                                              to StartTime before the system will
                                              actively try to mark it failed and kill
                                              associated containers. Value must be
                                              a positive integer.
                                            format: int64
                                            type: integer
                                          affinity:
                                            description: If specified, the pod's scheduling
                                              constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity
                                                  scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      matches the corresponding matchExpressions;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: An empty preferred
                                                        scheduling term matches all
                                                        objects with implicit weight
                                                        0 (i.e. it's a no-op). A null
                                                        preferred scheduling term
                                                        matches no objects (i.e. is
                                                        also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector
                                                            term, associated with
                                                            the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        weight:
                                                          description: Weight associated
                                                            with matching the corresponding
                                                            nodeSelectorTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - preference
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to an update), the system
                                                      may or may not try to eventually
                                                      evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list
                                                          of node selector terms.
                                                          The terms are ORed.
                                                        items:
                                                          description: A null or empty
                                                            node selector term matches
                                                            no objects. The requirements
                                                            of them are ANDed. The
                                                            TopologySelectorTerm type
                                                            implements a subset of
                                                            the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        type: array
                                                    required:
                                                    - nodeSelectorTerms
                                                    type: object
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity
                                                  scheduling rules (e.g. co-locate
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      has pods which matches the corresponding
                                                      podAffinityTerm; the node(s)
                                                      with the highest sum are the
                                                      most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies which namespaces
                                                                the labelSelector
                                                                applies to (matches
                                                                against); null or
                                                                empty list means "this
                                                                pod's namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies which namespaces
                                                            the labelSelector applies
                                                            to (matches against);
                                                            null or empty list means
                                                            "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity
                                                  scheduling rules (e.g. avoid putting
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the anti-affinity
                                                      expressions specified by this
                                                      field, but it may choose a node
                                                      that violates one or more of
                                                      the expressions. The node that
                                                      is most preferred is the one
                                                      with the greatest sum of weights,
                                                      i.e. for each node that meets
                                                      all of the scheduling requirements
                                                      (resource request, requiredDuringScheduling
                                                      anti-affinity expressions, etc.),
                                                      compute a sum by iterating through
                                                      the elements of this field and
                                                      adding "weight" to the sum if
                                                      the node has pods which matches
                                                      the corresponding podAffinityTerm;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies which namespaces
                                                                the labelSelector
                                                                applies to (matches
                                                                against); null or
                                                                empty list means "this
                                                                pod's namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity
                                                      requirements specified by this
                                                      field are not met at scheduling
                                                      time, the pod will not be scheduled
                                                      onto the node. If the anti-affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies which namespaces
                                                            the labelSelector applies
                                                            to (matches against);
                                                            null or empty list means
                                                            "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                            type: object
                                          automountServiceAccountToken:
                                            description: AutomountServiceAccountToken
                                              indicates whether a service account
                                              token should be automatically mounted.
                                            type: boolean
                                          containers:
                                            description: List of containers belonging
                                              to the pod. Containers cannot currently
                                              be added or removed. There must be at
                                              least one container in a Pod. Cannot
                                              be updated.
                                            items:
                                              description: A single application container
                                                that you want to run within a pod.
                                              properties:
                                                args:
                                                  description: 'Arguments to the entrypoint.
                                                    The docker image''s CMD is used
                                                    if this is not provided. Variable
                                                    references $(VAR_NAME) are expanded
                                                    using the container''s environment.
                                                    If a variable cannot be resolved,
                                                    the reference in the input string
                                                    will be unchanged. The $(VAR_NAME)
                                                    syntax can be escaped with a double
                                                    $$, ie: $$(VAR_NAME). Escaped
                                                    references will never be expanded,
                                                    regardless of whether the variable
                                                    exists or not. Cannot be updated.
                                                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                                  items:
                                                    type: string
                                                  type: array
                                                command:
                                                  description: 'Entrypoint array.
                                                    Not executed within a shell. The
                                                    docker image''s ENTRYPOINT is
                                                    used if this is not provided.
                                                    Variable references $(VAR_NAME)
                                                    are expanded using the container''s
                                                    environment. If a variable cannot
                                                    be resolved, the reference in
                                                    the input string will be unchanged.
                                                    The $(VAR_NAME) syntax can be
                                                    escaped with a double $$, ie:
                                                    $$(VAR_NAME). Escaped references
                                                    will never be expanded, regardless
                                                    of whether the variable exists
                                                    or not. Cannot be updated. More
                                                    info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                                  items:
                                                    type: string
                                                  type: array
                                                env:
                                                  description: List of environment
                                                    variables to set in the container.
                                                    Cannot be updated.
                                                  items:
                                                    description: EnvVar represents
                                                      an environment variable present
                                                      in a Container.
                                                    properties:
                                                      name:
                                                        description: Name of the environment
                                                          variable. Must be a C_IDENTIFIER.
                                                        type: string
                                                      value:
                                                        description: 'Variable references
                                                          $(VAR_NAME) are expanded
                                                          using the previous defined
                                                          environment variables in
                                                          the container and any service
                                                          environment variables. If
                                                          a variable cannot be resolved,
                                                          the reference in the input
                                                          string will be unchanged.
                                                          The $(VAR_NAME) syntax can
                                                          be escaped with a double
                                                          $$, ie: $$(VAR_NAME). Escaped
                                                          references will never be
                                                          expanded, regardless of
                                                          whether the variable exists
                                                          or not. Defaults to "".'
                                                        type: string
                                                      valueFrom:
                                                        description: Source for the
                                                          environment variable's value.
                                                          Cannot be used if value
                                                          is not empty.
                                                        properties:
                                                          configMapKeyRef:
                                                            description: Selects a
                                                              key of a ConfigMap.
                                                            properties:
                                                              key:
                                                                description: The key
                                                                  to select.
                                                                type: string
                                                              name:
                                                                description: 'Name
                                                                  of the referent.
                                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                                  TODO: Add other
                                                                  useful fields. apiVersion,
                                                                  kind, uid?'
                                                                type: string
                                                              optional:
                                                                description: Specify
                                                                  whether the ConfigMap
                                                                  or its key must
                                                                  be defined
                                                                type: boolean
                                                            required:
                                                            - key
                                                            type: object
                                                          fieldRef:
                                                            description: 'Selects
                                                              a field of the pod:
                                                              supports metadata.name,
                                                              metadata.namespace,
                                                              metadata.labels, metadata.annotations,
                                                              spec.nodeName, spec.serviceAccountName,
                                                              status.hostIP, status.podIP,
                                                              status.podIPs.'
                                                            properties:
                                                              apiVersion:
                                                                description: Version
                                                                  of the schema the
                                                                  FieldPath is written
                                                                  in terms of, defaults
                                                                  to "v1".
                                                                type: string
                                                              fieldPath:
                                                                description: Path
                                                                  of the field to
                                                                  select in the specified
                                                                  API version.
                                                                type: string
                                                            required:
                                                            - fieldPath
                                                            type: object
                                                          resourceFieldRef:
                                                            description: 'Selects
                                                              a resource of the container:
                                                              only resources limits
                                                              and requests (limits.cpu,
                                                              limits.memory, limits.ephemeral-storage,
                                                              requests.cpu, requests.memory
                                                              and requests.ephemeral-storage)
                                                              are currently supported.'
                                                            properties:
                                                              containerName:
                                                                description: 'Container
                                                                  name: required for
                                                                  volumes, optional
                                                                  for env vars'
                                                                type: string
                                                              divisor:
                                                                anyOf:
                                                                - type: integer
                                                                - type: string
                                                                description: Specifies
                                                                  the output format
                                                                  of the exposed resources,
                                                                  defaults to "1"
                                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                                x-kubernetes-int-or-string: true
                                                              resource:
                                                                description: 'Required:
                                                                  resource to select'
                                                                type: string
                                                            required:
                                                            - resource
                                                            type: object
                                                          secretKeyRef:
                                                            description: Selects a
                                                              key of a secret in the
                                                              pod's namespace
                                                            properties:
                                                              key:
                                                                description: The key
                                                                  of the secret to
                                                                  select from.  Must
                                                                  be a valid secret
                                                                  key.
                                                                type: string
                                                              name:
                                                                description: 'Name
                                                                  of the referent.
                                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                                  TODO: Add other
                                                                  useful fields. apiVersion,
                                                                  kind, uid?'
                                                                type: string
                                                              optional:
                                                                description: Specify
                                                                  whether the Secret
                                                                  or its key must
                                                                  be defined
                                                                type: boolean
                                                            required:
                                                            - key
                                                            type: object
                                                        type: object
                                                    required:
                                                    - name
                                                    type: object
                                                  type: array
                                                envFrom:
                                                  description: List of sources to
                                                    populate environment variables
                                                    in the container. The keys defined
                                                    within a source must be a C_IDENTIFIER.
                                                    All invalid keys will be reported
                                                    as an event when the container
                                                    is starting. When a key exists
                                                    in multiple sources, the value
                                                    associated with the last source
                                                    will take precedence. Values defined
                                                    by an Env with a duplicate key
                                                    will take precedence. Cannot be
                                                    updated.
                                                  items:
                                                    description: EnvFromSource represents
                                                      the source of a set of ConfigMaps
                                                    properties:
                                                      configMapRef:
                                                        description: The ConfigMap
                                                          to select from
                                                        properties:
                                                          name:
                                                            description: 'Name of
                                                              the referent. More info:
                                                              https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                              TODO: Add other useful
                                                              fields. apiVersion,
                                                              kind, uid?'
                                                            type: string
                                                          optional:
                                                            description: Specify whether
                                                              the ConfigMap must be
                                                              defined
                                                            type: boolean
                                                        type: object
                                                      prefix:
                                                        description: An optional identifier
                                                          to prepend to each key in
                                                          the ConfigMap. Must be a
                                                          C_IDENTIFIER.
                                                        type: string
                                                      secretRef:
                                                        description: The Secret to
                                                          select from
                                                        properties:
                                                          name:
                                                            description: 'Name of
                                                              the referent. More info:
                                                              https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                              TODO: Add other useful
                                                              fields. apiVersion,
                                                              kind, uid?'
                                                            type: string
                                                          optional:
                                                            description: Specify whether
                                                              the Secret must be defined
                                                            type: boolean
                                                        type: object
                                                    type: object
                                                  type: array
                                                image:
                                                  description: 'Docker image name.
                                                    More info: https://kubernetes.io/docs/concepts/containers/images
                                                    This field is optional to allow
                                                    higher level config management
                                                    to default or override container
                                                    images in workload controllers
                                                    like Deployments and StatefulSets.'
                                                  type: string
                                                imagePullPolicy:
                                                  description: 'Image pull policy.
                                                    One of Always, Never, IfNotPresent.
                                                    Defaults to Always if :latest
                                                    tag is specified, or IfNotPresent
                                                    otherwise. Cannot be updated.
                                                    More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                                  type: string
                                                lifecycle:
                                                  description: Actions that the management
                                                    system should take in response
                                                    to container lifecycle events.
                                                    Cannot be updated.
                                                  properties:
                                                    postStart:
                                                      description: 'PostStart is called
                                                        immediately after a container
                                                        is created. If the handler
                                                        fails, the container is terminated
                                                        and restarted according to
                                                        its restart policy. Other
                                                        management of the container
                                                        blocks until the hook completes.
                                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                                      properties:
                                                        exec:
                                                          description: One and only
                                                            one of the following should
                                                            be specified. Exec specifies
                                                            the action to take.
                                                          properties:
                                                            command:
                                                              description: Command
                                                                is the command line
                                                                to execute inside
                                                                the container, the
                                                                working directory
                                                                for the command  is
                                                                root ('/') in the
                                                                container's filesystem.
                                                                The command is simply
                                                                exec'd, it is not
                                                                run inside a shell,
                                                                so traditional shell
                                                                instructions ('|',
                                                                etc) won't work. To
                                                                use a shell, you need
                                                                to explicitly call
                                                                out to that shell.
                                                                Exit status of 0 is
                                                                treated as live/healthy
                                                                and non-zero is unhealthy.
                                                              items:
                                                                type: string
                                                              type: array
                                                          type: object
                                                        httpGet:
                                                          description: HTTPGet specifies
                                                            the http request to perform.
                                                          properties:
                                                            host:
                                                              description: Host name
                                                                to connect to, defaults
                                                                to the pod IP. You
                                                                probably want to set
                                                                "Host" in httpHeaders
                                                                instead.
                                                              type: string
                                                            httpHeaders:
                                                              description: Custom
                                                                headers to set in
                                                                the request. HTTP
                                                                allows repeated headers.
                                                              items:
                                                                description: HTTPHeader
                                                                  describes a custom
                                                                  header to be used
                                                                  in HTTP probes
                                                                properties:
                                                                  name:
                                                                    description: The
                                                                      header field
                                                                      name
                                                                    type: string
                                                                  value:
                                                                    description: The
                                                                      header field
                                                                      value
                                                                    type: string
                                                                required:
                                                                - name
                                                                - value
                                                                type: object
                                                              type: array
                                                            path:
                                                              description: Path to
                                                                access on the HTTP
                                                                server.
                                                              type: string
                                                            port:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Name or
                                                                number of the port
                                                                to access on the container.
                                                                Number must be in
                                                                the range 1 to 65535.
                                                                Name must be an IANA_SVC_NAME.
                                                              x-kubernetes-int-or-string: true
                                                            scheme:
                                                              description: Scheme
                                                                to use for connecting
                                                                to the host. Defaults
                                                                to HTTP.
                                                              type: string
                                                          required:
                                                          - port
                                                          type: object
                                                        tcpSocket:
                                                          description: 'TCPSocket
                                                            specifies an action involving
                                                            a TCP port. TCP hooks
                                                            not yet supported TODO:
                                                            implement a realistic
                                                            TCP lifecycle hook'
                                                          properties:
                                                            host:
                                                              description: 'Optional:
                                                                Host name to connect
                                                                to, defaults to the
                                                                pod IP.'
                                                              type: string
                                                            port:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Number
                                                                or name of the port
                                                                to access on the container.
                                                                Number must be in
                                                                the range 1 to 65535.
                                                                Name must be an IANA_SVC_NAME.
                                                              x-kubernetes-int-or-string: true
                                                          required:
                                                          - port
                                                          type: object
                                                      type: object
                                                    preStop:
                                                      description: 'PreStop is called
                                                        immediately before a container
                                                        is terminated due to an API
                                                        request or management event
                                                        such as liveness/startup probe
                                                        failure, preemption, resource
                                                        contention, etc. The handler
                                                        is not called if the container
                                                        crashes or exits. The reason
                                                        for termination is passed
                                                        to the handler. The Pod''s
                                                        termination grace period countdown
                                                        begins before the PreStop
                                                        hooked is executed. Regardless
                                                        of the outcome of the handler,
                                                        the container will eventually
                                                        terminate within the Pod''s
                                                        termination grace period.
                                                        Other management of the container
                                                        blocks until the hook completes
                                                        or until the termination grace
                                                        period is reached. More info:
                                                        https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                                      properties:
                                                        exec:
                                                          description: One and only
                                                            one of the following should
                                                            be specified. Exec specifies
                                                            the action to take.
                                                          properties:
                                                            command:
                                                              description: Command
                                                                is the command line
                                                                to execute inside
                                                                the container, the
                                                                working directory
                                                                for the command  is
                                                                root ('/') in the
                                                                container's filesystem.
                                                                The command is simply
                                                                exec'd, it is not
                                                                run inside a shell,
                                                                so traditional shell
                                                                instructions ('|',
                                                                etc) won't work. To
                                                                use a shell, you need
                                                                to explicitly call
                                                                out to that shell.
                                                                Exit status of 0 is
                                                                treated as live/healthy
                                                                and non-zero is unhealthy.
                                                              items:
                                                                type: string
                                                              type: array
                                                          type: object
                                                        httpGet:
                                                          description: HTTPGet specifies
                                                            the http request to perform.
                                                          properties:
                                                            host:
                                                              description: Host name
                                                                to connect to, defaults
                                                                to the pod IP. You
                                                                probably want to set
                                                                "Host" in httpHeaders
                                                                instead.
                                                              type: string
                                                            httpHeaders:
                                                              description: Custom
                                                                headers to set in
                                                                the request. HTTP
                                                                allows repeated headers.
                                                              items:
                                                                description: HTTPHeader
                                                                  describes a custom
                                                                  header to be used
                                                                  in HTTP probes
                                                                properties:
                                                                  name:
                                                                    description: The
                                                                      header field
                                                                      name
                                                                    type: string
                                                                  value:
                                                                    description: The
                                                                      header field
                                                                      value
                                                                    type: string
                                                                required:
                                                                - name
                                                                - value
                                                                type: object
                                                              type: array
                                                            path:
                                                              description: Path to
                                                                access on the HTTP
                                                                server.
                                                              type: string
                                                            port:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Name or
                                                                number of the port
                                                                to access on the container.
                                                                Number must be in
                                                                the range 1 to 65535.
                                                                Name must be an IANA_SVC_NAME.
                                                              x-kubernetes-int-or-string: true
                                                            scheme:
                                                              description: Scheme
                                                                to use for connecting
                                                                to the host. Defaults
                                                                to HTTP.
                                                              type: string
                                                          required:
                                                          - port
                                                          type: object
                                                        tcpSocket:
                                                          description: 'TCPSocket
                                                            specifies an action involving
                                                            a TCP port. TCP hooks
                                                            not yet supported TODO:
                                                            implement a realistic
                                                            TCP lifecycle hook'
                                                          properties:
                                                            host:
                                                              description: 'Optional:
                                                                Host name to connect
                                                                to, defaults to the
                                                                pod IP.'
                                                              type: string
                                                            port:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Number
                                                                or name of the port
                                                                to access on the container.
                                                                Number must be in
                                                                the range 1 to 65535.
                                                                Name must be an IANA_SVC_NAME.
                                                              x-kubernetes-int-or-string: true
                                                          required:
                                                          - port
                                                          type: object
                                                      type: object
                                                  type: object
                                                livenessProbe:
                                                  description: 'Periodic probe of
                                                    container liveness. Container
                                                    will be restarted if the probe
                                                    fails. Cannot be updated. More
                                                    info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                  properties:
                                                    exec:
                                                      description: One and only one
                                                        of the following should be
                                                        specified. Exec specifies
                                                        the action to take.
                                                      properties:
                                                        command:
                                                          description: Command is
                                                            the command line to execute
                                                            inside the container,
                                                            the working directory
                                                            for the command  is root
                                                            ('/') in the container's
                                                            filesystem. The command
                                                            is simply exec'd, it is
                                                            not run inside a shell,
                                                            so traditional shell instructions
                                                            ('|', etc) won't work.
                                                            To use a shell, you need
                                                            to explicitly call out
                                                            to that shell. Exit status
                                                            of 0 is treated as live/healthy
                                                            and non-zero is unhealthy.
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    failureThreshold:
                                                      description: Minimum consecutive
                                                        failures for the probe to
                                                        be considered failed after
                                                        having succeeded. Defaults
                                                        to 3. Minimum value is 1.
                                                      format: int32
                                                      type: integer
                                                    httpGet:
                                                      description: HTTPGet specifies
                                                        the http request to perform.
                                                      properties:
                                                        host:
                                                          description: Host name to
                                                            connect to, defaults to
                                                            the pod IP. You probably
                                                            want to set "Host" in
                                                            httpHeaders instead.
                                                          type: string
                                                        httpHeaders:
                                                          description: Custom headers
                                                            to set in the request.
                                                            HTTP allows repeated headers.
                                                          items:
                                                            description: HTTPHeader
                                                              describes a custom header
                                                              to be used in HTTP probes
                                                            properties:
                                                              name:
                                                                description: The header
                                                                  field name
                                                                type: string
                                                              value:
                                                                description: The header
                                                                  field value
                                                                type: string
                                                            required:
                                                            - name
                                                            - value
                                                            type: object
                                                          type: array
                                                        path:
                                                          description: Path to access
                                                            on the HTTP server.
                                                          type: string
                                                        port:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Name or number
                                                            of the port to access
                                                            on the container. Number
                                                            must be in the range 1
                                                            to 65535. Name must be
                                                            an IANA_SVC_NAME.
                                                          x-kubernetes-int-or-string: true
                                                        scheme:
                                                          description: Scheme to use
                                                            for connecting to the
                                                            host. Defaults to HTTP.
                                                          type: string
                                                      required:
                                                      - port
                                                      type: object
                                                    initialDelaySeconds:
                                                      description: 'Number of seconds
                                                        after the container has started
                                                        before liveness probes are
                                                        initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                      format: int32
                                                      type: integer
                                                    periodSeconds:
                                                      description: How often (in seconds)
                                                        to perform the probe. Default
                                                        to 10 seconds. Minimum value
                                                        is 1.
                                                      format: int32
                                                      type: integer
                                                    successThreshold:
                                                      description: Minimum consecutive
                                                        successes for the probe to
                                                        be considered successful after
                                                        having failed. Defaults to
                                                        1. Must be 1 for liveness
                                                        and startup. Minimum value
                                                        is 1.
                                                      format: int32
                                                      type: integer
                                                    tcpSocket:
                                                      description: 'TCPSocket specifies
                                                        an action involving a TCP
                                                        port. TCP hooks not yet supported
                                                        TODO: implement a realistic
                                                        TCP lifecycle hook'
                                                      properties:
                                                        host:
                                                          description: 'Optional:
                                                            Host name to connect to,
                                                            defaults to the pod IP.'
                                                          type: string
                                                        port:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Number or name
                                                            of the port to access
                                                            on the container. Number
                                                            must be in the range 1
                                                            to 65535. Name must be
                                                            an IANA_SVC_NAME.
                                                          x-kubernetes-int-or-string: true
                                                      required:
                                                      - port
                                                      type: object
                                                    timeoutSeconds:
                                                      description: 'Number of seconds
                                                        after which the probe times
                                                        out. Defaults to 1 second.
                                                        Minimum value is 1. More info:
                                                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                      format: int32
                                                      type: integer
                                                  type: object
                                                name:
                                                  description: Name of the container
                                                    specified as a DNS_LABEL. Each
                                                    container in a pod must have a
                                                    unique name (DNS_LABEL). Cannot
                                                    be updated.
                                                  type: string
                                                ports:
                                                  description: List of ports to expose
                                                    from the container. Exposing a
                                                    port here gives the system additional
                                                    information about the network
                                                    connections a container uses,
                                                    but is primarily informational.
                                                    Not specifying a port here DOES
                                                    NOT prevent that port from being
                                                    exposed. Any port which is listening
                                                    on the default "0.0.0.0" address
                                                    inside a container will be accessible
                                                    from the network. Cannot be updated.
                                                  items:
                                                    description: ContainerPort represents
                                                      a network port in a single container.
                                                    properties:
                                                      containerPort:
                                                        description: Number of port
                                                          to expose on the pod's IP
                                                          address. This must be a
                                                          valid port number, 0 < x
                                                          < 65536.
                                                        format: int32
                                                        type: integer
                                                      hostIP:
                                                        description: What host IP
                                                          to bind the external port
                                                          to.
                                                        type: string
                                                      hostPort:
                                                        description: Number of port
                                                          to expose on the host. If
                                                          specified, this must be
                                                          a valid port number, 0 <
                                                          x < 65536. If HostNetwork
                                                          is specified, this must
                                                          match ContainerPort. Most
                                                          containers do not need this.
                                                        format: int32
                                                        type: integer
                                                      name:
                                                        description: If specified,
                                                          this must be an IANA_SVC_NAME
                                                          and unique within the pod.
                                                          Each named port in a pod
                                                          must have a unique name.
                                                          Name for the port that can
                                                          be referred to by services.
                                                        type: string
                                                      protocol:
                                                        default: TCP
                                                        description: Protocol for
                                                          port. Must be UDP, TCP,
                                                          or SCTP. Defaults to "TCP".
                                                        type: string
                                                    required:
                                                    - containerPort
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-map-keys:
                                                  - containerPort
                                                  - protocol
                                                  x-kubernetes-list-type: map
                                                readinessProbe:
                                                  description: 'Periodic probe of
                                                    container service readiness. Container
                                                    will be removed from service endpoints
                                                    if the probe fails. Cannot be
                                                    updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                  properties:
                                                    exec:
                                                      description: One and only one
                                                        of the following should be
                                                        specified. Exec specifies
                                                        the action to take.
                                                      properties:
                                                        command:
                                                          description: Command is
                                                            the command line to execute
                                                            inside the container,
                                                            the working directory
                                                            for the command  is root
                                                            ('/') in the container's
                                                            filesystem. The command
                                                            is simply exec'd, it is
                                                            not run inside a shell,
                                                            so traditional shell instructions
                                                            ('|', etc) won't work.
                                                            To use a shell, you need
                                                            to explicitly call out
                                                            to that shell. Exit status
                                                            of 0 is treated as live/healthy
                                                            and non-zero is unhealthy.
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    failureThreshold:
                                                      description: Minimum consecutive
                                                        failures for the probe to
                                                        be considered failed after
                                                        having succeeded. Defaults
                                                        to 3. Minimum value is 1.
                                                      format: int32
                                                      type: integer
                                                    httpGet:
                                                      description: HTTPGet specifies
                                                        the http request to perform.
                                                      properties:
                                                        host:
                                                          description: Host name to
                                                            connect to, defaults to
                                                            the pod IP. You probably
                                                            want to set "Host" in
                                                            httpHeaders instead.
                                                          type: string
                                                        httpHeaders:
                                                          description: Custom headers
                                                            to set in the request.
                                                            HTTP allows repeated headers.
                                                          items:
                                                            description: HTTPHeader
                                                              describes a custom header
                                                              to be used in HTTP probes
                                                            properties:
                                                              name:
                                                                description: The header
                                                                  field name
                                                                type: string
                                                              value:
                                                                description: The header
                                                                  field value
                                                                type: string
                                                            required:
                                                            - name
                                                            - value
                                                            type: object
                                                          type: array
                                                        path:
                                                          description: Path to access
                                                            on the HTTP server.
                                                          type: string
                                                        port:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Name or number
                                                            of the port to access
                                                            on the container. Number
                                                            must be in the range 1
                                                            to 65535. Name must be
                                                            an IANA_SVC_NAME.
                                                          x-kubernetes-int-or-string: true
                                                        scheme:
                                                          description: Scheme to use
                                                            for connecting to the
                                                            host. Defaults to HTTP.
                                                          type: string
                                                      required:
                                                      - port
                                                      type: object
                                                    initialDelaySeconds:
                                                      description: 'Number of seconds
                                                        after the container has started
                                                        before liveness probes are
                                                        initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                      format: int32
                                                      type: integer
                                                    periodSeconds:
                                                      description: How often (in seconds)
                                                        to perform the probe. Default
                                                        to 10 seconds. Minimum value
                                                        is 1.
                                                      format: int32
                                                      type: integer
                                                    successThreshold:
                                                      description: Minimum consecutive
                                                        successes for the probe to
                                                        be considered successful after
                                                        having failed. Defaults to
                                                        1. Must be 1 for liveness
                                                        and startup. Minimum value
                                                        is 1.
                                                      format: int32
                                                      type: integer
                                                    tcpSocket:
                                                      description: 'TCPSocket specifies
                                                        an action involving a TCP
                                                        port. TCP hooks not yet supported
                                                        TODO: implement a realistic
                                                        TCP lifecycle hook'
                                                      properties:
                                                        host:
                                                          description: 'Optional:
                                                            Host name to connect to,
                                                            defaults to the pod IP.'
                                                          type: string
                                                        port:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Number or name
                                                            of the port to access
                                                            on the container. Number
                                                            must be in the range 1
                                                            to 65535. Name must be
                                                            an IANA_SVC_NAME.
                                                          x-kubernetes-int-or-string: true
                                                      required:
                                                      - port
                                                      type: object
                                                    timeoutSeconds:
                                                      description: 'Number of seconds
                                                        after which the probe times
                                                        out. Defaults to 1 second.
                                                        Minimum value is 1. More info:
                                                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                      format: int32
                                                      type: integer
                                                  type: object
                                                resources:
                                                  description: 'Compute Resources
                                                    required by this container. Cannot
                                                    be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                                  properties:
                                                    limits:
                                                      additionalProperties:
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                      description: 'Limits describes
                                                        the maximum amount of compute
                                                        resources allowed. More info:
                                                        https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                                      type: object
                                                    requests:
                                                      additionalProperties:
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                      description: 'Requests describes
                                                        the minimum amount of compute
                                                        resources required. If Requests
                                                        is omitted for a container,
                                                        it defaults to Limits if that
                                                        is explicitly specified, otherwise
                                                        to an implementation-defined
                                                        value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                                      type: object
                                                  type: object
                                                securityContext:
                                                  description: 'Security options the
                                                    pod should run with. More info:
                                                    https://kubernetes.io/docs/concepts/policy/security-context/
                                                    More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                                                  properties:
                                                    allowPrivilegeEscalation:
                                                      description: 'AllowPrivilegeEscalation
                                                        controls whether a process
                                                        can gain more privileges than
                                                        its parent process. This bool
                                                        directly controls if the no_new_privs
                                                        flag will be set on the container
                                                        process. AllowPrivilegeEscalation
                                                        is true always when the container
                                                        is: 1) run as Privileged 2)
                                                        has CAP_SYS_ADMIN'
                                                      type: boolean
                                                    capabilities:
                                                      description: The capabilities
                                                        to add/drop when running containers.
                                                        Defaults to the default set
                                                        of capabilities granted by
                                                        the container runtime.
                                                      properties:
                                                        add:
                                                          description: Added capabilities
                                                          items:
                                                            description: Capability
                                                              represent POSIX capabilities
                                                              type
                                                            type: string
                                                          type: array
                                                        drop:
                                                          description: Removed capabilities
                                                          items:
                                                            description: Capability
                                                              represent POSIX capabilities
                                                              type
                                                            type: string
                                                          type: array
                                                      type: object
                                                    privileged:
                                                      description: Run container in
                                                        privileged mode. Processes
                                                        in privileged containers are
                                                        essentially equivalent to
                                                        root on the host. Defaults
                                                        to false.
                                                      type: boolean
                                                    procMount:
                                                      description: procMount denotes
                                                        the type of proc mount to
                                                        use for the containers. The
                                                        default is DefaultProcMount
                                                        which uses the container runtime
                                                        defaults for readonly paths
                                                        and masked paths. This requires
                                                        the ProcMountType feature
                                                        flag to be enabled.
                                                      type: string
                                                    readOnlyRootFilesystem:
                                                      description: Whether this container
                                                        has a read-only root filesystem.
                                                        Default is false.
                                                      type: boolean
                                                    runAsGroup:
                                                      description: The GID to run
                                                        the entrypoint of the container
                                                        process. Uses runtime default
                                                        if unset. May also be set
                                                        in PodSecurityContext.  If
                                                        set in both SecurityContext
                                                        and PodSecurityContext, the
                                                        value specified in SecurityContext
                                                        takes precedence.
                                                      format: int64
                                                      type: integer
                                                    runAsNonRoot:
                                                      description: Indicates that
                                                        the container must run as
                                                        a non-root user. If true,
                                                        the Kubelet will validate
                                                        the image at runtime to ensure
                                                        that it does not run as UID
                                                        0 (root) and fail to start
                                                        the container if it does.
                                                        If unset or false, no such
                                                        validation will be performed.
                                                        May also be set in PodSecurityContext.  If
                                                        set in both SecurityContext
                                                        and PodSecurityContext, the
                                                        value specified in SecurityContext
                                                        takes precedence.
                                                      type: boolean
                                                    runAsUser:
                                                      description: The UID to run
                                                        the entrypoint of the container
                                                        process. Defaults to user
                                                        specified in image metadata
                                                        if unspecified. May also be
                                                        set in PodSecurityContext.  If
                                                        set in both SecurityContext
                                                        and PodSecurityContext, the
                                                        value specified in SecurityContext
                                                        takes precedence.
                                                      format: int64
                                                      type: integer
                                                    seLinuxOptions:
                                                      description: The SELinux context
                                                        to be applied to the container.
                                                        If unspecified, the container
                                                        runtime will allocate a random
                                                        SELinux context for each container.  May
                                                        also be set in PodSecurityContext.  If
                                                        set in both SecurityContext
                                                        and PodSecurityContext, the
                                                        value specified in SecurityContext
                                                        takes precedence.
                                                      properties:
                                                        level:
                                                          description: Level is SELinux
                                                            level label that applies
                                                            to the container.
                                                          type: string
                                                        role:
                                                          description: Role is a SELinux
                                                            role label that applies
                                                            to the container.
                                                          type: string
                                                        type:
                                                          description: Type is a SELinux
                                                            type label that applies
                                                            to the container.
                                                          type: string
                                                        user:
                                                          description: User is a SELinux
                                                            user label that applies
                                                            to the container.
                                                          type: string
                                                      type: object
                                                    windowsOptions:
                                                      description: The Windows specific
                                                        settings applied to all containers.
                                                        If unspecified, the options
                                                        from the PodSecurityContext
                                                        will be used. If set in both
                                                        SecurityContext and PodSecurityContext,
                                                        the value specified in SecurityContext
                                                        takes precedence.
                                                      properties:
                                                        gmsaCredentialSpec:
                                                          description: GMSACredentialSpec
                                                            is where the GMSA admission
                                                            webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                                            inlines the contents of
                                                            the GMSA credential spec
                                                            named by the GMSACredentialSpecName
                                                            field.
                                                          type: string
                                                        gmsaCredentialSpecName:
                                                          description: GMSACredentialSpecName
                                                            is the name of the GMSA
                                                            credential spec to use.
                                                          type: string
                                                        runAsUserName:
                                                          description: The UserName
                                                            in Windows to run the
                                                            entrypoint of the container
                                                            process. Defaults to the
                                                            user specified in image
                                                            metadata if unspecified.
                                                            May also be set in PodSecurityContext.
                                                            If set in both SecurityContext
                                                            and PodSecurityContext,
                                                            the value specified in
                                                            SecurityContext takes
                                                            precedence.
                                                          type: string
                                                      type: object
                                                  type: object
                                                startupProbe:
                                                  description: 'StartupProbe indicates
                                                    that the Pod has successfully
                                                    initialized. If specified, no
                                                    other probes are executed until
                                                    this completes successfully. If
                                                    this probe fails, the Pod will
                                                    be restarted, just as if the livenessProbe
                                                    failed. This can be used to provide
                                                    different probe parameters at
                                                    the beginning of a Pod''s lifecycle,
                                                    when it might take a long time
                                                    to load data or warm a cache,
                                                    than during steady-state operation.
                                                    This cannot be updated. This is
                                                    a beta feature enabled by the
                                                    StartupProbe feature flag. More
                                                    info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                  properties:
                                                    exec:
                                                      description: One and only one
                                                        of the following should be
                                                        specified. Exec specifies
                                                        the action to take.
                                                      properties:
                                                        command:
                                                          description: Command is
                                                            the command line to execute
                                                            inside the container,
                                                            the working directory
                                                            for the command  is root
                                                            ('/') in the container's
                                                            filesystem. The command
                                                            is simply exec'd, it is
                                                            not run inside a shell,
                                                            so traditional shell instructions
                                                            ('|', etc) won't work.
                                                            To use a shell, you need
                                                            to explicitly call out
                                                            to that shell. Exit status
                                                            of 0 is treated as live/healthy
                                                            and non-zero is unhealthy.
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    failureThreshold:
                                                      description: Minimum consecutive
                                                        failures for the probe to
                                                        be considered failed after
                                                        having succeeded. Defaults
                                                        to 3. Minimum value is 1.
                                                      format: int32
                                                      type: integer
                                                    httpGet:
                                                      description: HTTPGet specifies
                                                        the http request to perform.
                                                      properties:
                                                        host:
                                                          description: Host name to
                                                            connect to, defaults to
                                                            the pod IP. You probably
                                                            want to set "Host" in
                                                            httpHeaders instead.
                                                          type: string
                                                        httpHeaders:
                                                          description: Custom headers
                                                            to set in the request.
                                                            HTTP allows repeated headers.
                                                          items:
                                                            description: HTTPHeader
                                                              describes a custom header
                                                              to be used in HTTP probes
                                                            properties:
                                                              name:
                                                                description: The header
                                                                  field name
                                                                type: string
                                                              value:
                                                                description: The header
                                                                  field value
                                                                type: string
                                                            required:
                                                            - name
                                                            - value
                                                            type: object
                                                          type: array
                                                        path:
                                                          description: Path to access
                                                            on the HTTP server.
                                                          type: string
                                                        port:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Name or number
                                                            of the port to access
                                                            on the container. Number
                                                            must be in the range 1
                                                            to 65535. Name must be
                                                            an IANA_SVC_NAME.
                                                          x-kubernetes-int-or-string: true
                                                        scheme:
                                                          description: Scheme to use
                                                            for connecting to the
                                                            host. Defaults to HTTP.
                                                          type: string
                                                      required:
                                                      - port
                                                      type: object
                                                    initialDelaySeconds:
                                                      description: 'Number of seconds
                                                        after the container has started
                                                        before liveness probes are
                                                        initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                      format: int32
                                                      type: integer
                                                    periodSeconds:
                                                      description: How often (in seconds)
                                                        to perform the probe. Default
                                                        to 10 seconds. Minimum value
                                                        is 1.
                                                      format: int32
                                                      type: integer
                                                    successThreshold:
                                                      description: Minimum consecutive
                                                        successes for the probe to
                                                        be considered successful after
                                                        having failed. Defaults to
                                                        1. Must be 1 for liveness
                                                        and startup. Minimum value
                                                        is 1.
                                                      format: int32
                                                      type: integer
                                                    tcpSocket:
                                                      description: 'TCPSocket specifies
                                                        an action involving a TCP
                                                        port. TCP hooks not yet supported
                                                        TODO: implement a realistic
                                                        TCP lifecycle hook'
                                                      properties:
                                                        host:
                                                          description: 'Optional:
                                                            Host name to connect to,
                                                            defaults to the pod IP.'
                                                          type: string
                                                        port:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Number or name
                                                            of the port to access
                                                            on the container. Number
                                                            must be in the range 1
                                                            to 65535. Name must be
                                                            an IANA_SVC_NAME.
                                                          x-kubernetes-int-or-string: true
                                                      required:
                                                      - port
                                                      type: object
                                                    timeoutSeconds:
                                                      description: 'Number of seconds
                                                        after which the probe times
                                                        out. Defaults to 1 second.
                                                        Minimum value is 1. More info:
                                                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                      format: int32
                                                      type: integer
                                                  type: object
                                                stdin:
                                                  description: Whether this container
                                                    should allocate a buffer for stdin
                                                    in the container runtime. If this
                                                    is not set, reads from stdin in
                                                    the container will always result
                                                    in EOF. Default is false.
                                                  type: boolean
                                                stdinOnce:
                                                  description: Whether the container
                                                    runtime should close the stdin
                                                    channel after it has been opened
                                                    by a single attach. When stdin
                                                    is true the stdin stream will
                                                    remain open across multiple attach
                                                    sessions. If stdinOnce is set
                                                    to true, stdin is opened on container
                                                    start, is empty until the first
                                                    client attaches to stdin, and
                                                    then remains open and accepts
                                                    data until the client disconnects,
                                                    at which time stdin is closed
                                                    and remains closed until the container
                                                    is restarted. If this flag is
                                                    false, a container processes that
                                                    reads from stdin will never receive
                                                    an EOF. Default is false
                                                  type: boolean
                                                terminationMessagePath:
                                                  description: 'Optional: Path at
                                                    which the file to which the container''s
                                                    termination message will be written
                                                    is mounted into the container''s
                                                    filesystem. Message written is
                                                    intended to be brief final status,
                                                    such as an assertion failure message.
                                                    Will be truncated by the node
                                                    if greater than 4096 bytes. The
                                                    total message length across all
                                                    containers will be limited to
                                                    12kb. Defaults to /dev/termination-log.
                                                    Cannot be updated.'
                                                  type: string
                                                terminationMessagePolicy:
                                                  description: Indicate how the termination
                                                    message should be populated. File
                                                    will use the contents of terminationMessagePath
                                                    to populate the container status
                                                    message on both success and failure.
                                                    FallbackToLogsOnError will use
                                                    the last chunk of container log
                                                    output if the termination message
                                                    file is empty and the container
                                                    exited with an error. The log
                                                    output is limited to 2048 bytes
                                                    or 80 lines, whichever is smaller.
                                                    Defaults to File. Cannot be updated.
                                                  type: string
                                                tty:
                                                  description: Whether this container
                                                    should allocate a TTY for itself,
                                                    also requires 'stdin' to be true.
                                                    Default is false.
                                                  type: boolean
                                                volumeDevices:
                                                  description: volumeDevices is the
                                                    list of block devices to be used
                                                    by the container.
                                                  items:
                                                    description: volumeDevice describes
                                                      a mapping of a raw block device
                                                      within a container.
                                                    properties:
                                                      devicePath:
                                                        description: devicePath is
                                                          the path inside of the container
                                                          that the device will be
                                                          mapped to.
                                                        type: string
                                                      name:
                                                        description: name must match
                                                          the name of a persistentVolumeClaim
                                                          in the pod
                                                        type: string
                                                    required:
                                                    - devicePath
                                                    - name
                                                    type: object
                                                  type: array
                                                volumeMounts:
                                                  description: Pod volumes to mount
                                                    into the container's filesystem.
                                                    Cannot be updated.
                                                  items:
                                                    description: VolumeMount describes
                                                      a mounting of a Volume within
                                                      a container.
                                                    properties:
                                                      mountPath:
                                                        description: Path within the
                                                          container at which the volume
                                                          should be mounted.  Must
                                                          not contain ':'.
                                                        type: string
                                                      mountPropagation:
                                                        description: mountPropagation
                                                          determines how mounts are
                                                          propagated from the host
                                                          to container and the other
                                                          way around. When not set,
                                                          MountPropagationNone is
                                                          used. This field is beta
                                                          in 1.10.
                                                        type: string
                                                      name:
                                                        description: This must match
                                                          the Name of a Volume.
                                                        type: string
                                                      readOnly:
                                                        description: Mounted read-only
                                                          if true, read-write otherwise
                                                          (false or unspecified).
                                                          Defaults to false.
                                                        type: boolean
                                                      subPath:
                                                        description: Path within the
                                                          volume from which the container's
                                                          volume should be mounted.
                                                          Defaults to "" (volume's
                                                          root).
                                                        type: string
                                                      subPathExpr:
                                                        description: Expanded path
                                                          within the volume from which
                                                          the container's volume should
                                                          be mounted. Behaves similarly
                                                          to SubPath but environment
                                                          variable references $(VAR_NAME)
                                                          are expanded using the container's
                                                          environment. Defaults to
                                                          "" (volume's root). SubPathExpr
                                                          and SubPath are mutually
                                                          exclusive.
                                                        type: string
                                                    required:
                                                    - mountPath
                                                    - name
                                                    type: object
                                                  type: array
                                                workingDir:
                                                  description: Container's working
                                                    directory. If not specified, the
                                                    container runtime's default will
                                                    be used, which might be configured
                                                    in the container image. Cannot
                                                    be updated.
                                                  type: string
                                              required:
                                              - name
                                              type: object
                                            type: array
                                          dnsConfig:
                                            description: Specifies the DNS parameters
                                              of a pod. Parameters specified here
                                              will be merged to the generated DNS
                                              configuration based on DNSPolicy.
                                            properties:
                                              nameservers:
                                                description: A list of DNS name server
                                                  IP addresses. This will be appended
                                                  to the base nameservers generated
                                                  from DNSPolicy. Duplicated nameservers
                                                  will be removed.
                                                items:
                                                  type: string
                                                type: array
                                              options:
                                                description: A list of DNS resolver
                                                  options. This will be merged with
                                                  the base options generated from
                                                  DNSPolicy. Duplicated entries will
                                                  be removed. Resolution options given
                                                  in Options will override those that
                                                  appear in the base DNSPolicy.
                                                items:
                                                  description: PodDNSConfigOption
                                                    defines DNS resolver options of
                                                    a pod.
                                                  properties:
                                                    name:
                                                      description: Required.
                                                      type: string
                                                    value:
                                                      type: string
                                                  type: object
                                                type: array
                                              searches:
                                                description: A list of DNS search
                                                  domains for host-name lookup. This
                                                  will be appended to the base search
                                                  paths generated from DNSPolicy.
                                                  Duplicated search paths will be
                                                  removed.
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          dnsPolicy:
                                            description: Set DNS policy for the pod.
                                              Defaults to "ClusterFirst". Valid values
                                              are 'ClusterFirstWithHostNet', 'ClusterFirst',
                                              'Default' or 'None'. DNS parameters
                                              given in DNSConfig will be merged with
                                              the policy selected with DNSPolicy.
                                              To have DNS options set along with hostNetwork,
                                              you have to specify DNS policy explicitly
                                              to 'ClusterFirstWithHostNet'.
                                            type: string
                                          enableServiceLinks:
                                            description: 'EnableServiceLinks indicates
                                              whether information about services should
                                              be injected into pod''s environment
                                              variables, matching the syntax of Docker
                                              links. Optional: Defaults to true.'
                                            type: boolean
                                          ephemeralContainers:
                                            description: List of ephemeral containers
                                              run in this pod. Ephemeral containers
                                              may be run in an existing pod to perform
                                              user-initiated actions such as debugging.
                                              This list cannot be specified when creating
                                              a pod, and it cannot be modified by
                                              updating the pod spec. In order to add
                                              an ephemeral container to an existing
                                              pod, use the pod's ephemeralcontainers
                                              subresource. This field is alpha-level
                                              and is only honored by servers that
                                              enable the EphemeralContainers feature.
                                            items:
                                              description: An EphemeralContainer is
                                                a container that may be added temporarily
                                                to an existing pod for user-initiated
                                                activities such as debugging. Ephemeral
                                                containers have no resource or scheduling
                                                guarantees, and they will not be restarted
                                                when they exit or when a pod is removed
                                                or restarted. If an ephemeral container
                                                causes a pod to exceed its resource
                                                allocation, the pod may be evicted.
                                                Ephemeral containers may not be added
                                                by directly updating the pod spec.
                                                They must be added via the pod's ephemeralcontainers
                                                subresource, and they will appear
                                                in the pod spec once added. This is
                                                an alpha feature enabled by the EphemeralContainers
                                                feature flag.
                                              properties:
                                                args:
                                                  description: 'Arguments to the entrypoint.
                                                    The docker image''s CMD is used
                                                    if this is not provided. Variable
                                                    references $(VAR_NAME) are expanded
                                                    using the container''s environment.
                                                    If a variable cannot be resolved,
                                                    the reference in the input string
                                                    will be unchanged. The $(VAR_NAME)
                                                    syntax can be escaped with a double
                                                    $$, ie: $$(VAR_NAME). Escaped
                                                    references will never be expanded,
                                                    regardless of whether the variable
                                                    exists or not. Cannot be updated.
                                                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                                  items:
                                                    type: string
                                                  type: array
                                                command:
                                                  description: 'Entrypoint array.
                                                    Not executed within a shell. The
                                                    docker image''s ENTRYPOINT is
                                                    used if this is not provided.
                                                    Variable references $(VAR_NAME)
                                                    are expanded using the container''s
                                                    environment. If a variable cannot
                                                    be resolved, the reference in
                                                    the input string will be unchanged.
                                                    The $(VAR_NAME) syntax can be
                                                    escaped with a double $$, ie:
                                                    $$(VAR_NAME). Escaped references
                                                    will never be expanded, regardless
                                                    of whether the variable exists
                                                    or not. Cannot be updated. More
                                                    info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                                  items:
                                                    type: string
                                                  type: array
                                                env:
                                                  description: List of environment
                                                    variables to set in the container.
                                                    Cannot be updated.
                                                  items:
                                                    description: EnvVar represents
                                                      an environment variable present
                                                      in a Container.
                                                    properties:
                                                      name:
                                                        description: Name of the environment
                                                          variable. Must be a C_IDENTIFIER.
                                                        type: string
                                                      value:
                                                        description: 'Variable references
                                                          $(VAR_NAME) are expanded
                                                          using the previous defined
                                                          environment variables in
                                                          the container and any service
                                                          environment variables. If
                                                          a variable cannot be resolved,
                                                          the reference in the input
                                                          string will be unchanged.
                                                          The $(VAR_NAME) syntax can
                                                          be escaped with a double
                                                          $$, ie: $$(VAR_NAME). Escaped
                                                          references will never be
                                                          expanded, regardless of
                                                          whether the variable exists
                                                          or not. Defaults to "".'
                                                        type: string
                                                      valueFrom:
                                                        description: Source for the
                                                          environment variable's value.
                                                          Cannot be used if value
                                                          is not empty.
                                                        properties:
                                                          configMapKeyRef:
                                                            description: Selects a
                                                              key of a ConfigMap.
                                                            properties:
                                                              key:
                                                                description: The key
                                                                  to select.
                                                                type: string
                                                              name:
                                                                description: 'Name
                                                                  of the referent.
                                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                                  TODO: Add other
                                                                  useful fields. apiVersion,
                                                                  kind, uid?'
                                                                type: string
                                                              optional:
                                                                description: Specify
                                                                  whether the ConfigMap
                                                                  or its key must
                                                                  be defined
                                                                type: boolean
                                                            required:
                                                            - key
                                                            type: object
                                                          fieldRef:
                                                            description: 'Selects
                                                              a field of the pod:
                                                              supports metadata.name,
                                                              metadata.namespace,
                                                              metadata.labels, metadata.annotations,
                                                              spec.nodeName, spec.serviceAccountName,
                                                              status.hostIP, status.podIP,
                                                              status.podIPs.'
                                                            properties:
                                                              apiVersion:
                                                                description: Version
                                                                  of the schema the
                                                                  FieldPath is written
                                                                  in terms of, defaults
                                                                  to "v1".
                                                                type: string
                                                              fieldPath:
                                                                description: Path
                                                                  of the field to
                                                                  select in the specified
                                                                  API version.
                                                                type: string
                                                            required:
                                                            - fieldPath
                                                            type: object
                                                          resourceFieldRef:
                                                            description: 'Selects
                                                              a resource of the container:
                                                              only resources limits
                                                              and requests (limits.cpu,
                                                              limits.memory, limits.ephemeral-storage,
                                                              requests.cpu, requests.memory
                                                              and requests.ephemeral-storage)
                                                              are currently supported.'
                                                            properties:
                                                              containerName:
                                                                description: 'Container
                                                                  name: required for
                                                                  volumes, optional
                                                                  for env vars'
                                                                type: string
                                                              divisor:
                                                                anyOf:
                                                                - type: integer
                                                                - type: string
                                                                description: Specifies
                                                                  the output format
                                                                  of the exposed resources,
                                                                  defaults to "1"
                                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                                x-kubernetes-int-or-string: true
                                                              resource:
                                                                description: 'Required:
                                                                  resource to select'
                                                                type: string
                                                            required:
                                                            - resource
                                                            type: object
                                                          secretKeyRef:
                                                            description: Selects a
                                                              key of a secret in the
                                                              pod's namespace
                                                            properties:
                                                              key:
                                                                description: The key
                                                                  of the secret to
                                                                  select from.  Must
                                                                  be a valid secret
                                                                  key.
                                                                type: string
                                                              name:
                                                                description: 'Name
                                                                  of the referent.
                                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                                  TODO: Add other
                                                                  useful fields. apiVersion,
                                                                  kind, uid?'
                                                                type: string
                                                              optional:
                                                                description: Specify
                                                                  whether the Secret
                                                                  or its key must
                                                                  be defined
                                                                type: boolean
                                                            required:
                                                            - key
                                                            type: object
                                                        type: object
                                                    required:
                                                    - name
                                                    type: object
                                                  type: array
                                                envFrom:
                                                  description: List of sources to
                                                    populate environment variables
                                                    in the container. The keys defined
                                                    within a source must be a C_IDENTIFIER.
                                                    All invalid keys will be reported
                                                    as an event when the container
                                                    is starting. When a key exists
                                                    in multiple sources, the value
                                                    associated with the last source
                                                    will take precedence. Values defined
                                                    by an Env with a duplicate key
                                                    will take precedence. Cannot be
                                                    updated.
                                                  items:
                                                    description: EnvFromSource represents
                                                      the source of a set of ConfigMaps
                                                    properties:
                                                      configMapRef:
                                                        description: The ConfigMap
                                                          to select from
                                                        properties:
                                                          name:
                                                            description: 'Name of
                                                              the referent. More info:
                                                              https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                              TODO: Add other useful
                                                              fields. apiVersion,
                                                              kind, uid?'
                                                            type: string
                                                          optional:
                                                            description: Specify whether
                                                              the ConfigMap must be
                                                              defined
                                                            type: boolean
                                                        type: object
                                                      prefix:
                                                        description: An optional identifier
                                                          to prepend to each key in
                                                          the ConfigMap. Must be a
                                                          C_IDENTIFIER.
                                                        type: string
                                                      secretRef:
                                                        description: The Secret to
                                                          select from
                                                        properties:
                                                          name:
                                                            description: 'Name of
                                                              the referent. More info:
                                                              https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                              TODO: Add other useful
                                                              fields. apiVersion,
                                                              kind, uid?'
                                                            type: string
                                                          optional:
                                                            description: Specify whether
                                                              the Secret must be defined
                                                            type: boolean
                                                        type: object
                                                    type: object
                                                  type: array
                                                image:
                                                  description: 'Docker image name.
                                                    More info: https://kubernetes.io/docs/concepts/containers/images'
                                                  type: string
                                                imagePullPolicy:
                                                  description: 'Image pull policy.
                                                    One of Always, Never, IfNotPresent.
                                                    Defaults to Always if :latest
                                                    tag is specified, or IfNotPresent
                                                    otherwise. Cannot be updated.
                                                    More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                                  type: string
                                                lifecycle:
                                                  description: Lifecycle is not allowed
                                                    for ephemeral containers.
                                                  properties:
                                                    postStart:
                                                      description: 'PostStart is called
                                                        immediately after a container
                                                        is created. If the handler
                                                        fails, the container is terminated
                                                        and restarted according to
                                                        its restart policy. Other
                                                        management of the container
                                                        blocks until the hook completes.
                                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                                      properties:
                                                        exec:
                                                          description: One and only
                                                            one of the following should
                                                            be specified. Exec specifies
                                                            the action to take.
                                                          properties:
                                                            command:
                                                              description: Command
                                                                is the command line
                                                                to execute inside
                                                                the container, the
                                                                working directory
                                                                for the command  is
                                                                root ('/') in the
                                                                container's filesystem.
                                                                The command is simply
                                                                exec'd, it is not
                                                                run inside a shell,
                                                                so traditional shell
                                                                instructions ('|',
                                                                etc) won't work. To
                                                                use a shell, you need
                                                                to explicitly call
                                                                out to that shell.
                                                                Exit status of 0 is
                                                                treated as live/healthy
                                                                and non-zero is unhealthy.
                                                              items:
                                                                type: string
                                                              type: array
                                                          type: object
                                                        httpGet:
                                                          description: HTTPGet specifies
                                                            the http request to perform.
                                                          properties:
                                                            host:
                                                              description: Host name
                                                                to connect to, defaults
                                                                to the pod IP. You
                                                                probably want to set
                                                                "Host" in httpHeaders
                                                                instead.
                                                              type: string
                                                            httpHeaders:
                                                              description: Custom
                                                                headers to set in
                                                                the request. HTTP
                                                                allows repeated headers.
                                                              items:
                                                                description: HTTPHeader
                                                                  describes a custom
                                                                  header to be used
                                                                  in HTTP probes
                                                                properties:
                                                                  name:
                                                                    description: The
                                                                      header field
                                                                      name
                                                                    type: string
                                                                  value:
                                                                    description: The
                                                                      header field
                                                                      value
                                                                    type: string
                                                                required:
                                                                - name
                                                                - value
                                                                type: object
                                                              type: array
                                                            path:
                                                              description: Path to
                                                                access on the HTTP
                                                                server.
                                                              type: string
                                                            port:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Name or
                                                                number of the port
                                                                to access on the container.
                                                                Number must be in
                                                                the range 1 to 65535.
                                                                Name must be an IANA_SVC_NAME.
                                                              x-kubernetes-int-or-string: true
                                                            scheme:
                                                              description: Scheme
                                                                to use for connecting
                                                                to the host. Defaults
                                                                to HTTP.
                                                              type: string
                                                          required:
                                                          - port
                                                          type: object
                                                        tcpSocket:
                                                          description: 'TCPSocket
                                                            specifies an action involving
                                                            a TCP port. TCP hooks
                                                            not yet supported TODO:
                                                            implement a realistic
                                                            TCP lifecycle hook'
                                                          properties:
                                                            host:
                                                              description: 'Optional:
                                                                Host name to connect
                                                                to, defaults to the
                                                                pod IP.'
                                                              type: string
                                                            port:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Number
                                                                or name of the port
                                                                to access on the container.
                                                                Number must be in
                                                                the range 1 to 65535.
                                                                Name must be an IANA_SVC_NAME.
                                                              x-kubernetes-int-or-string: true
                                                          required:
                                                          - port
                                                          type: object
                                                      type: object
                                                    preStop:
                                                      description: 'PreStop is called
                                                        immediately before a container
                                                        is terminated due to an API
                                                        request or management event
                                                        such as liveness/startup probe
                                                        failure, preemption, resource
                                                        contention, etc. The handler
                                                        is not called if the container
                                                        crashes or exits. The reason
                                                        for termination is passed
                                                        to the handler. The Pod''s
                                                        termination grace period countdown
                                                        begins before the PreStop
                                                        hooked is executed. Regardless
                                                        of the outcome of the handler,
                                                        the container will eventually
                                                        terminate within the Pod''s
                                                        termination grace period.
                                                        Other management of the container
                                                        blocks until the hook completes
                                                        or until the termination grace
                                                        period is reached. More info:
                                                        https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                                      properties:
                                                        exec:
                                                          description: One and only
                                                            one of the following should
                                                            be specified. Exec specifies
                                                            the action to take.
                                                          properties:
                                                            command:
                                                              description: Command
                                                                is the command line
                                                                to execute inside
                                                                the container, the
                                                                working directory
                                                                for the command  is
                                                                root ('/') in the
                                                                container's filesystem.
                                                                The command is simply
                                                                exec'd, it is not
                                                                run inside a shell,
                                                                so traditional shell
                                                                instructions ('|',
                                                                etc) won't work. To
                                                                use a shell, you need
                                                                to explicitly call
                                                                out to that shell.
                                                                Exit status of 0 is
                                                                treated as live/healthy
                                                                and non-zero is unhealthy.
                                                              items:
                                                                type: string
                                                              type: array
                                                          type: object
                                                        httpGet:
                                                          description: HTTPGet specifies
                                                            the http request to perform.
                                                          properties:
                                                            host:
                                                              description: Host name
                                                                to connect to, defaults
                                                                to the pod IP. You
                                                                probably want to set
                                                                "Host" in httpHeaders
                                                                instead.
                                                              type: string
                                                            httpHeaders:
                                                              description: Custom
                                                                headers to set in
                                                                the request. HTTP
                                                                allows repeated headers.
                                                              items:
                                                                description: HTTPHeader
                                                                  describes a custom
                                                                  header to be used
                                                                  in HTTP probes
                                                                properties:
                                                                  name:
                                                                    description: The
                                                                      header field
                                                                      name
                                                                    type: string
                                                                  value:
                                                                    description: The
                                                                      header field
                                                                      value
                                                                    type: string
                                                                required:
                                                                - name
                                                                - value
                                                                type: object
                                                              type: array
                                                            path:
                                                              description: Path to
                                                                access on the HTTP
                                                                server.
                                                              type: string
                                                            port:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Name or
                                                                number of the port
                                                                to access on the container.
                                                                Number must be in
                                                                the range 1 to 65535.
                                                                Name must be an IANA_SVC_NAME.
                                                              x-kubernetes-int-or-string: true
                                                            scheme:
                                                              description: Scheme
                                                                to use for connecting
                                                                to the host. Defaults
                                                                to HTTP.
                                                              type: string
                                                          required:
                                                          - port
                                                          type: object
                                                        tcpSocket:
                                                          description: 'TCPSocket
                                                            specifies an action involving
                                                            a TCP port. TCP hooks
                                                            not yet supported TODO:
                                                            implement a realistic
                                                            TCP lifecycle hook'
                                                          properties:
                                                            host:
                                                              description: 'Optional:
                                                                Host name to connect
                                                                to, defaults to the
                                                                pod IP.'
                                                              type: string
                                                            port:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Number
                                                                or name of the port
                                                                to access on the container.
                                                                Number must be in
                                                                the range 1 to 65535.
                                                                Name must be an IANA_SVC_NAME.
                                                              x-kubernetes-int-or-string: true
                                                          required:
                                                          - port
                                                          type: object
                                                      type: object
                                                  type: object
                                                livenessProbe:
                                                  description: Probes are not allowed
                                                    for ephemeral containers.
                                                  properties:
                                                    exec:
                                                      description: One and only one
                                                        of the following should be
                                                        specified. Exec specifies
                                                        the action to take.
                                                      properties:
                                                        command:
                                                          description: Command is
                                                            the command line to execute
                                                            inside the container,
                                                            the working directory
                                                            for the command  is root
                                                            ('/') in the container's
                                                            filesystem. The command
                                                            is simply exec'd, it is
                                                            not run inside a shell,
                                                            so traditional shell instructions
                                                            ('|', etc) won't work.
                                                            To use a shell, you need
                                                            to explicitly call out
                                                            to that shell. Exit status
                                                            of 0 is treated as live/healthy
                                                            and non-zero is unhealthy.
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    failureThreshold:
                                                      description: Minimum consecutive
                                                        failures for the probe to
                                                        be considered failed after
                                                        having succeeded. Defaults
                                                        to 3. Minimum value is 1.
                                                      format: int32
                                                      type: integer
                                                    httpGet:
                                                      description: HTTPGet specifies
                                                        the http request to perform.
                                                      properties:
                                                        host:
                                                          description: Host name to
                                                            connect to, defaults to
                                                            the pod IP. You probably
                                                            want to set "Host" in
                                                            httpHeaders instead.
                                                          type: string
                                                        httpHeaders:
                                                          description: Custom headers
                                                            to set in the request.
                                                            HTTP allows repeated headers.
                                                          items:
                                                            description: HTTPHeader
                                                              describes a custom header
                                                              to be used in HTTP probes
                                                            properties:
                                                              name:
                                                                description: The header
                                                                  field name
                                                                type: string
                                                              value:
                                                                description: The header
                                                                  field value
                                                                type: string
                                                            required:
                                                            - name
                                                            - value
                                                            type: object
                                                          type: array
                                                        path:
                                                          description: Path to access
                                                            on the HTTP server.
                                                          type: string
                                                        port:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Name or number
                                                            of the port to access
                                                            on the container. Number
                                                            must be in the range 1
                                                            to 65535. Name must be
                                                            an IANA_SVC_NAME.
                                                          x-kubernetes-int-or-string: true
                                                        scheme:
                                                          description: Scheme to use
                                                            for connecting to the
                                                            host. Defaults to HTTP.
                                                          type: string
                                                      required:
                                                      - port
                                                      type: object
                                                    initialDelaySeconds:
                                                      description: 'Number of seconds
                                                        after the container has started
                                                        before liveness probes are
                                                        initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                      format: int32
                                                      type: integer
                                                    periodSeconds:
                                                      description: How often (in seconds)
                                                        to perform the probe. Default
                                                        to 10 seconds. Minimum value
                                                        is 1.
                                                      format: int32
                                                      type: integer
                                                    successThreshold:
                                                      description: Minimum consecutive
                                                        successes for the probe to
                                                        be considered successful after
                                                        having failed. Defaults to
                                                        1. Must be 1 for liveness
                                                        and startup. Minimum value
                                                        is 1.
                                                      format: int32
                                                      type: integer
                                                    tcpSocket:
                                                      description: 'TCPSocket specifies
                                                        an action involving a TCP
                                                        port. TCP hooks not yet supported
                                                        TODO: implement a realistic
                                                        TCP lifecycle hook'
                                                      properties:
                                                        host:
                                                          description: 'Optional:
                                                            Host name to connect to,
                                                            defaults to the pod IP.'
                                                          type: string
                                                        port:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Number or name
                                                            of the port to access
                                                            on the container. Number
                                                            must be in the range 1
                                                            to 65535. Name must be
                                                            an IANA_SVC_NAME.
                                                          x-kubernetes-int-or-string: true
                                                      required:
                                                      - port
                                                      type: object
                                                    timeoutSeconds:
                                                      description: 'Number of seconds
                                                        after which the probe times
                                                        out. Defaults to 1 second.
                                                        Minimum value is 1. More info:
                                                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                      format: int32
                                                      type: integer
                                                  type: object
                                                name:
                                                  description: Name of the ephemeral
                                                    container specified as a DNS_LABEL.
                                                    This name must be unique among
                                                    all containers, init containers
                                                    and ephemeral containers.
                                                  type: string
                                                ports:
                                                  description: Ports are not allowed
                                                    for ephemeral containers.
                                                  items:
                                                    description: ContainerPort represents
                                                      a network port in a single container.
                                                    properties:
                                                      containerPort:
                                                        description: Number of port
                                                          to expose on the pod's IP
                                                          address. This must be a
                                                          valid port number, 0 < x
                                                          < 65536.
                                                        format: int32
                                                        type: integer
                                                      hostIP:
                                                        description: What host IP
                                                          to bind the external port
                                                          to.
                                                        type: string
                                                      hostPort:
                                                        description: Number of port
                                                          to expose on the host. If
                                                          specified, this must be
                                                          a valid port number, 0 <
                                                          x < 65536. If HostNetwork
                                                          is specified, this must
                                                          match ContainerPort. Most
                                                          containers do not need this.
                                                        format: int32
                                                        type: integer
                                                      name:
                                                        description: If specified,
                                                          this must be an IANA_SVC_NAME
                                                          and unique within the pod.
                                                          Each named port in a pod
                                                          must have a unique name.
                                                          Name for the port that can
                                                          be referred to by services.
                                                        type: string
                                                      protocol:
                                                        description: Protocol for
                                                          port. Must be UDP, TCP,
                                                          or SCTP. Defaults to "TCP".
                                                        type: string
                                                    required:
                                                    - containerPort
                                                    type: object
                                                  type: array
                                                readinessProbe:
                                                  description: Probes are not allowed
                                                    for ephemeral containers.
                                                  properties:
                                                    exec:
                                                      description: One and only one
                                                        of the following should be
                                                        specified. Exec specifies
                                                        the action to take.
                                                      properties:
                                                        command:
                                                          description: Command is
                                                            the command line to execute
                                                            inside the container,
                                                            the working directory
                                                            for the command  is root
                                                            ('/') in the container's
                                                            filesystem. The command
                                                            is simply exec'd, it is
                                                            not run inside a shell,
                                                            so traditional shell instructions
                                                            ('|', etc) won't work.
                                                            To use a shell, you need
                                                            to explicitly call out
                                                            to that shell. Exit status
                                                            of 0 is treated as live/healthy
                                                            and non-zero is unhealthy.
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    failureThreshold:
                                                      description: Minimum consecutive
                                                        failures for the probe to
                                                        be considered failed after
                                                        having succeeded. Defaults
                                                        to 3. Minimum value is 1.
                                                      format: int32
                                                      type: integer
                                                    httpGet:
                                                      description: HTTPGet specifies
                                                        the http request to perform.
                                                      properties:
                                                        host:
                                                          description: Host name to
                                                            connect to, defaults to
                                                            the pod IP. You probably
                                                            want to set "Host" in
                                                            httpHeaders instead.
                                                          type: string
                                                        httpHeaders:
                                                          description: Custom headers
                                                            to set in the request.
                                                            HTTP allows repeated headers.
                                                          items:
                                                            description: HTTPHeader
                                                              describes a custom header
                                                              to be used in HTTP probes
                                                            properties:
                                                              name:
                                                                description: The header
                                                                  field name
                                                                type: string
                                                              value:
                                                                description: The header
                                                                  field value
                                                                type: string
                                                            required:
                                                            - name
                                                            - value
                                                            type: object
                                                          type: array
                                                        path:
                                                          description: Path to access
                                                            on the HTTP server.
                                                          type: string
                                                        port:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Name or number
                                                            of the port to access
                                                            on the container. Number
                                                            must be in the range 1
                                                            to 65535. Name must be
                                                            an IANA_SVC_NAME.
                                                          x-kubernetes-int-or-string: true
                                                        scheme:
                                                          description: Scheme to use
                                                            for connecting to the
                                                            host. Defaults to HTTP.
                                                          type: string
                                                      required:
                                                      - port
                                                      type: object
                                                    initialDelaySeconds:
                                                      description: 'Number of seconds
                                                        after the container has started
                                                        before liveness probes are
                                                        initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                      format: int32
                                                      type: integer
                                                    periodSeconds:
                                                      description: How often (in seconds)
                                                        to perform the probe. Default
                                                        to 10 seconds. Minimum value
                                                        is 1.
                                                      format: int32
                                                      type: integer
                                                    successThreshold:
                                                      description: Minimum consecutive
                                                        successes for the probe to
                                                        be considered successful after
                                                        having failed. Defaults to
                                                        1. Must be 1 for liveness
                                                        and startup. Minimum value
                                                        is 1.
                                                      format: int32
                                                      type: integer
                                                    tcpSocket:
                                                      description: 'TCPSocket specifies
                                                        an action involving a TCP
                                                        port. TCP hooks not yet supported
                                                        TODO: implement a realistic
                                                        TCP lifecycle hook'
                                                      properties:
                                                        host:
                                                          description: 'Optional:
                                                            Host name to connect to,
                                                            defaults to the pod IP.'
                                                          type: string
                                                        port:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Number or name
                                                            of the port to access
                                                            on the container. Number
                                                            must be in the range 1
                                                            to 65535. Name must be
                                                            an IANA_SVC_NAME.
                                                          x-kubernetes-int-or-string: true
                                                      required:
                                                      - port
                                                      type: object
                                                    timeoutSeconds:
                                                      description: 'Number of seconds
                                                        after which the probe times
                                                        out. Defaults to 1 second.
                                                        Minimum value is 1. More info:
                                                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                      format: int32
                                                      type: integer
                                                  type: object
                                                resources:
                                                  description: Resources are not allowed
                                                    for ephemeral containers. Ephemeral
                                                    containers use spare resources
                                                    already allocated to the pod.
                                                  properties:
                                                    limits:
                                                      additionalProperties:
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                      description: 'Limits describes
                                                        the maximum amount of compute
                                                        resources allowed. More info:
                                                        https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                                      type: object
                                                    requests:
                                                      additionalProperties:
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                      description: 'Requests describes
                                                        the minimum amount of compute
                                                        resources required. If Requests
                                                        is omitted for a container,
                                                        it defaults to Limits if that
                                                        is explicitly specified, otherwise
                                                        to an implementation-defined
                                                        value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                                      type: object
                                                  type: object
                                                securityContext:
                                                  description: SecurityContext is
                                                    not allowed for ephemeral containers.
                                                  properties:
                                                    allowPrivilegeEscalation:
                                                      description: 'AllowPrivilegeEscalation
                                                        controls whether a process
                                                        can gain more privileges than
                                                        its parent process. This bool
                                                        directly controls if the no_new_privs
                                                        flag will be set on the container
                                                        process. AllowPrivilegeEscalation
                                                        is true always when the container
                                                        is: 1) run as Privileged 2)
                                                        has CAP_SYS_ADMIN'
                                                      type: boolean
                                                    capabilities:
                                                      description: The capabilities
                                                        to add/drop when running containers.
                                                        Defaults to the default set
                                                        of capabilities granted by
                                                        the container runtime.
                                                      properties:
                                                        add:
                                                          description: Added capabilities
                                                          items:
                                                            description: Capability
                                                              represent POSIX capabilities
                                                              type
                                                            type: string
                                                          type: array
                                                        drop:
                                                          description: Removed capabilities
                                                          items:
                                                            description: Capability
                                                              represent POSIX capabilities
                                                              type
                                                            type: string
                                                          type: array
                                                      type: object
                                                    privileged:
                                                      description: Run container in
                                                        privileged mode. Processes
                                                        in privileged containers are
                                                        essentially equivalent to
                                                        root on the host. Defaults
                                                        to false.
                                                      type: boolean
                                                    procMount:
                                                      description: procMount denotes
                                                        the type of proc mount to
                                                        use for the containers. The
                                                        default is DefaultProcMount
                                                        which uses the container runtime
                                                        defaults for readonly paths
                                                        and masked paths. This requires
                                                        the ProcMountType feature
                                                        flag to be enabled.
                                                      type: string
                                                    readOnlyRootFilesystem:
                                                      description: Whether this container
                                                        has a read-only root filesystem.
                                                        Default is false.
                                                      type: boolean
                                                    runAsGroup:
                                                      description: The GID to run
                                                        the entrypoint of the container
                                                        process. Uses runtime default
                                                        if unset. May also be set
                                                        in PodSecurityContext.  If
                                                        set in both SecurityContext
                                                        and PodSecurityContext, the
                                                        value specified in SecurityContext
                                                        takes precedence.
                                                      format: int64
                                                      type: integer
                                                    runAsNonRoot:
                                                      description: Indicates that
                                                        the container must run as
                                                        a non-root user. If true,
                                                        the Kubelet will validate
                                                        the image at runtime to ensure
                                                        that it does not run as UID
                                                        0 (root) and fail to start
                                                        the container if it does.
                                                        If unset or false, no such
                                                        validation will be performed.
                                                        May also be set in PodSecurityContext.  If
                                                        set in both SecurityContext
                                                        and PodSecurityContext, the
                                                        value specified in SecurityContext
                                                        takes precedence.
                                                      type: boolean
                                                    runAsUser:
                                                      description: The UID to run
                                                        the entrypoint of the container
                                                        process. Defaults to user
                                                        specified in image metadata
                                                        if unspecified. May also be
                                                        set in PodSecurityContext.  If
                                                        set in both SecurityContext
                                                        and PodSecurityContext, the
                                                        value specified in SecurityContext
                                                        takes precedence.
                                                      format: int64
                                                      type: integer
                                                    seLinuxOptions:
                                                      description: The SELinux context
                                                        to be applied to the container.
                                                        If unspecified, the container
                                                        runtime will allocate a random
                                                        SELinux context for each container.  May
                                                        also be set in PodSecurityContext.  If
                                                        set in both SecurityContext
                                                        and PodSecurityContext, the
                                                        value specified in SecurityContext
                                                        takes precedence.
                                                      properties:
                                                        level:
                                                          description: Level is SELinux
                                                            level label that applies
                                                            to the container.
                                                          type: string
                                                        role:
                                                          description: Role is a SELinux
                                                            role label that applies
                                                            to the container.
                                                          type: string
                                                        type:
                                                          description: Type is a SELinux
                                                            type label that applies
                                                            to the container.
                                                          type: string
                                                        user:
                                                          description: User is a SELinux
                                                            user label that applies
                                                            to the container.
                                                          type: string
                                                      type: object
                                                    windowsOptions:
                                                      description: The Windows specific
                                                        settings applied to all containers.
                                                        If unspecified, the options
                                                        from the PodSecurityContext
                                                        will be used. If set in both
                                                        SecurityContext and PodSecurityContext,
                                                        the value specified in SecurityContext
                                                        takes precedence.
                                                      properties:
                                                        gmsaCredentialSpec:
                                                          description: GMSACredentialSpec
                                                            is where the GMSA admission
                                                            webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                                            inlines the contents of
                                                            the GMSA credential spec
                                                            named by the GMSACredentialSpecName
                                                            field.
                                                          type: string
                                                        gmsaCredentialSpecName:
                                                          description: GMSACredentialSpecName
                                                            is the name of the GMSA
                                                            credential spec to use.
                                                          type: string
                                                        runAsUserName:
                                                          description: The UserName
                                                            in Windows to run the
                                                            entrypoint of the container
                                                            process. Defaults to the
                                                            user specified in image
                                                            metadata if unspecified.
                                                            May also be set in PodSecurityContext.
                                                            If set in both SecurityContext
                                                            and PodSecurityContext,
                                                            the value specified in
                                                            SecurityContext takes
                                                            precedence.
                                                          type: string
                                                      type: object
                                                  type: object
                                                startupProbe:
                                                  description: Probes are not allowed
                                                    for ephemeral containers.
                                                  properties:
                                                    exec:
                                                      description: One and only one
                                                        of the following should be
                                                        specified. Exec specifies
                                                        the action to take.
                                                      properties:
                                                        command:
                                                          description: Command is
                                                            the command line to execute
                                                            inside the container,
                                                            the working directory
                                                            for the command  is root
                                                            ('/') in the container's
                                                            filesystem. The command
                                                            is simply exec'd, it is
                                                            not run inside a shell,
                                                            so traditional shell instructions
                                                            ('|', etc) won't work.
                                                            To use a shell, you need
                                                            to explicitly call out
                                                            to that shell. Exit status
                                                            of 0 is treated as live/healthy
                                                            and non-zero is unhealthy.
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    failureThreshold:
                                                      description: Minimum consecutive
                                                        failures for the probe to
                                                        be considered failed after
                                                        having succeeded. Defaults
                                                        to 3. Minimum value is 1.
                                                      format: int32
                                                      type: integer
                                                    httpGet:
                                                      description: HTTPGet specifies
                                                        the http request to perform.
                                                      properties:
                                                        host:
                                                          description: Host name to
                                                            connect to, defaults to
                                                            the pod IP. You probably
                                                            want to set "Host" in
                                                            httpHeaders instead.
                                                          type: string
                                                        httpHeaders:
                                                          description: Custom headers
                                                            to set in the request.
                                                            HTTP allows repeated headers.
                                                          items:
                                                            description: HTTPHeader
                                                              describes a custom header
                                                              to be used in HTTP probes
                                                            properties:
                                                              name:
                                                                description: The header
                                                                  field name
                                                                type: string
                                                              value:
                                                                description: The header
                                                                  field value
                                                                type: string
                                                            required:
                                                            - name
                                                            - value
                                                            type: object
                                                          type: array
                                                        path:
                                                          description: Path to access
                                                            on the HTTP server.
                                                          type: string
                                                        port:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Name or number
                                                            of the port to access
                                                            on the container. Number
                                                            must be in the range 1
                                                            to 65535. Name must be
                                                            an IANA_SVC_NAME.
                                                          x-kubernetes-int-or-string: true
                                                        scheme:
                                                          description: Scheme to use
                                                            for connecting to the
                                                            host. Defaults to HTTP.
                                                          type: string
                                                      required:
                                                      - port
                                                      type: object
                                                    initialDelaySeconds:
                                                      description: 'Number of seconds
                                                        after the container has started
                                                        before liveness probes are
                                                        initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                      format: int32
                                                      type: integer
                                                    periodSeconds:
                                                      description: How often (in seconds)
                                                        to perform the probe. Default
                                                        to 10 seconds. Minimum value
                                                        is 1.
                                                      format: int32
                                                      type: integer
                                                    successThreshold:
                                                      description: Minimum consecutive
                                                        successes for the probe to
                                                        be considered successful after
                                                        having failed. Defaults to
                                                        1. Must be 1 for liveness
                                                        and startup. Minimum value
                                                        is 1.
                                                      format: int32
                                                      type: integer
                                                    tcpSocket:
                                                      description: 'TCPSocket specifies
                                                        an action involving a TCP
                                                        port. TCP hooks not yet supported
                                                        TODO: implement a realistic
                                                        TCP lifecycle hook'
                                                      properties:
                                                        host:
                                                          description: 'Optional:
                                                            Host name to connect to,
                                                            defaults to the pod IP.'
                                                          type: string
                                                        port:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Number or name
                                                            of the port to access
                                                            on the container. Number
                                                            must be in the range 1
                                                            to 65535. Name must be
                                                            an IANA_SVC_NAME.
                                                          x-kubernetes-int-or-string: true
                                                      required:
                                                      - port
                                                      type: object
                                                    timeoutSeconds:
                                                      description: 'Number of seconds
                                                        after which the probe times
                                                        out. Defaults to 1 second.
                                                        Minimum value is 1. More info:
                                                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                      format: int32
                                                      type: integer
                                                  type: object
                                                stdin:
                                                  description: Whether this container
                                                    should allocate a buffer for stdin
                                                    in the container runtime. If this
                                                    is not set, reads from stdin in
                                                    the container will always result
                                                    in EOF. Default is false.
                                                  type: boolean
                                                stdinOnce:
                                                  description: Whether the container
                                                    runtime should close the stdin
                                                    channel after it has been opened
                                                    by a single attach. When stdin
                                                    is true the stdin stream will
                                                    remain open across multiple attach
                                                    sessions. If stdinOnce is set
                                                    to true, stdin is opened on container
                                                    start, is empty until the first
                                                    client attaches to stdin, and
                                                    then remains open and accepts
                                                    data until the client disconnects,
                                                    at which time stdin is closed
                                                    and remains closed until the container
                                                    is restarted. If this flag is
                                                    false, a container processes that
                                                    reads from stdin will never receive
                                                    an EOF. Default is false
                                                  type: boolean
                                                targetContainerName:
                                                  description: If set, the name of
                                                    the container from PodSpec that
                                                    this ephemeral container targets.
                                                    The ephemeral container will be
                                                    run in the namespaces (IPC, PID,
                                                    etc) of this container. If not
                                                    set then the ephemeral container
                                                    is run in whatever namespaces
                                                    are shared for the pod. Note that
                                                    the container runtime must support
                                                    this feature.
                                                  type: string
                                                terminationMessagePath:
                                                  description: 'Optional: Path at
                                                    which the file to which the container''s
                                                    termination message will be written
                                                    is mounted into the container''s
                                                    filesystem. Message written is
                                                    intended to be brief final status,
                                                    such as an assertion failure message.
                                                    Will be truncated by the node
                                                    if greater than 4096 bytes. The
                                                    total message length across all
                                                    containers will be limited to
                                                    12kb. Defaults to /dev/termination-log.
                                                    Cannot be updated.'
                                                  type: string
                                                terminationMessagePolicy:
                                                  description: Indicate how the termination
                                                    message should be populated. File
                                                    will use the contents of terminationMessagePath
                                                    to populate the container status
                                                    message on both success and failure.
                                                    FallbackToLogsOnError will use
                                                    the last chunk of container log
                                                    output if the termination message
                                                    file is empty and the container
                                                    exited with an error. The log
                                                    output is limited to 2048 bytes
                                                    or 80 lines, whichever is smaller.
                                                    Defaults to File. Cannot be updated.
                                                  type: string
                                                tty:
                                                  description: Whether this container
                                                    should allocate a TTY for itself,
                                                    also requires 'stdin' to be true.
                                                    Default is false.
                                                  type: boolean
                                                volumeDevices:
                                                  description: volumeDevices is the
                                                    list of block devices to be used
                                                    by the container.
                                                  items:
                                                    description: volumeDevice describes
                                                      a mapping of a raw block device
                                                      within a container.
                                                    properties:
                                                      devicePath:
                                                        description: devicePath is
                                                          the path inside of the container
                                                          that the device will be
                                                          mapped to.
                                                        type: string
                                                      name:
                                                        description: name must match
                                                          the name of a persistentVolumeClaim
                                                          in the pod
                                                        type: string
                                                    required:
                                                    - devicePath
                                                    - name
                                                    type: object
                                                  type: array
                                                volumeMounts:
                                                  description: Pod volumes to mount
                                                    into the container's filesystem.
                                                    Cannot be updated.
                                                  items:
                                                    description: VolumeMount describes
                                                      a mounting of a Volume within
                                                      a container.
                                                    properties:
                                                      mountPath:
                                                        description: Path within the
                                                          container at which the volume
                                                          should be mounted.  Must
                                                          not contain ':'.
                                                        type: string
                                                      mountPropagation:
                                                        description: mountPropagation
                                                          determines how mounts are
                                                          propagated from the host
                                                          to container and the other
                                                          way around. When not set,
                                                          MountPropagationNone is
                                                          used. This field is beta
                                                          in 1.10.
                                                        type: string
                                                      name:
                                                        description: This must match
                                                          the Name of a Volume.
                                                        type: string
                                                      readOnly:
                                                        description: Mounted read-only
                                                          if true, read-write otherwise
                                                          (false or unspecified).
                                                          Defaults to false.
                                                        type: boolean
                                                      subPath:
                                                        description: Path within the
                                                          volume from which the container's
                                                          volume should be mounted.
                                                          Defaults to "" (volume's
                                                          root).
                                                        type: string
                                                      subPathExpr:
                                                        description: Expanded path
                                                          within the volume from which
                                                          the container's volume should
                                                          be mounted. Behaves similarly
                                                          to SubPath but environment
                                                          variable references $(VAR_NAME)
                                                          are expanded using the container's
                                                          environment. Defaults to
                                                          "" (volume's root). SubPathExpr
                                                          and SubPath are mutually
                                                          exclusive.
                                                        type: string
                                                    required:
                                                    - mountPath
                                                    - name
                                                    type: object
                                                  type: array
                                                workingDir:
                                                  description: Container's working
                                                    directory. If not specified, the
                                                    container runtime's default will
                                                    be used, which might be configured
                                                    in the container image. Cannot
                                                    be updated.
                                                  type: string
                                              required:
                                              - name
                                              type: object
                                            type: array
                                          hostAliases:
                                            description: HostAliases is an optional
                                              list of hosts and IPs that will be injected
                                              into the pod's hosts file if specified.
                                              This is only valid for non-hostNetwork
                                              pods.
                                            items:
                                              description: HostAlias holds the mapping
                                                between IP and hostnames that will
                                                be injected as an entry in the pod's
                                                hosts file.
                                              properties:
                                                hostnames:
                                                  description: Hostnames for the above
                                                    IP address.
                                                  items:
                                                    type: string
                                                  type: array
                                                ip:
                                                  description: IP address of the host
                                                    file entry.
                                                  type: string
                                              type: object
                                            type: array
                                          hostIPC:
                                            description: 'Use the host''s ipc namespace.
                                              Optional: Default to false.'
                                            type: boolean
                                          hostNetwork:
                                            description: Host networking requested
                                              for this pod. Use the host's network
                                              namespace. If this option is set, the
                                              ports that will be used must be specified.
                                              Default to false.
                                            type: boolean
                                          hostPID:
                                            description: 'Use the host''s pid namespace.
                                              Optional: Default to false.'
                                            type: boolean
                                          hostname:
                                            description: Specifies the hostname of
                                              the Pod If not specified, the pod's
                                              hostname will be set to a system-defined
                                              value.
                                            type: string
                                          imagePullSecrets:
                                            description: 'ImagePullSecrets is an optional
                                              list of references to secrets in the
                                              same namespace to use for pulling any
                                              of the images used by this PodSpec.
                                              If specified, these secrets will be
                                              passed to individual puller implementations
                                              for them to use. For example, in the
                                              case of docker, only DockerConfig type
                                              secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                                            items:
                                              description: LocalObjectReference contains
                                                enough information to let you locate
                                                the referenced object inside the same
                                                namespace.
                                              properties:
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                              type: object
                                            type: array
                                          initContainers:
                                            description: 'List of initialization containers
                                              belonging to the pod. Init containers
                                              are executed in order prior to containers
                                              being started. If any init container
                                              fails, the pod is considered to have
                                              failed and is handled according to its
                                              restartPolicy. The name for an init
                                              container or normal container must be
                                              unique among all containers. Init containers
                                              may not have Lifecycle actions, Readiness
                                              probes, Liveness probes, or Startup
                                              probes. The resourceRequirements of
                                              an init container are taken into account
                                              during scheduling by finding the highest
                                              request/limit for each resource type,
                                              and then using the max of of that value
                                              or the sum of the normal containers.
                                              Limits are applied to init containers
                                              in a similar fashion. Init containers
                                              cannot currently be added or removed.
                                              Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/'
                                            items:
                                              description: A single application container
                                                that you want to run within a pod.
                                              properties:
                                                args:
                                                  description: 'Arguments to the entrypoint.
                                                    The docker image''s CMD is used
                                                    if this is not provided. Variable
                                                    references $(VAR_NAME) are expanded
                                                    using the container''s environment.
                                                    If a variable cannot be resolved,
                                                    the reference in the input string
                                                    will be unchanged. The $(VAR_NAME)
                                                    syntax can be escaped with a double
                                                    $$, ie: $$(VAR_NAME). Escaped
                                                    references will never be expanded,
                                                    regardless of whether the variable
                                                    exists or not. Cannot be updated.
                                                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                                  items:
                                                    type: string
                                                  type: array
                                                command:
                                                  description: 'Entrypoint array.
                                                    Not executed within a shell. The
                                                    docker image''s ENTRYPOINT is
                                                    used if this is not provided.
                                                    Variable references $(VAR_NAME)
                                                    are expanded using the container''s
                                                    environment. If a variable cannot
                                                    be resolved, the reference in
                                                    the input string will be unchanged.
                                                    The $(VAR_NAME) syntax can be
                                                    escaped with a double $$, ie:
                                                    $$(VAR_NAME). Escaped references
                                                    will never be expanded, regardless
                                                    of whether the variable exists
                                                    or not. Cannot be updated. More
                                                    info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                                  items:
                                                    type: string
                                                  type: array
                                                env:
                                                  description: List of environment
                                                    variables to set in the container.
                                                    Cannot be updated.
                                                  items:
                                                    description: EnvVar represents
                                                      an environment variable present
                                                      in a Container.
                                                    properties:
                                                      name:
                                                        description: Name of the environment
                                                          variable. Must be a C_IDENTIFIER.
                                                        type: string
                                                      value:
                                                        description: 'Variable references
                                                          $(VAR_NAME) are expanded
                                                          using the previous defined
                                                          environment variables in
                                                          the container and any service
                                                          environment variables. If
                                                          a variable cannot be resolved,
                                                          the reference in the input
                                                          string will be unchanged.
                                                          The $(VAR_NAME) syntax can
                                                          be escaped with a double
                                                          $$, ie: $$(VAR_NAME). Escaped
                                                          references will never be
                                                          expanded, regardless of
                                                          whether the variable exists
                                                          or not. Defaults to "".'
                                                        type: string
                                                      valueFrom:
                                                        description: Source for the
                                                          environment variable's value.
                                                          Cannot be used if value
                                                          is not empty.
                                                        properties:
                                                          configMapKeyRef:
                                                            description: Selects a
                                                              key of a ConfigMap.
                                                            properties:
                                                              key:
                                                                description: The key
                                                                  to select.
                                                                type: string
                                                              name:
                                                                description: 'Name
                                                                  of the referent.
                                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                                  TODO: Add other
                                                                  useful fields. apiVersion,
                                                                  kind, uid?'
                                                                type: string
                                                              optional:
                                                                description: Specify
                                                                  whether the ConfigMap
                                                                  or its key must
                                                                  be defined
                                                                type: boolean
                                                            required:
                                                            - key
                                                            type: object
                                                          fieldRef:
                                                            description: 'Selects
                                                              a field of the pod:
                                                              supports metadata.name,
                                                              metadata.namespace,
                                                              metadata.labels, metadata.annotations,
                                                              spec.nodeName, spec.serviceAccountName,
                                                              status.hostIP, status.podIP,
                                                              status.podIPs.'
                                                            properties:
                                                              apiVersion:
                                                                description: Version
                                                                  of the schema the
                                                                  FieldPath is written
                                                                  in terms of, defaults
                                                                  to "v1".
                                                                type: string
                                                              fieldPath:
                                                                description: Path
                                                                  of the field to
                                                                  select in the specified
                                                                  API version.
                                                                type: string
                                                            required:
                                                            - fieldPath
                                                            type: object
                                                          resourceFieldRef:
                                                            description: 'Selects
                                                              a resource of the container:
                                                              only resources limits
                                                              and requests (limits.cpu,
                                                              limits.memory, limits.ephemeral-storage,
                                                              requests.cpu, requests.memory
                                                              and requests.ephemeral-storage)
                                                              are currently supported.'
                                                            properties:
                                                              containerName:
                                                                description: 'Container
                                                                  name: required for
                                                                  volumes, optional
                                                                  for env vars'
                                                                type: string
                                                              divisor:
                                                                anyOf:
                                                                - type: integer
                                                                - type: string
                                                                description: Specifies
                                                                  the output format
                                                                  of the exposed resources,
                                                                  defaults to "1"
                                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                                x-kubernetes-int-or-string: true
                                                              resource:
                                                                description: 'Required:
                                                                  resource to select'
                                                                type: string
                                                            required:
                                                            - resource
                                                            type: object
                                                          secretKeyRef:
                                                            description: Selects a
                                                              key of a secret in the
                                                              pod's namespace
                                                            properties:
                                                              key:
                                                                description: The key
                                                                  of the secret to
                                                                  select from.  Must
                                                                  be a valid secret
                                                                  key.
                                                                type: string
                                                              name:
                                                                description: 'Name
                                                                  of the referent.
                                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                                  TODO: Add other
                                                                  useful fields. apiVersion,
                                                                  kind, uid?'
                                                                type: string
                                                              optional:
                                                                description: Specify
                                                                  whether the Secret
                                                                  or its key must
                                                                  be defined
                                                                type: boolean
                                                            required:
                                                            - key
                                                            type: object
                                                        type: object
                                                    required:
                                                    - name
                                                    type: object
                                                  type: array
                                                envFrom:
                                                  description: List of sources to
                                                    populate environment variables
                                                    in the container. The keys defined
                                                    within a source must be a C_IDENTIFIER.
                                                    All invalid keys will be reported
                                                    as an event when the container
                                                    is starting. When a key exists
                                                    in multiple sources, the value
                                                    associated with the last source
                                                    will take precedence. Values defined
                                                    by an Env with a duplicate key
                                                    will take precedence. Cannot be
                                                    updated.
                                                  items:
                                                    description: EnvFromSource represents
                                                      the source of a set of ConfigMaps
                                                    properties:
                                                      configMapRef:
                                                        description: The ConfigMap
                                                          to select from
                                                        properties:
                                                          name:
                                                            description: 'Name of
                                                              the referent. More info:
                                                              https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                              TODO: Add other useful
                                                              fields. apiVersion,
                                                              kind, uid?'
                                                            type: string
                                                          optional:
                                                            description: Specify whether
                                                              the ConfigMap must be
                                                              defined
                                                            type: boolean
                                                        type: object
                                                      prefix:
                                                        description: An optional identifier
                                                          to prepend to each key in
                                                          the ConfigMap. Must be a
                                                          C_IDENTIFIER.
                                                        type: string
                                                      secretRef:
                                                        description: The Secret to
                                                          select from
                                                        properties:
                                                          name:
                                                            description: 'Name of
                                                              the referent. More info:
                                                              https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                              TODO: Add other useful
                                                              fields. apiVersion,
                                                              kind, uid?'
                                                            type: string
                                                          optional:
                                                            description: Specify whether
                                                              the Secret must be defined
                                                            type: boolean
                                                        type: object
                                                    type: object
                                                  type: array
                                                image:
                                                  description: 'Docker image name.
                                                    More info: https://kubernetes.io/docs/concepts/containers/images
                                                    This field is optional to allow
                                                    higher level config management
                                                    to default or override container
                                                    images in workload controllers
                                                    like Deployments and StatefulSets.'
                                                  type: string
                                                imagePullPolicy:
                                                  description: 'Image pull policy.
                                                    One of Always, Never, IfNotPresent.
                                                    Defaults to Always if :latest
                                                    tag is specified, or IfNotPresent
                                                    otherwise. Cannot be updated.
                                                    More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                                  type: string
                                                lifecycle:
                                                  description: Actions that the management
                                                    system should take in response
                                                    to container lifecycle events.
                                                    Cannot be updated.
                                                  properties:
                                                    postStart:
                                                      description: 'PostStart is called
                                                        immediately after a container
                                                        is created. If the handler
                                                        fails, the container is terminated
                                                        and restarted according to
                                                        its restart policy. Other
                                                        management of the container
                                                        blocks until the hook completes.
                                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                                      properties:
                                                        exec:
                                                          description: One and only
                                                            one of the following should
                                                            be specified. Exec specifies
                                                            the action to take.
                                                          properties:
                                                            command:
                                                              description: Command
                                                                is the command line
                                                                to execute inside
                                                                the container, the
                                                                working directory
                                                                for the command  is
                                                                root ('/') in the
                                                                container's filesystem.
                                                                The command is simply
                                                                exec'd, it is not
                                                                run inside a shell,
                                                                so traditional shell
                                                                instructions ('|',
                                                                etc) won't work. To
                                                                use a shell, you need
                                                                to explicitly call
                                                                out to that shell.
                                                                Exit status of 0 is
                                                                treated as live/healthy
                                                                and non-zero is unhealthy.
                                                              items:
                                                                type: string
                                                              type: array
                                                          type: object
                                                        httpGet:
                                                          description: HTTPGet specifies
                                                            the http request to perform.
                                                          properties:
                                                            host:
                                                              description: Host name
                                                                to connect to, defaults
                                                                to the pod IP. You
                                                                probably want to set
                                                                "Host" in httpHeaders
                                                                instead.
                                                              type: string
                                                            httpHeaders:
                                                              description: Custom
                                                                headers to set in
                                                                the request. HTTP
                                                                allows repeated headers.
                                                              items:
                                                                description: HTTPHeader
                                                                  describes a custom
                                                                  header to be used
                                                                  in HTTP probes
                                                                properties:
                                                                  name:
                                                                    description: The
                                                                      header field
                                                                      name
                                                                    type: string
                                                                  value:
                                                                    description: The
                                                                      header field
                                                                      value
                                                                    type: string
                                                                required:
                                                                - name
                                                                - value
                                                                type: object
                                                              type: array
                                                            path:
                                                              description: Path to
                                                                access on the HTTP
                                                                server.
                                                              type: string
                                                            port:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Name or
                                                                number of the port
                                                                to access on the container.
                                                                Number must be in
                                                                the range 1 to 65535.
                                                                Name must be an IANA_SVC_NAME.
                                                              x-kubernetes-int-or-string: true
                                                            scheme:
                                                              description: Scheme
                                                                to use for connecting
                                                                to the host. Defaults
                                                                to HTTP.
                                                              type: string
                                                          required:
                                                          - port
                                                          type: object
                                                        tcpSocket:
                                                          description: 'TCPSocket
                                                            specifies an action involving
                                                            a TCP port. TCP hooks
                                                            not yet supported TODO:
                                                            implement a realistic
                                                            TCP lifecycle hook'
                                                          properties:
                                                            host:
                                                              description: 'Optional:
                                                                Host name to connect
                                                                to, defaults to the
                                                                pod IP.'
                                                              type: string
                                                            port:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Number
                                                                or name of the port
                                                                to access on the container.
                                                                Number must be in
                                                                the range 1 to 65535.
                                                                Name must be an IANA_SVC_NAME.
                                                              x-kubernetes-int-or-string: true
                                                          required:
                                                          - port
                                                          type: object
                                                      type: object
                                                    preStop:
                                                      description: 'PreStop is called
                                                        immediately before a container
                                                        is terminated due to an API
                                                        request or management event
                                                        such as liveness/startup probe
                                                        failure, preemption, resource
                                                        contention, etc. The handler
                                                        is not called if the container
                                                        crashes or exits. The reason
                                                        for termination is passed
                                                        to the handler. The Pod''s
                                                        termination grace period countdown
                                                        begins before the PreStop
                                                        hooked is executed. Regardless
                                                        of the outcome of the handler,
                                                        the container will eventually
                                                        terminate within the Pod''s
                                                        termination grace period.
                                                        Other management of the container
                                                        blocks until the hook completes
                                                        or until the termination grace
                                                        period is reached. More info:
                                                        https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                                      properties:
                                                        exec:
                                                          description: One and only
                                                            one of the following should
                                                            be specified. Exec specifies
                                                            the action to take.
                                                          properties:
                                                            command:
                                                              description: Command
                                                                is the command line
                                                                to execute inside
                                                                the container, the
                                                                working directory
                                                                for the command  is
                                                                root ('/') in the
                                                                container's filesystem.
                                                                The command is simply
                                                                exec'd, it is not
                                                                run inside a shell,
                                                                so traditional shell
                                                                instructions ('|',
                                                                etc) won't work. To
                                                                use a shell, you need
                                                                to explicitly call
                                                                out to that shell.
                                                                Exit status of 0 is
                                                                treated as live/healthy
                                                                and non-zero is unhealthy.
                                                              items:
                                                                type: string
                                                              type: array
                                                          type: object
                                                        httpGet:
                                                          description: HTTPGet specifies
                                                            the http request to perform.
                                                          properties:
                                                            host:
                                                              description: Host name
                                                                to connect to, defaults
                                                                to the pod IP. You
                                                                probably want to set
                                                                "Host" in httpHeaders
                                                                instead.
                                                              type: string
                                                            httpHeaders:
                                                              description: Custom
                                                                headers to set in
                                                                the request. HTTP
                                                                allows repeated headers.
                                                              items:
                                                                description: HTTPHeader
                                                                  describes a custom
                                                                  header to be used
                                                                  in HTTP probes
                                                                properties:
                                                                  name:
                                                                    description: The
                                                                      header field
                                                                      name
                                                                    type: string
                                                                  value:
                                                                    description: The
                                                                      header field
                                                                      value
                                                                    type: string
                                                                required:
                                                                - name
                                                                - value
                                                                type: object
                                                              type: array
                                                            path:
                                                              description: Path to
                                                                access on the HTTP
                                                                server.
                                                              type: string
                                                            port:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Name or
                                                                number of the port
                                                                to access on the container.
                                                                Number must be in
                                                                the range 1 to 65535.
                                                                Name must be an IANA_SVC_NAME.
                                                              x-kubernetes-int-or-string: true
                                                            scheme:
                                                              description: Scheme
                                                                to use for connecting
                                                                to the host. Defaults
                                                                to HTTP.
                                                              type: string
                                                          required:
                                                          - port
                                                          type: object
                                                        tcpSocket:
                                                          description: 'TCPSocket
                                                            specifies an action involving
                                                            a TCP port. TCP hooks
                                                            not yet supported TODO:
                                                            implement a realistic
                                                            TCP lifecycle hook'
                                                          properties:
                                                            host:
                                                              description: 'Optional:
                                                                Host name to connect
                                                                to, defaults to the
                                                                pod IP.'
                                                              type: string
                                                            port:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Number
                                                                or name of the port
                                                                to access on the container.
                                                                Number must be in
                                                                the range 1 to 65535.
                                                                Name must be an IANA_SVC_NAME.
                                                              x-kubernetes-int-or-string: true
                                                          required:
                                                          - port
                                                          type: object
                                                      type: object
                                                  type: object
                                                livenessProbe:
                                                  description: 'Periodic probe of
                                                    container liveness. Container
                                                    will be restarted if the probe
                                                    fails. Cannot be updated. More
                                                    info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                  properties:
                                                    exec:
                                                      description: One and only one
                                                        of the following should be
                                                        specified. Exec specifies
                                                        the action to take.
                                                      properties:
                                                        command:
                                                          description: Command is
                                                            the command line to execute
                                                            inside the container,
                                                            the working directory
                                                            for the command  is root
                                                            ('/') in the container's
                                                            filesystem. The command
                                                            is simply exec'd, it is
                                                            not run inside a shell,
                                                            so traditional shell instructions
                                                            ('|', etc) won't work.
                                                            To use a shell, you need
                                                            to explicitly call out
                                                            to that shell. Exit status
                                                            of 0 is treated as live/healthy
                                                            and non-zero is unhealthy.
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    failureThreshold:
                                                      description: Minimum consecutive
                                                        failures for the probe to
                                                        be considered failed after
                                                        having succeeded. Defaults
                                                        to 3. Minimum value is 1.
                                                      format: int32
                                                      type: integer
                                                    httpGet:
                                                      description: HTTPGet specifies
                                                        the http request to perform.
                                                      properties:
                                                        host:
                                                          description: Host name to
                                                            connect to, defaults to
                                                            the pod IP. You probably
                                                            want to set "Host" in
                                                            httpHeaders instead.
                                                          type: string
                                                        httpHeaders:
                                                          description: Custom headers
                                                            to set in the request.
                                                            HTTP allows repeated headers.
                                                          items:
                                                            description: HTTPHeader
                                                              describes a custom header
                                                              to be used in HTTP probes
                                                            properties:
                                                              name:
                                                                description: The header
                                                                  field name
                                                                type: string
                                                              value:
                                                                description: The header
                                                                  field value
                                                                type: string
                                                            required:
                                                            - name
                                                            - value
                                                            type: object
                                                          type: array
                                                        path:
                                                          description: Path to access
                                                            on the HTTP server.
                                                          type: string
                                                        port:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Name or number
                                                            of the port to access
                                                            on the container. Number
                                                            must be in the range 1
                                                            to 65535. Name must be
                                                            an IANA_SVC_NAME.
                                                          x-kubernetes-int-or-string: true
                                                        scheme:
                                                          description: Scheme to use
                                                            for connecting to the
                                                            host. Defaults to HTTP.
                                                          type: string
                                                      required:
                                                      - port
                                                      type: object
                                                    initialDelaySeconds:
                                                      description: 'Number of seconds
                                                        after the container has started
                                                        before liveness probes are
                                                        initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                      format: int32
                                                      type: integer
                                                    periodSeconds:
                                                      description: How often (in seconds)
                                                        to perform the probe. Default
                                                        to 10 seconds. Minimum value
                                                        is 1.
                                                      format: int32
                                                      type: integer
                                                    successThreshold:
                                                      description: Minimum consecutive
                                                        successes for the probe to
                                                        be considered successful after
                                                        having failed. Defaults to
                                                        1. Must be 1 for liveness
                                                        and startup. Minimum value
                                                        is 1.
                                                      format: int32
                                                      type: integer
                                                    tcpSocket:
                                                      description: 'TCPSocket specifies
                                                        an action involving a TCP
                                                        port. TCP hooks not yet supported
                                                        TODO: implement a realistic
                                                        TCP lifecycle hook'
                                                      properties:
                                                        host:
                                                          description: 'Optional:
                                                            Host name to connect to,
                                                            defaults to the pod IP.'
                                                          type: string
                                                        port:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Number or name
                                                            of the port to access
                                                            on the container. Number
                                                            must be in the range 1
                                                            to 65535. Name must be
                                                            an IANA_SVC_NAME.
                                                          x-kubernetes-int-or-string: true
                                                      required:
                                                      - port
                                                      type: object
                                                    timeoutSeconds:
                                                      description: 'Number of seconds
                                                        after which the probe times
                                                        out. Defaults to 1 second.
                                                        Minimum value is 1. More info:
                                                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                      format: int32
                                                      type: integer
                                                  type: object
                                                name:
                                                  description: Name of the container
                                                    specified as a DNS_LABEL. Each
                                                    container in a pod must have a
                                                    unique name (DNS_LABEL). Cannot
                                                    be updated.
                                                  type: string
                                                ports:
                                                  description: List of ports to expose
                                                    from the container. Exposing a
                                                    port here gives the system additional
                                                    information about the network
                                                    connections a container uses,
                                                    but is primarily informational.
                                                    Not specifying a port here DOES
                                                    NOT prevent that port from being
                                                    exposed. Any port which is listening
                                                    on the default "0.0.0.0" address
                                                    inside a container will be accessible
                                                    from the network. Cannot be updated.
                                                  items:
                                                    description: ContainerPort represents
                                                      a network port in a single container.
                                                    properties:
                                                      containerPort:
                                                        description: Number of port
                                                          to expose on the pod's IP
                                                          address. This must be a
                                                          valid port number, 0 < x
                                                          < 65536.
                                                        format: int32
                                                        type: integer
                                                      hostIP:
                                                        description: What host IP
                                                          to bind the external port
                                                          to.
                                                        type: string
                                                      hostPort:
                                                        description: Number of port
                                                          to expose on the host. If
                                                          specified, this must be
                                                          a valid port number, 0 <
                                                          x < 65536. If HostNetwork
                                                          is specified, this must
                                                          match ContainerPort. Most
                                                          containers do not need this.
                                                        format: int32
                                                        type: integer
                                                      name:
                                                        description: If specified,
                                                          this must be an IANA_SVC_NAME
                                                          and unique within the pod.
                                                          Each named port in a pod
                                                          must have a unique name.
                                                          Name for the port that can
                                                          be referred to by services.
                                                        type: string
                                                      protocol:
                                                        default: TCP
                                                        description: Protocol for
                                                          port. Must be UDP, TCP,
                                                          or SCTP. Defaults to "TCP".
                                                        type: string
                                                    required:
                                                    - containerPort
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-map-keys:
                                                  - containerPort
                                                  - protocol
                                                  x-kubernetes-list-type: map
                                                readinessProbe:
                                                  description: 'Periodic probe of
                                                    container service readiness. Container
                                                    will be removed from service endpoints
                                                    if the probe fails. Cannot be
                                                    updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                  properties:
                                                    exec:
                                                      description: One and only one
                                                        of the following should be
                                                        specified. Exec specifies
                                                        the action to take.
                                                      properties:
                                                        command:
                                                          description: Command is
                                                            the command line to execute
                                                            inside the container,
                                                            the working directory
                                                            for the command  is root
                                                            ('/') in the container's
                                                            filesystem. The command
                                                            is simply exec'd, it is
                                                            not run inside a shell,
                                                            so traditional shell instructions
                                                            ('|', etc) won't work.
                                                            To use a shell, you need
                                                            to explicitly call out
                                                            to that shell. Exit status
                                                            of 0 is treated as live/healthy
                                                            and non-zero is unhealthy.
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    failureThreshold:
                                                      description: Minimum consecutive
                                                        failures for the probe to
                                                        be considered failed after
                                                        having succeeded. Defaults
                                                        to 3. Minimum value is 1.
                                                      format: int32
                                                      type: integer
                                                    httpGet:
                                                      description: HTTPGet specifies
                                                        the http request to perform.
                                                      properties:
                                                        host:
                                                          description: Host name to
                                                            connect to, defaults to
                                                            the pod IP. You probably
                                                            want to set "Host" in
                                                            httpHeaders instead.
                                                          type: string
                                                        httpHeaders:
                                                          description: Custom headers
                                                            to set in the request.
                                                            HTTP allows repeated headers.
                                                          items:
                                                            description: HTTPHeader
                                                              describes a custom header
                                                              to be used in HTTP probes
                                                            properties:
                                                              name:
                                                                description: The header
                                                                  field name
                                                                type: string
                                                              value:
                                                                description: The header
                                                                  field value
                                                                type: string
                                                            required:
                                                            - name
                                                            - value
                                                            type: object
                                                          type: array
                                                        path:
                                                          description: Path to access
                                                            on the HTTP server.
                                                          type: string
                                                        port:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Name or number
                                                            of the port to access
                                                            on the container. Number
                                                            must be in the range 1
                                                            to 65535. Name must be
                                                            an IANA_SVC_NAME.
                                                          x-kubernetes-int-or-string: true
                                                        scheme:
                                                          description: Scheme to use
                                                            for connecting to the
                                                            host. Defaults to HTTP.
                                                          type: string
                                                      required:
                                                      - port
                                                      type: object
                                                    initialDelaySeconds:
                                                      description: 'Number of seconds
                                                        after the container has started
                                                        before liveness probes are
                                                        initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                      format: int32
                                                      type: integer
                                                    periodSeconds:
                                                      description: How often (in seconds)
                                                        to perform the probe. Default
                                                        to 10 seconds. Minimum value
                                                        is 1.
                                                      format: int32
                                                      type: integer
                                                    successThreshold:
                                                      description: Minimum consecutive
                                                        successes for the probe to
                                                        be considered successful after
                                                        having failed. Defaults to
                                                        1. Must be 1 for liveness
                                                        and startup. Minimum value
                                                        is 1.
                                                      format: int32
                                                      type: integer
                                                    tcpSocket:
                                                      description: 'TCPSocket specifies
                                                        an action involving a TCP
                                                        port. TCP hooks not yet supported
                                                        TODO: implement a realistic
                                                        TCP lifecycle hook'
                                                      properties:
                                                        host:
                                                          description: 'Optional:
                                                            Host name to connect to,
                                                            defaults to the pod IP.'
                                                          type: string
                                                        port:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Number or name
                                                            of the port to access
                                                            on the container. Number
                                                            must be in the range 1
                                                            to 65535. Name must be
                                                            an IANA_SVC_NAME.
                                                          x-kubernetes-int-or-string: true
                                                      required:
                                                      - port
                                                      type: object
                                                    timeoutSeconds:
                                                      description: 'Number of seconds
                                                        after which the probe times
                                                        out. Defaults to 1 second.
                                                        Minimum value is 1. More info:
                                                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                      format: int32
                                                      type: integer
                                                  type: object
                                                resources:
                                                  description: 'Compute Resources
                                                    required by this container. Cannot
                                                    be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                                  properties:
                                                    limits:
                                                      additionalProperties:
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                      description: 'Limits describes
                                                        the maximum amount of compute
                                                        resources allowed. More info:
                                                        https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                                      type: object
                                                    requests:
                                                      additionalProperties:
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                      description: 'Requests describes
                                                        the minimum amount of compute
                                                        resources required. If Requests
                                                        is omitted for a container,
                                                        it defaults to Limits if that
                                                        is explicitly specified, otherwise
                                                        to an implementation-defined
                                                        value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                                      type: object
                                                  type: object
                                                securityContext:
                                                  description: 'Security options the
                                                    pod should run with. More info:
                                                    https://kubernetes.io/docs/concepts/policy/security-context/
                                                    More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                                                  properties:
                                                    allowPrivilegeEscalation:
                                                      description: 'AllowPrivilegeEscalation
                                                        controls whether a process
                                                        can gain more privileges than
                                                        its parent process. This bool
                                                        directly controls if the no_new_privs
                                                        flag will be set on the container
                                                        process. AllowPrivilegeEscalation
                                                        is true always when the container
                                                        is: 1) run as Privileged 2)
                                                        has CAP_SYS_ADMIN'
                                                      type: boolean
                                                    capabilities:
                                                      description: The capabilities
                                                        to add/drop when running containers.
                                                        Defaults to the default set
                                                        of capabilities granted by
                                                        the container runtime.
                                                      properties:
                                                        add:
                                                          description: Added capabilities
                                                          items:
                                                            description: Capability
                                                              represent POSIX capabilities
                                                              type
                                                            type: string
                                                          type: array
                                                        drop:
                                                          description: Removed capabilities
                                                          items:
                                                            description: Capability
                                                              represent POSIX capabilities
                                                              type
                                                            type: string
                                                          type: array
                                                      type: object
                                                    privileged:
                                                      description: Run container in
                                                        privileged mode. Processes
                                                        in privileged containers are
                                                        essentially equivalent to
                                                        root on the host. Defaults
                                                        to false.
                                                      type: boolean
                                                    procMount:
                                                      description: procMount denotes
                                                        the type of proc mount to
                                                        use for the containers. The
                                                        default is DefaultProcMount
                                                        which uses the container runtime
                                                        defaults for readonly paths
                                                        and masked paths. This requires
                                                        the ProcMountType feature
                                                        flag to be enabled.
                                                      type: string
                                                    readOnlyRootFilesystem:
                                                      description: Whether this container
                                                        has a read-only root filesystem.
                                                        Default is false.
                                                      type: boolean
                                                    runAsGroup:
                                                      description: The GID to run
                                                        the entrypoint of the container
                                                        process. Uses runtime default
                                                        if unset. May also be set
                                                        in PodSecurityContext.  If
                                                        set in both SecurityContext
                                                        and PodSecurityContext, the
                                                        value specified in SecurityContext
                                                        takes precedence.
                                                      format: int64
                                                      type: integer
                                                    runAsNonRoot:
                                                      description: Indicates that
                                                        the container must run as
                                                        a non-root user. If true,
                                                        the Kubelet will validate
                                                        the image at runtime to ensure
                                                        that it does not run as UID
                                                        0 (root) and fail to start
                                                        the container if it does.
                                                        If unset or false, no such
                                                        validation will be performed.
                                                        May also be set in PodSecurityContext.  If
                                                        set in both SecurityContext
                                                        and PodSecurityContext, the
                                                        value specified in SecurityContext
                                                        takes precedence.
                                                      type: boolean
                                                    runAsUser:
                                                      description: The UID to run
                                                        the entrypoint of the container
                                                        process. Defaults to user
                                                        specified in image metadata
                                                        if unspecified. May also be
                                                        set in PodSecurityContext.  If
                                                        set in both SecurityContext
                                                        and PodSecurityContext, the
                                                        value specified in SecurityContext
                                                        takes precedence.
                                                      format: int64
                                                      type: integer
                                                    seLinuxOptions:
                                                      description: The SELinux context
                                                        to be applied to the container.
                                                        If unspecified, the container
                                                        runtime will allocate a random
                                                        SELinux context for each container.  May
                                                        also be set in PodSecurityContext.  If
                                                        set in both SecurityContext
                                                        and PodSecurityContext, the
                                                        value specified in SecurityContext
                                                        takes precedence.
                                                      properties:
                                                        level:
                                                          description: Level is SELinux
                                                            level label that applies
                                                            to the container.
                                                          type: string
                                                        role:
                                                          description: Role is a SELinux
                                                            role label that applies
                                                            to the container.
                                                          type: string
                                                        type:
                                                          description: Type is a SELinux
                                                            type label that applies
                                                            to the container.
                                                          type: string
                                                        user:
                                                          description: User is a SELinux
                                                            user label that applies
                                                            to the container.
                                                          type: string
                                                      type: object
                                                    windowsOptions:
                                                      description: The Windows specific
                                                        settings applied to all containers.
                                                        If unspecified, the options
                                                        from the PodSecurityContext
                                                        will be used. If set in both
                                                        SecurityContext and PodSecurityContext,
                                                        the value specified in SecurityContext
                                                        takes precedence.
                                                      properties:
                                                        gmsaCredentialSpec:
                                                          description: GMSACredentialSpec
                                                            is where the GMSA admission
                                                            webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                                            inlines the contents of
                                                            the GMSA credential spec
                                                            named by the GMSACredentialSpecName
                                                            field.
                                                          type: string
                                                        gmsaCredentialSpecName:
                                                          description: GMSACredentialSpecName
                                                            is the name of the GMSA
                                                            credential spec to use.
                                                          type: string
                                                        runAsUserName:
                                                          description: The UserName
                                                            in Windows to run the
                                                            entrypoint of the container
                                                            process. Defaults to the
                                                            user specified in image
                                                            metadata if unspecified.
                                                            May also be set in PodSecurityContext.
                                                            If set in both SecurityContext
                                                            and PodSecurityContext,
                                                            the value specified in
                                                            SecurityContext takes
                                                            precedence.
                                                          type: string
                                                      type: object
                                                  type: object
                                                startupProbe:
                                                  description: 'StartupProbe indicates
                                                    that the Pod has successfully
                                                    initialized. If specified, no
                                                    other probes are executed until
                                                    this completes successfully. If
                                                    this probe fails, the Pod will
                                                    be restarted, just as if the livenessProbe
                                                    failed. This can be used to provide
                                                    different probe parameters at
                                                    the beginning of a Pod''s lifecycle,
                                                    when it might take a long time
                                                    to load data or warm a cache,
                                                    than during steady-state operation.
                                                    This cannot be updated. This is
                                                    a beta feature enabled by the
                                                    StartupProbe feature flag. More
                                                    info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                  properties:
                                                    exec:
                                                      description: One and only one
                                                        of the following should be
                                                        specified. Exec specifies
                                                        the action to take.
                                                      properties:
                                                        command:
                                                          description: Command is
                                                            the command line to execute
                                                            inside the container,
                                                            the working directory
                                                            for the command  is root
                                                            ('/') in the container's
                                                            filesystem. The command
                                                            is simply exec'd, it is
                                                            not run inside a shell,
                                                            so traditional shell instructions
                                                            ('|', etc) won't work.
                                                            To use a shell, you need
                                                            to explicitly call out
                                                            to that shell. Exit status
                                                            of 0 is treated as live/healthy
                                                            and non-zero is unhealthy.
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    failureThreshold:
                                                      description: Minimum consecutive
                                                        failures for the probe to
                                                        be considered failed after
                                                        having succeeded. Defaults
                                                        to 3. Minimum value is 1.
                                                      format: int32
                                                      type: integer
                                                    httpGet:
                                                      description: HTTPGet specifies
                                                        the http request to perform.
                                                      properties:
                                                        host:
                                                          description: Host name to
                                                            connect to, defaults to
                                                            the pod IP. You probably
                                                            want to set "Host" in
                                                            httpHeaders instead.
                                                          type: string
                                                        httpHeaders:
                                                          description: Custom headers
                                                            to set in the request.
                                                            HTTP allows repeated headers.
                                                          items:
                                                            description: HTTPHeader
                                                              describes a custom header
                                                              to be used in HTTP probes
                                                            properties:
                                                              name:
                                                                description: The header
                                                                  field name
                                                                type: string
                                                              value:
                                                                description: The header
                                                                  field value
                                                                type: string
                                                            required:
                                                            - name
                                                            - value
                                                            type: object
                                                          type: array
                                                        path:
                                                          description: Path to access
                                                            on the HTTP server.
                                                          type: string
                                                        port:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Name or number
                                                            of the port to access
                                                            on the container. Number
                                                            must be in the range 1
                                                            to 65535. Name must be
                                                            an IANA_SVC_NAME.
                                                          x-kubernetes-int-or-string: true
                                                        scheme:
                                                          description: Scheme to use
                                                            for connecting to the
                                                            host. Defaults to HTTP.
                                                          type: string
                                                      required:
                                                      - port
                                                      type: object
                                                    initialDelaySeconds:
                                                      description: 'Number of seconds
                                                        after the container has started
                                                        before liveness probes are
                                                        initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                      format: int32
                                                      type: integer
                                                    periodSeconds:
                                                      description: How often (in seconds)
                                                        to perform the probe. Default
                                                        to 10 seconds. Minimum value
                                                        is 1.
                                                      format: int32
                                                      type: integer
                                                    successThreshold:
                                                      description: Minimum consecutive
                                                        successes for the probe to
                                                        be considered successful after
                                                        having failed. Defaults to
                                                        1. Must be 1 for liveness
                                                        and startup. Minimum value
                                                        is 1.
                                                      format: int32
                                                      type: integer
                                                    tcpSocket:
                                                      description: 'TCPSocket specifies
                                                        an action involving a TCP
                                                        port. TCP hooks not yet supported
                                                        TODO: implement a realistic
                                                        TCP lifecycle hook'
                                                      properties:
                                                        host:
                                                          description: 'Optional:
                                                            Host name to connect to,
                                                            defaults to the pod IP.'
                                                          type: string
                                                        port:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Number or name
                                                            of the port to access
                                                            on the container. Number
                                                            must be in the range 1
                                                            to 65535. Name must be
                                                            an IANA_SVC_NAME.
                                                          x-kubernetes-int-or-string: true
                                                      required:
                                                      - port
                                                      type: object
                                                    timeoutSeconds:
                                                      description: 'Number of seconds
                                                        after which the probe times
                                                        out. Defaults to 1 second.
                                                        Minimum value is 1. More info:
                                                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                      format: int32
                                                      type: integer
                                                  type: object
                                                stdin:
                                                  description: Whether this container
                                                    should allocate a buffer for stdin
                                                    in the container runtime. If this
                                                    is not set, reads from stdin in
                                                    the container will always result
                                                    in EOF. Default is false.
                                                  type: boolean
                                                stdinOnce:
                                                  description: Whether the container
                                                    runtime should close the stdin
                                                    channel after it has been opened
                                                    by a single attach. When stdin
                                                    is true the stdin stream will
                                                    remain open across multiple attach
                                                    sessions. If stdinOnce is set
                                                    to true, stdin is opened on container
                                                    start, is empty until the first
                                                    client attaches to stdin, and
                                                    then remains open and accepts
                                                    data until the client disconnects,
                                                    at which time stdin is closed
                                                    and remains closed until the container
                                                    is restarted. If this flag is
                                                    false, a container processes that
                                                    reads from stdin will never receive
                                                    an EOF. Default is false
                                                  type: boolean
                                                terminationMessagePath:
                                                  description: 'Optional: Path at
                                                    which the file to which the container''s
                                                    termination message will be written
                                                    is mounted into the container''s
                                                    filesystem. Message written is
                                                    intended to be brief final status,
                                                    such as an assertion failure message.
                                                    Will be truncated by the node
                                                    if greater than 4096 bytes. The
                                                    total message length across all
                                                    containers will be limited to
                                                    12kb. Defaults to /dev/termination-log.
                                                    Cannot be updated.'
                                                  type: string
                                                terminationMessagePolicy:
                                                  description: Indicate how the termination
                                                    message should be populated. File
                                                    will use the contents of terminationMessagePath
                                                    to populate the container status
                                                    message on both success and failure.
                                                    FallbackToLogsOnError will use
                                                    the last chunk of container log
                                                    output if the termination message
                                                    file is empty and the container
                                                    exited with an error. The log
                                                    output is limited to 2048 bytes
                                                    or 80 lines, whichever is smaller.
                                                    Defaults to File. Cannot be updated.
                                                  type: string
                                                tty:
                                                  description: Whether this container
                                                    should allocate a TTY for itself,
                                                    also requires 'stdin' to be true.
                                                    Default is false.
                                                  type: boolean
                                                volumeDevices:
                                                  description: volumeDevices is the
                                                    list of block devices to be used
                                                    by the container.
                                                  items:
                                                    description: volumeDevice describes
                                                      a mapping of a raw block device
                                                      within a container.
                                                    properties:
                                                      devicePath:
                                                        description: devicePath is
                                                          the path inside of the container
                                                          that the device will be
                                                          mapped to.
                                                        type: string
                                                      name:
                                                        description: name must match
                                                          the name of a persistentVolumeClaim
                                                          in the pod
                                                        type: string
                                                    required:
                                                    - devicePath
                                                    - name
                                                    type: object
                                                  type: array
                                                volumeMounts:
                                                  description: Pod volumes to mount
                                                    into the container's filesystem.
                                                    Cannot be updated.
                                                  items:
                                                    description: VolumeMount describes
                                                      a mounting of a Volume within
                                                      a container.
                                                    properties:
                                                      mountPath:
                                                        description: Path within the
                                                          container at which the volume
                                                          should be mounted.  Must
                                                          not contain ':'.
                                                        type: string
                                                      mountPropagation:
                                                        description: mountPropagation
                                                          determines how mounts are
                                                          propagated from the host
                                                          to container and the other
                                                          way around. When not set,
                                                          MountPropagationNone is
                                                          used. This field is beta
                                                          in 1.10.
                                                        type: string
                                                      name:
                                                        description: This must match
                                                          the Name of a Volume.
                                                        type: string
                                                      readOnly:
                                                        description: Mounted read-only
                                                          if true, read-write otherwise
                                                          (false or unspecified).
                                                          Defaults to false.
                                                        type: boolean
                                                      subPath:
                                                        description: Path within the
                                                          volume from which the container's
                                                          volume should be mounted.
                                                          Defaults to "" (volume's
                                                          root).
                                                        type: string
                                                      subPathExpr:
                                                        description: Expanded path
                                                          within the volume from which
                                                          the container's volume should
                                                          be mounted. Behaves similarly
                                                          to SubPath but environment
                                                          variable references $(VAR_NAME)
                                                          are expanded using the container's
                                                          environment. Defaults to
                                                          "" (volume's root). SubPathExpr
                                                          and SubPath are mutually
                                                          exclusive.
                                                        type: string
                                                    required:
                                                    - mountPath
                                                    - name
                                                    type: object
                                                  type: array
                                                workingDir:
                                                  description: Container's working
                                                    directory. If not specified, the
                                                    container runtime's default will
                                                    be used, which might be configured
                                                    in the container image. Cannot
                                                    be updated.
                                                  type: string
                                              required:
                                              - name
                                              type: object
                                            type: array
                                          nodeName:
                                            description: NodeName is a request to
                                              schedule this pod onto a specific node.
                                              If it is non-empty, the scheduler simply
                                              schedules this pod onto that node, assuming
                                              that it fits resource requirements.
                                            type: string
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: 'NodeSelector is a selector
                                              which must be true for the pod to fit
                                              on a node. Selector which must match
                                              a node''s labels for the pod to be scheduled
                                              on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                          overhead:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Overhead represents the
                                              resource overhead associated with running
                                              a pod for a given RuntimeClass. This
                                              field will be autopopulated at admission
                                              time by the RuntimeClass admission controller.
                                              If the RuntimeClass admission controller
                                              is enabled, overhead must not be set
                                              in Pod create requests. The RuntimeClass
                                              admission controller will reject Pod
                                              create requests which have the overhead
                                              already set. If RuntimeClass is configured
                                              and selected in the PodSpec, Overhead
                                              will be set to the value defined in
                                              the corresponding RuntimeClass, otherwise
                                              it will remain unset and treated as
                                              zero. More info: https://git.k8s.io/enhancements/keps/sig-node/20190226-pod-overhead.md
                                              This field is alpha-level as of Kubernetes
                                              v1.16, and is only honored by servers
                                              that enable the PodOverhead feature.'
                                            type: object
                                          preemptionPolicy:
                                            description: PreemptionPolicy is the Policy
                                              for preempting pods with lower priority.
                                              One of Never, PreemptLowerPriority.
                                              Defaults to PreemptLowerPriority if
                                              unset. This field is alpha-level and
                                              is only honored by servers that enable
                                              the NonPreemptingPriority feature.
                                            type: string
                                          priority:
                                            description: The priority value. Various
                                              system components use this field to
                                              find the priority of the pod. When Priority
                                              Admission Controller is enabled, it
                                              prevents users from setting this field.
                                              The admission controller populates this
                                              field from PriorityClassName. The higher
                                              the value, the higher the priority.
                                            format: int32
                                            type: integer
                                          priorityClassName:
                                            description: If specified, indicates the
                                              pod's priority. "system-node-critical"
                                              and "system-cluster-critical" are two
                                              special keywords which indicate the
                                              highest priorities with the former being
                                              the highest priority. Any other name
                                              must be defined by creating a PriorityClass
                                              object with that name. If not specified,
                                              the pod priority will be default or
                                              zero if there is no default.
                                            type: string
                                          readinessGates:
                                            description: 'If specified, all readiness
                                              gates will be evaluated for pod readiness.
                                              A pod is ready when all its containers
                                              are ready AND all conditions specified
                                              in the readiness gates have status equal
                                              to "True" More info: https://git.k8s.io/enhancements/keps/sig-network/0007-pod-ready%2B%2B.md'
                                            items:
                                              description: PodReadinessGate contains
                                                the reference to a pod condition
                                              properties:
                                                conditionType:
                                                  description: ConditionType refers
                                                    to a condition in the pod's condition
                                                    list with matching type.
                                                  type: string
                                              required:
                                              - conditionType
                                              type: object
                                            type: array
                                          restartPolicy:
                                            description: 'Restart policy for all containers
                                              within the pod. One of Always, OnFailure,
                                              Never. Default to Always. More info:
                                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy'
                                            type: string
                                          runtimeClassName:
                                            description: 'RuntimeClassName refers
                                              to a RuntimeClass object in the node.k8s.io
                                              group, which should be used to run this
                                              pod.  If no RuntimeClass resource matches
                                              the named class, the pod will not be
                                              run. If unset or empty, the "legacy"
                                              RuntimeClass will be used, which is
                                              an implicit class with an empty definition
                                              that uses the default runtime handler.
                                              More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md
                                              This is a beta feature as of Kubernetes
                                              v1.14.'
                                            type: string
                                          schedulerName:
                                            description: If specified, the pod will
                                              be dispatched by specified scheduler.
                                              If not specified, the pod will be dispatched
                                              by default scheduler.
                                            type: string
                                          securityContext:
                                            description: 'SecurityContext holds pod-level
                                              security attributes and common container
                                              settings. Optional: Defaults to empty.  See
                                              type description for default values
                                              of each field.'
                                            properties:
                                              fsGroup:
                                                description: "A special supplemental
                                                  group that applies to all containers
                                                  in a pod. Some volume types allow
                                                  the Kubelet to change the ownership
                                                  of that volume to be owned by the
                                                  pod: \n 1. The owning GID will be
                                                  the FSGroup 2. The setgid bit is
                                                  set (new files created in the volume
                                                  will be owned by FSGroup) 3. The
                                                  permission bits are OR'd with rw-rw----
                                                  \n If unset, the Kubelet will not
                                                  modify the ownership and permissions
                                                  of any volume."
                                                format: int64
                                                type: integer
                                              fsGroupChangePolicy:
                                                description: 'fsGroupChangePolicy
                                                  defines behavior of changing ownership
                                                  and permission of the volume before
                                                  being exposed inside Pod. This field
                                                  will only apply to volume types
                                                  which support fsGroup based ownership(and
                                                  permissions). It will have no effect
                                                  on ephemeral volume types such as:
                                                  secret, configmaps and emptydir.
                                                  Valid values are "OnRootMismatch"
                                                  and "Always". If not specified defaults
                                                  to "Always".'
                                                type: string
                                              runAsGroup:
                                                description: The GID to run the entrypoint
                                                  of the container process. Uses runtime
                                                  default if unset. May also be set
                                                  in SecurityContext.  If set in both
                                                  SecurityContext and PodSecurityContext,
                                                  the value specified in SecurityContext
                                                  takes precedence for that container.
                                                format: int64
                                                type: integer
                                              runAsNonRoot:
                                                description: Indicates that the container
                                                  must run as a non-root user. If
                                                  true, the Kubelet will validate
                                                  the image at runtime to ensure that
                                                  it does not run as UID 0 (root)
                                                  and fail to start the container
                                                  if it does. If unset or false, no
                                                  such validation will be performed.
                                                  May also be set in SecurityContext.  If
                                                  set in both SecurityContext and
                                                  PodSecurityContext, the value specified
                                                  in SecurityContext takes precedence.
                                                type: boolean
                                              runAsUser:
                                                description: The UID to run the entrypoint
                                                  of the container process. Defaults
                                                  to user specified in image metadata
                                                  if unspecified. May also be set
                                                  in SecurityContext.  If set in both
                                                  SecurityContext and PodSecurityContext,
                                                  the value specified in SecurityContext
                                                  takes precedence for that container.
                                                format: int64
                                                type: integer
                                              seLinuxOptions:
                                                description: The SELinux context to
                                                  be applied to all containers. If
                                                  unspecified, the container runtime
                                                  will allocate a random SELinux context
                                                  for each container.  May also be
                                                  set in SecurityContext.  If set
                                                  in both SecurityContext and PodSecurityContext,
                                                  the value specified in SecurityContext
                                                  takes precedence for that container.
                                                properties:
                                                  level:
                                                    description: Level is SELinux
                                                      level label that applies to
                                                      the container.
                                                    type: string
                                                  role:
                                                    description: Role is a SELinux
                                                      role label that applies to the
                                                      container.
                                                    type: string
                                                  type:
                                                    description: Type is a SELinux
                                                      type label that applies to the
                                                      container.
                                                    type: string
                                                  user:
                                                    description: User is a SELinux
                                                      user label that applies to the
                                                      container.
                                                    type: string
                                                type: object
                                              supplementalGroups:
                                                description: A list of groups applied
                                                  to the first process run in each
                                                  container, in addition to the container's
                                                  primary GID.  If unspecified, no
                                                  groups will be added to any container.
                                                items:
                                                  format: int64
                                                  type: integer
                                                type: array
                                              sysctls:
                                                description: Sysctls hold a list of
                                                  namespaced sysctls used for the
                                                  pod. Pods with unsupported sysctls
                                                  (by the container runtime) might
                                                  fail to launch.
                                                items:
                                                  description: Sysctl defines a kernel
                                                    parameter to be set
                                                  properties:
                                                    name:
                                                      description: Name of a property
                                                        to set
                                                      type: string
                                                    value:
                                                      description: Value of a property
                                                        to set
                                                      type: string
                                                  required:
                                                  - name
                                                  - value
                                                  type: object
                                                type: array
                                              windowsOptions:
                                                description: The Windows specific
                                                  settings applied to all containers.
                                                  If unspecified, the options within
                                                  a container's SecurityContext will
                                                  be used. If set in both SecurityContext
                                                  and PodSecurityContext, the value
                                                  specified in SecurityContext takes
                                                  precedence.
                                                properties:
                                                  gmsaCredentialSpec:
                                                    description: GMSACredentialSpec
                                                      is where the GMSA admission
                                                      webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                                      inlines the contents of the
                                                      GMSA credential spec named by
                                                      the GMSACredentialSpecName field.
                                                    type: string
                                                  gmsaCredentialSpecName:
                                                    description: GMSACredentialSpecName
                                                      is the name of the GMSA credential
                                                      spec to use.
                                                    type: string
                                                  runAsUserName:
                                                    description: The UserName in Windows
                                                      to run the entrypoint of the
                                                      container process. Defaults
                                                      to the user specified in image
                                                      metadata if unspecified. May
                                                      also be set in PodSecurityContext.
                                                      If set in both SecurityContext
                                                      and PodSecurityContext, the
                                                      value specified in SecurityContext
                                                      takes precedence.
                                                    type: string
                                                type: object
                                            type: object
                                          serviceAccount:
                                            description: 'DeprecatedServiceAccount
                                              is a depreciated alias for ServiceAccountName.
                                              Deprecated: Use serviceAccountName instead.'
                                            type: string
                                          serviceAccountName:
                                            description: 'ServiceAccountName is the
                                              name of the ServiceAccount to use to
                                              run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                                            type: string
                                          shareProcessNamespace:
                                            description: 'Share a single process namespace
                                              between all of the containers in a pod.
                                              When this is set containers will be
                                              able to view and signal processes from
                                              other containers in the same pod, and
                                              the first process in each container
                                              will not be assigned PID 1. HostPID
                                              and ShareProcessNamespace cannot both
                                              be set. Optional: Default to false.'
                                            type: boolean
                                          subdomain:
                                            description: If specified, the fully qualified
                                              Pod hostname will be "<hostname>.<subdomain>.<pod
                                              namespace>.svc.<cluster domain>". If
                                              not specified, the pod will not have
                                              a domainname at all.
                                            type: string
                                          terminationGracePeriodSeconds:
                                            description: Optional duration in seconds
                                              the pod needs to terminate gracefully.
                                              May be decreased in delete request.
                                              Value must be non-negative integer.
                                              The value zero indicates delete immediately.
                                              If this value is nil, the default grace
                                              period will be used instead. The grace
                                              period is the duration in seconds after
                                              the processes running in the pod are
                                              sent a termination signal and the time
                                              when the processes are forcibly halted
                                              with a kill signal. Set this value longer
                                              than the expected cleanup time for your
                                              process. Defaults to 30 seconds.
                                            format: int64
                                            type: integer
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: The pod this Toleration
                                                is attached to tolerates any taint
                                                that matches the triple <key,value,effect>
                                                using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: Effect indicates the
                                                    taint effect to match. Empty means
                                                    match all taint effects. When
                                                    specified, allowed values are
                                                    NoSchedule, PreferNoSchedule and
                                                    NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key
                                                    that the toleration applies to.
                                                    Empty means match all taint keys.
                                                    If the key is empty, operator
                                                    must be Exists; this combination
                                                    means to match all values and
                                                    all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents
                                                    a key's relationship to the value.
                                                    Valid operators are Exists and
                                                    Equal. Defaults to Equal. Exists
                                                    is equivalent to wildcard for
                                                    value, so that a pod can tolerate
                                                    all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents
                                                    the period of time the toleration
                                                    (which must be of effect NoExecute,
                                                    otherwise this field is ignored)
                                                    tolerates the taint. By default,
                                                    it is not set, which means tolerate
                                                    the taint forever (do not evict).
                                                    Zero and negative values will
                                                    be treated as 0 (evict immediately)
                                                    by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: Value is the taint
                                                    value the toleration matches to.
                                                    If the operator is Exists, the
                                                    value should be empty, otherwise
                                                    just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                          topologySpreadConstraints:
                                            description: TopologySpreadConstraints
                                              describes how a group of pods ought
                                              to spread across topology domains. Scheduler
                                              will schedule pods in a way which abides
                                              by the constraints. This field is only
                                              honored by clusters that enable the
                                              EvenPodsSpread feature. All topologySpreadConstraints
                                              are ANDed.
                                            items:
                                              description: TopologySpreadConstraint
                                                specifies how to spread matching pods
                                                among the given topology.
                                              properties:
                                                labelSelector:
                                                  description: LabelSelector is used
                                                    to find matching pods. Pods that
                                                    match this label selector are
                                                    counted to determine the number
                                                    of pods in their corresponding
                                                    topology domain.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                maxSkew:
                                                  description: 'MaxSkew describes
                                                    the degree to which pods may be
                                                    unevenly distributed. It''s the
                                                    maximum permitted difference between
                                                    the number of matching pods in
                                                    any two topology domains of a
                                                    given topology type. For example,
                                                    in a 3-zone cluster, MaxSkew is
                                                    set to 1, and pods with the same
                                                    labelSelector spread as 1/1/0:
                                                    | zone1 | zone2 | zone3 | |   P   |   P   |       |
                                                    - if MaxSkew is 1, incoming pod
                                                    can only be scheduled to zone3
                                                    to become 1/1/1; scheduling it
                                                    onto zone1(zone2) would make the
                                                    ActualSkew(2-0) on zone1(zone2)
                                                    violate MaxSkew(1). - if MaxSkew
                                                    is 2, incoming pod can be scheduled
                                                    onto any zone. It''s a required
                                                    field. Default value is 1 and
                                                    0 is not allowed.'
                                                  format: int32
                                                  type: integer
                                                topologyKey:
                                                  description: TopologyKey is the
                                                    key of node labels. Nodes that
                                                    have a label with this key and
                                                    identical values are considered
                                                    to be in the same topology. We
                                                    consider each <key, value> as
                                                    a "bucket", and try to put balanced
                                                    number of pods into each bucket.
                                                    It's a required field.
                                                  type: string
                                                whenUnsatisfiable:
                                                  description: 'WhenUnsatisfiable
                                                    indicates how to deal with a pod
                                                    if it doesn''t satisfy the spread
                                                    constraint. - DoNotSchedule (default)
                                                    tells the scheduler not to schedule
                                                    it - ScheduleAnyway tells the
                                                    scheduler to still schedule it
                                                    It''s considered as "Unsatisfiable"
                                                    if and only if placing incoming
                                                    pod on any topology violates "MaxSkew".
                                                    For example, in a 3-zone cluster,
                                                    MaxSkew is set to 1, and pods
                                                    with the same labelSelector spread
                                                    as 3/1/1: | zone1 | zone2 | zone3
                                                    | | P P P |   P   |   P   | If
                                                    WhenUnsatisfiable is set to DoNotSchedule,
                                                    incoming pod can only be scheduled
                                                    to zone2(zone3) to become 3/2/1(3/1/2)
                                                    as ActualSkew(2-1) on zone2(zone3)
                                                    satisfies MaxSkew(1). In other
                                                    words, the cluster can still be
                                                    imbalanced, but scheduler won''t
                                                    make it *more* imbalanced. It''s
                                                    a required field.'
                                                  type: string
                                              required:
                                              - maxSkew
                                              - topologyKey
                                              - whenUnsatisfiable
                                              type: object
                                            type: array
                                            x-kubernetes-list-map-keys:
                                            - topologyKey
                                            - whenUnsatisfiable
                                            x-kubernetes-list-type: map
                                          volumes:
                                            description: 'List of volumes that can
                                              be mounted by containers belonging to
                                              the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes'
                                            items:
                                              description: Volume represents a named
                                                volume in a pod that may be accessed
                                                by any container in the pod.
                                              properties:
                                                awsElasticBlockStore:
                                                  description: 'AWSElasticBlockStore
                                                    represents an AWS Disk resource
                                                    that is attached to a kubelet''s
                                                    host machine and then exposed
                                                    to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                                  properties:
                                                    fsType:
                                                      description: 'Filesystem type
                                                        of the volume that you want
                                                        to mount. Tip: Ensure that
                                                        the filesystem type is supported
                                                        by the host operating system.
                                                        Examples: "ext4", "xfs", "ntfs".
                                                        Implicitly inferred to be
                                                        "ext4" if unspecified. More
                                                        info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                                        TODO: how do we prevent errors
                                                        in the filesystem from compromising
                                                        the machine'
                                                      type: string
                                                    partition:
                                                      description: 'The partition
                                                        in the volume that you want
                                                        to mount. If omitted, the
                                                        default is to mount by volume
                                                        name. Examples: For volume
                                                        /dev/sda1, you specify the
                                                        partition as "1". Similarly,
                                                        the volume partition for /dev/sda
                                                        is "0" (or you can leave the
                                                        property empty).'
                                                      format: int32
                                                      type: integer
                                                    readOnly:
                                                      description: 'Specify "true"
                                                        to force and set the ReadOnly
                                                        property in VolumeMounts to
                                                        "true". If omitted, the default
                                                        is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                                      type: boolean
                                                    volumeID:
                                                      description: 'Unique ID of the
                                                        persistent disk resource in
                                                        AWS (Amazon EBS volume). More
                                                        info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                                      type: string
                                                  required:
                                                  - volumeID
                                                  type: object
                                                azureDisk:
                                                  description: AzureDisk represents
                                                    an Azure Data Disk mount on the
                                                    host and bind mount to the pod.
                                                  properties:
                                                    cachingMode:
                                                      description: 'Host Caching mode:
                                                        None, Read Only, Read Write.'
                                                      type: string
                                                    diskName:
                                                      description: The Name of the
                                                        data disk in the blob storage
                                                      type: string
                                                    diskURI:
                                                      description: The URI the data
                                                        disk in the blob storage
                                                      type: string
                                                    fsType:
                                                      description: Filesystem type
                                                        to mount. Must be a filesystem
                                                        type supported by the host
                                                        operating system. Ex. "ext4",
                                                        "xfs", "ntfs". Implicitly
                                                        inferred to be "ext4" if unspecified.
                                                      type: string
                                                    kind:
                                                      description: 'Expected values
                                                        Shared: multiple blob disks
                                                        per storage account  Dedicated:
                                                        single blob disk per storage
                                                        account  Managed: azure managed
                                                        data disk (only in managed
                                                        availability set). defaults
                                                        to shared'
                                                      type: string
                                                    readOnly:
                                                      description: Defaults to false
                                                        (read/write). ReadOnly here
                                                        will force the ReadOnly setting
                                                        in VolumeMounts.
                                                      type: boolean
                                                  required:
                                                  - diskName
                                                  - diskURI
                                                  type: object
                                                azureFile:
                                                  description: AzureFile represents
                                                    an Azure File Service mount on
                                                    the host and bind mount to the
                                                    pod.
                                                  properties:
                                                    readOnly:
                                                      description: Defaults to false
                                                        (read/write). ReadOnly here
                                                        will force the ReadOnly setting
                                                        in VolumeMounts.
                                                      type: boolean
                                                    secretName:
                                                      description: the name of secret
                                                        that contains Azure Storage
                                                        Account Name and Key
                                                      type: string
                                                    shareName:
                                                      description: Share Name
                                                      type: string
                                                  required:
                                                  - secretName
                                                  - shareName
                                                  type: object
                                                cephfs:
                                                  description: CephFS represents a
                                                    Ceph FS mount on the host that
                                                    shares a pod's lifetime
                                                  properties:
                                                    monitors:
                                                      description: 'Required: Monitors
                                                        is a collection of Ceph monitors
                                                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                                      items:
                                                        type: string
                                                      type: array
                                                    path:
                                                      description: 'Optional: Used
                                                        as the mounted root, rather
                                                        than the full Ceph tree, default
                                                        is /'
                                                      type: string
                                                    readOnly:
                                                      description: 'Optional: Defaults
                                                        to false (read/write). ReadOnly
                                                        here will force the ReadOnly
                                                        setting in VolumeMounts. More
                                                        info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                                      type: boolean
                                                    secretFile:
                                                      description: 'Optional: SecretFile
                                                        is the path to key ring for
                                                        User, default is /etc/ceph/user.secret
                                                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                                      type: string
                                                    secretRef:
                                                      description: 'Optional: SecretRef
                                                        is reference to the authentication
                                                        secret for User, default is
                                                        empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                                      properties:
                                                        name:
                                                          description: 'Name of the
                                                            referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                            TODO: Add other useful
                                                            fields. apiVersion, kind,
                                                            uid?'
                                                          type: string
                                                      type: object
                                                    user:
                                                      description: 'Optional: User
                                                        is the rados user name, default
                                                        is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                                      type: string
                                                  required:
                                                  - monitors
                                                  type: object
                                                cinder:
                                                  description: 'Cinder represents
                                                    a cinder volume attached and mounted
                                                    on kubelets host machine. More
                                                    info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                                  properties:
                                                    fsType:
                                                      description: 'Filesystem type
                                                        to mount. Must be a filesystem
                                                        type supported by the host
                                                        operating system. Examples:
                                                        "ext4", "xfs", "ntfs". Implicitly
                                                        inferred to be "ext4" if unspecified.
                                                        More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                                      type: string
                                                    readOnly:
                                                      description: 'Optional: Defaults
                                                        to false (read/write). ReadOnly
                                                        here will force the ReadOnly
                                                        setting in VolumeMounts. More
                                                        info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                                      type: boolean
                                                    secretRef:
                                                      description: 'Optional: points
                                                        to a secret object containing
                                                        parameters used to connect
                                                        to OpenStack.'
                                                      properties:
                                                        name:
                                                          description: 'Name of the
                                                            referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                            TODO: Add other useful
                                                            fields. apiVersion, kind,
                                                            uid?'
                                                          type: string
                                                      type: object
                                                    volumeID:
                                                      description: 'volume id used
                                                        to identify the volume in
                                                        cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                                      type: string
                                                  required:
                                                  - volumeID
                                                  type: object
                                                configMap:
                                                  description: ConfigMap represents
                                                    a configMap that should populate
                                                    this volume
                                                  properties:
                                                    defaultMode:
                                                      description: 'Optional: mode
                                                        bits to use on created files
                                                        by default. Must be a value
                                                        between 0 and 0777. Defaults
                                                        to 0644. Directories within
                                                        the path are not affected
                                                        by this setting. This might
                                                        be in conflict with other
                                                        options that affect the file
                                                        mode, like fsGroup, and the
                                                        result can be other mode bits
                                                        set.'
                                                      format: int32
                                                      type: integer
                                                    items:
                                                      description: If unspecified,
                                                        each key-value pair in the
                                                        Data field of the referenced
                                                        ConfigMap will be projected
                                                        into the volume as a file
                                                        whose name is the key and
                                                        content is the value. If specified,
                                                        the listed keys will be projected
                                                        into the specified paths,
                                                        and unlisted keys will not
                                                        be present. If a key is specified
                                                        which is not present in the
                                                        ConfigMap, the volume setup
                                                        will error unless it is marked
                                                        optional. Paths must be relative
                                                        and may not contain the '..'
                                                        path or start with '..'.
                                                      items:
                                                        description: Maps a string
                                                          key to a path within a volume.
                                                        properties:
                                                          key:
                                                            description: The key to
                                                              project.
                                                            type: string
                                                          mode:
                                                            description: 'Optional:
                                                              mode bits to use on
                                                              this file, must be a
                                                              value between 0 and
                                                              0777. If not specified,
                                                              the volume defaultMode
                                                              will be used. This might
                                                              be in conflict with
                                                              other options that affect
                                                              the file mode, like
                                                              fsGroup, and the result
                                                              can be other mode bits
                                                              set.'
                                                            format: int32
                                                            type: integer
                                                          path:
                                                            description: The relative
                                                              path of the file to
                                                              map the key to. May
                                                              not be an absolute path.
                                                              May not contain the
                                                              path element '..'. May
                                                              not start with the string
                                                              '..'.
                                                            type: string
                                                        required:
                                                        - key
                                                        - path
                                                        type: object
                                                      type: array
                                                    name:
                                                      description: 'Name of the referent.
                                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                        TODO: Add other useful fields.
                                                        apiVersion, kind, uid?'
                                                      type: string
                                                    optional:
                                                      description: Specify whether
                                                        the ConfigMap or its keys
                                                        must be defined
                                                      type: boolean
                                                  type: object
                                                csi:
                                                  description: CSI (Container Storage
                                                    Interface) represents storage
                                                    that is handled by an external
                                                    CSI driver (Alpha feature).
                                                  properties:
                                                    driver:
                                                      description: Driver is the name
                                                        of the CSI driver that handles
                                                        this volume. Consult with
                                                        your admin for the correct
                                                        name as registered in the
                                                        cluster.
                                                      type: string
                                                    fsType:
                                                      description: Filesystem type
                                                        to mount. Ex. "ext4", "xfs",
                                                        "ntfs". If not provided, the
                                                        empty value is passed to the
                                                        associated CSI driver which
                                                        will determine the default
                                                        filesystem to apply.
                                                      type: string
                                                    nodePublishSecretRef:
                                                      description: NodePublishSecretRef
                                                        is a reference to the secret
                                                        object containing sensitive
                                                        information to pass to the
                                                        CSI driver to complete the
                                                        CSI NodePublishVolume and
                                                        NodeUnpublishVolume calls.
                                                        This field is optional, and  may
                                                        be empty if no secret is required.
                                                        If the secret object contains
                                                        more than one secret, all
                                                        secret references are passed.
                                                      properties:
                                                        name:
                                                          description: 'Name of the
                                                            referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                            TODO: Add other useful
                                                            fields. apiVersion, kind,
                                                            uid?'
                                                          type: string
                                                      type: object
                                                    readOnly:
                                                      description: Specifies a read-only
                                                        configuration for the volume.
                                                        Defaults to false (read/write).
                                                      type: boolean
                                                    volumeAttributes:
                                                      additionalProperties:
                                                        type: string
                                                      description: VolumeAttributes
                                                        stores driver-specific properties
                                                        that are passed to the CSI
                                                        driver. Consult your driver's
                                                        documentation for supported
                                                        values.
                                                      type: object
                                                  required:
                                                  - driver
                                                  type: object
                                                downwardAPI:
                                                  description: DownwardAPI represents
                                                    downward API about the pod that
                                                    should populate this volume
                                                  properties:
                                                    defaultMode:
                                                      description: 'Optional: mode
                                                        bits to use on created files
                                                        by default. Must be a value
                                                        between 0 and 0777. Defaults
                                                        to 0644. Directories within
                                                        the path are not affected
                                                        by this setting. This might
                                                        be in conflict with other
                                                        options that affect the file
                                                        mode, like fsGroup, and the
                                                        result can be other mode bits
                                                        set.'
                                                      format: int32
                                                      type: integer
                                                    items:
                                                      description: Items is a list
                                                        of downward API volume file
                                                      items:
                                                        description: DownwardAPIVolumeFile
                                                          represents information to
                                                          create the file containing
                                                          the pod field
                                                        properties:
                                                          fieldRef:
                                                            description: 'Required:
                                                              Selects a field of the
                                                              pod: only annotations,
                                                              labels, name and namespace
                                                              are supported.'
                                                            properties:
                                                              apiVersion:
                                                                description: Version
                                                                  of the schema the
                                                                  FieldPath is written
                                                                  in terms of, defaults
                                                                  to "v1".
                                                                type: string
                                                              fieldPath:
                                                                description: Path
                                                                  of the field to
                                                                  select in the specified
                                                                  API version.
                                                                type: string
                                                            required:
                                                            - fieldPath
                                                            type: object
                                                          mode:
                                                            description: 'Optional:
                                                              mode bits to use on
                                                              this file, must be a
                                                              value between 0 and
                                                              0777. If not specified,
                                                              the volume defaultMode
                                                              will be used. This might
                                                              be in conflict with
                                                              other options that affect
                                                              the file mode, like
                                                              fsGroup, and the result
                                                              can be other mode bits
                                                              set.'
                                                            format: int32
                                                            type: integer
                                                          path:
                                                            description: 'Required:
                                                              Path is  the relative
                                                              path name of the file
                                                              to be created. Must
                                                              not be absolute or contain
                                                              the ''..'' path. Must
                                                              be utf-8 encoded. The
                                                              first item of the relative
                                                              path must not start
                                                              with ''..'''
                                                            type: string
                                                          resourceFieldRef:
                                                            description: 'Selects
                                                              a resource of the container:
                                                              only resources limits
                                                              and requests (limits.cpu,
                                                              limits.memory, requests.cpu
                                                              and requests.memory)
                                                              are currently supported.'
                                                            properties:
                                                              containerName:
                                                                description: 'Container
                                                                  name: required for
                                                                  volumes, optional
                                                                  for env vars'
                                                                type: string
                                                              divisor:
                                                                anyOf:
                                                                - type: integer
                                                                - type: string
                                                                description: Specifies
                                                                  the output format
                                                                  of the exposed resources,
                                                                  defaults to "1"
                                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                                x-kubernetes-int-or-string: true
                                                              resource:
                                                                description: 'Required:
                                                                  resource to select'
                                                                type: string
                                                            required:
                                                            - resource
                                                            type: object
                                                        required:
                                                        - path
                                                        type: object
                                                      type: array
                                                  type: object
                                                emptyDir:
                                                  description: 'EmptyDir represents
                                                    a temporary directory that shares
                                                    a pod''s lifetime. More info:
                                                    https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                                  properties:
                                                    medium:
                                                      description: 'What type of storage
                                                        medium should back this directory.
                                                        The default is "" which means
                                                        to use the node''s default
                                                        medium. Must be an empty string
                                                        (default) or Memory. More
                                                        info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                                      type: string
                                                    sizeLimit:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      description: 'Total amount of
                                                        local storage required for
                                                        this EmptyDir volume. The
                                                        size limit is also applicable
                                                        for memory medium. The maximum
                                                        usage on memory medium EmptyDir
                                                        would be the minimum value
                                                        between the SizeLimit specified
                                                        here and the sum of memory
                                                        limits of all containers in
                                                        a pod. The default is nil
                                                        which means that the limit
                                                        is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                  type: object
                                                fc:
                                                  description: FC represents a Fibre
                                                    Channel resource that is attached
                                                    to a kubelet's host machine and
                                                    then exposed to the pod.
                                                  properties:
                                                    fsType:
                                                      description: 'Filesystem type
                                                        to mount. Must be a filesystem
                                                        type supported by the host
                                                        operating system. Ex. "ext4",
                                                        "xfs", "ntfs". Implicitly
                                                        inferred to be "ext4" if unspecified.
                                                        TODO: how do we prevent errors
                                                        in the filesystem from compromising
                                                        the machine'
                                                      type: string
                                                    lun:
                                                      description: 'Optional: FC target
                                                        lun number'
                                                      format: int32
                                                      type: integer
                                                    readOnly:
                                                      description: 'Optional: Defaults
                                                        to false (read/write). ReadOnly
                                                        here will force the ReadOnly
                                                        setting in VolumeMounts.'
                                                      type: boolean
                                                    targetWWNs:
                                                      description: 'Optional: FC target
                                                        worldwide names (WWNs)'
                                                      items:
                                                        type: string
                                                      type: array
                                                    wwids:
                                                      description: 'Optional: FC volume
                                                        world wide identifiers (wwids)
                                                        Either wwids or combination
                                                        of targetWWNs and lun must
                                                        be set, but not both simultaneously.'
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                flexVolume:
                                                  description: FlexVolume represents
                                                    a generic volume resource that
                                                    is provisioned/attached using
                                                    an exec based plugin.
                                                  properties:
                                                    driver:
                                                      description: Driver is the name
                                                        of the driver to use for this
                                                        volume.
                                                      type: string
                                                    fsType:
                                                      description: Filesystem type
                                                        to mount. Must be a filesystem
                                                        type supported by the host
                                                        operating system. Ex. "ext4",
                                                        "xfs", "ntfs". The default
                                                        filesystem depends on FlexVolume
                                                        script.
                                                      type: string
                                                    options:
                                                      additionalProperties:
                                                        type: string
                                                      description: 'Optional: Extra
                                                        command options if any.'
                                                      type: object
                                                    readOnly:
                                                      description: 'Optional: Defaults
                                                        to false (read/write). ReadOnly
                                                        here will force the ReadOnly
                                                        setting in VolumeMounts.'
                                                      type: boolean
                                                    secretRef:
                                                      description: 'Optional: SecretRef
                                                        is reference to the secret
                                                        object containing sensitive
                                                        information to pass to the
                                                        plugin scripts. This may be
                                                        empty if no secret object
                                                        is specified. If the secret
                                                        object contains more than
                                                        one secret, all secrets are
                                                        passed to the plugin scripts.'
                                                      properties:
                                                        name:
                                                          description: 'Name of the
                                                            referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                            TODO: Add other useful
                                                            fields. apiVersion, kind,
                                                            uid?'
                                                          type: string
                                                      type: object
                                                  required:
                                                  - driver
                                                  type: object
                                                flocker:
                                                  description: Flocker represents
                                                    a Flocker volume attached to a
                                                    kubelet's host machine. This depends
                                                    on the Flocker control service
                                                    being running
                                                  properties:
                                                    datasetName:
                                                      description: Name of the dataset
                                                        stored as metadata -> name
                                                        on the dataset for Flocker
                                                        should be considered as deprecated
                                                      type: string
                                                    datasetUUID:
                                                      description: UUID of the dataset.
                                                        This is unique identifier
                                                        of a Flocker dataset
                                                      type: string
                                                  type: object
                                                gcePersistentDisk:
                                                  description: 'GCEPersistentDisk
                                                    represents a GCE Disk resource
                                                    that is attached to a kubelet''s
                                                    host machine and then exposed
                                                    to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                                  properties:
                                                    fsType:
                                                      description: 'Filesystem type
                                                        of the volume that you want
                                                        to mount. Tip: Ensure that
                                                        the filesystem type is supported
                                                        by the host operating system.
                                                        Examples: "ext4", "xfs", "ntfs".
                                                        Implicitly inferred to be
                                                        "ext4" if unspecified. More
                                                        info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                                        TODO: how do we prevent errors
                                                        in the filesystem from compromising
                                                        the machine'
                                                      type: string
                                                    partition:
                                                      description: 'The partition
                                                        in the volume that you want
                                                        to mount. If omitted, the
                                                        default is to mount by volume
                                                        name. Examples: For volume
                                                        /dev/sda1, you specify the
                                                        partition as "1". Similarly,
                                                        the volume partition for /dev/sda
                                                        is "0" (or you can leave the
                                                        property empty). More info:
                                                        https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                                      format: int32
                                                      type: integer
                                                    pdName:
                                                      description: 'Unique name of
                                                        the PD resource in GCE. Used
                                                        to identify the disk in GCE.
                                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                                      type: string
                                                    readOnly:
                                                      description: 'ReadOnly here
                                                        will force the ReadOnly setting
                                                        in VolumeMounts. Defaults
                                                        to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                                      type: boolean
                                                  required:
                                                  - pdName
                                                  type: object
                                                gitRepo:
                                                  description: 'GitRepo represents
                                                    a git repository at a particular
                                                    revision. DEPRECATED: GitRepo
                                                    is deprecated. To provision a
                                                    container with a git repo, mount
                                                    an EmptyDir into an InitContainer
                                                    that clones the repo using git,
                                                    then mount the EmptyDir into the
                                                    Pod''s container.'
                                                  properties:
                                                    directory:
                                                      description: Target directory
                                                        name. Must not contain or
                                                        start with '..'.  If '.' is
                                                        supplied, the volume directory
                                                        will be the git repository.  Otherwise,
                                                        if specified, the volume will
                                                        contain the git repository
                                                        in the subdirectory with the
                                                        given name.
                                                      type: string
                                                    repository:
                                                      description: Repository URL
                                                      type: string
                                                    revision:
                                                      description: Commit hash for
                                                        the specified revision.
                                                      type: string
                                                  required:
                                                  - repository
                                                  type: object
                                                glusterfs:
                                                  description: 'Glusterfs represents
                                                    a Glusterfs mount on the host
                                                    that shares a pod''s lifetime.
                                                    More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                                                  properties:
                                                    endpoints:
                                                      description: 'EndpointsName
                                                        is the endpoint name that
                                                        details Glusterfs topology.
                                                        More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                                      type: string
                                                    path:
                                                      description: 'Path is the Glusterfs
                                                        volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                                      type: string
                                                    readOnly:
                                                      description: 'ReadOnly here
                                                        will force the Glusterfs volume
                                                        to be mounted with read-only
                                                        permissions. Defaults to false.
                                                        More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                                      type: boolean
                                                  required:
                                                  - endpoints
                                                  - path
                                                  type: object
                                                hostPath:
                                                  description: 'HostPath represents
                                                    a pre-existing file or directory
                                                    on the host machine that is directly
                                                    exposed to the container. This
                                                    is generally used for system agents
                                                    or other privileged things that
                                                    are allowed to see the host machine.
                                                    Most containers will NOT need
                                                    this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                                    --- TODO(jonesdl) We need to restrict
                                                    who can use host directory mounts
                                                    and who can/can not mount host
                                                    directories as read/write.'
                                                  properties:
                                                    path:
                                                      description: 'Path of the directory
                                                        on the host. If the path is
                                                        a symlink, it will follow
                                                        the link to the real path.
                                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                                      type: string
                                                    type:
                                                      description: 'Type for HostPath
                                                        Volume Defaults to "" More
                                                        info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                                      type: string
                                                  required:
                                                  - path
                                                  type: object
                                                iscsi:
                                                  description: 'ISCSI represents an
                                                    ISCSI Disk resource that is attached
                                                    to a kubelet''s host machine and
                                                    then exposed to the pod. More
                                                    info: https://examples.k8s.io/volumes/iscsi/README.md'
                                                  properties:
                                                    chapAuthDiscovery:
                                                      description: whether support
                                                        iSCSI Discovery CHAP authentication
                                                      type: boolean
                                                    chapAuthSession:
                                                      description: whether support
                                                        iSCSI Session CHAP authentication
                                                      type: boolean
                                                    fsType:
                                                      description: 'Filesystem type
                                                        of the volume that you want
                                                        to mount. Tip: Ensure that
                                                        the filesystem type is supported
                                                        by the host operating system.
                                                        Examples: "ext4", "xfs", "ntfs".
                                                        Implicitly inferred to be
                                                        "ext4" if unspecified. More
                                                        info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                                        TODO: how do we prevent errors
                                                        in the filesystem from compromising
                                                        the machine'
                                                      type: string
                                                    initiatorName:
                                                      description: Custom iSCSI Initiator
                                                        Name. If initiatorName is
                                                        specified with iscsiInterface
                                                        simultaneously, new iSCSI
                                                        interface <target portal>:<volume
                                                        name> will be created for
                                                        the connection.
                                                      type: string
                                                    iqn:
                                                      description: Target iSCSI Qualified
                                                        Name.
                                                      type: string
                                                    iscsiInterface:
                                                      description: iSCSI Interface
                                                        Name that uses an iSCSI transport.
                                                        Defaults to 'default' (tcp).
                                                      type: string
                                                    lun:
                                                      description: iSCSI Target Lun
                                                        number.
                                                      format: int32
                                                      type: integer
                                                    portals:
                                                      description: iSCSI Target Portal
                                                        List. The portal is either
                                                        an IP or ip_addr:port if the
                                                        port is other than default
                                                        (typically TCP ports 860 and
                                                        3260).
                                                      items:
                                                        type: string
                                                      type: array
                                                    readOnly:
                                                      description: ReadOnly here will
                                                        force the ReadOnly setting
                                                        in VolumeMounts. Defaults
                                                        to false.
                                                      type: boolean
                                                    secretRef:
                                                      description: CHAP Secret for
                                                        iSCSI target and initiator
                                                        authentication
                                                      properties:
                                                        name:
                                                          description: 'Name of the
                                                            referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                            TODO: Add other useful
                                                            fields. apiVersion, kind,
                                                            uid?'
                                                          type: string
                                                      type: object
                                                    targetPortal:
                                                      description: iSCSI Target Portal.
                                                        The Portal is either an IP
                                                        or ip_addr:port if the port
                                                        is other than default (typically
                                                        TCP ports 860 and 3260).
                                                      type: string
                                                  required:
                                                  - iqn
                                                  - lun
                                                  - targetPortal
                                                  type: object
                                                name:
                                                  description: 'Volume''s name. Must
                                                    be a DNS_LABEL and unique within
                                                    the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                  type: string
                                                nfs:
                                                  description: 'NFS represents an
                                                    NFS mount on the host that shares
                                                    a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                                  properties:
                                                    path:
                                                      description: 'Path that is exported
                                                        by the NFS server. More info:
                                                        https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                                      type: string
                                                    readOnly:
                                                      description: 'ReadOnly here
                                                        will force the NFS export
                                                        to be mounted with read-only
                                                        permissions. Defaults to false.
                                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                                      type: boolean
                                                    server:
                                                      description: 'Server is the
                                                        hostname or IP address of
                                                        the NFS server. More info:
                                                        https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                                      type: string
                                                  required:
                                                  - path
                                                  - server
                                                  type: object
                                                persistentVolumeClaim:
                                                  description: 'PersistentVolumeClaimVolumeSource
                                                    represents a reference to a PersistentVolumeClaim
                                                    in the same namespace. More info:
                                                    https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                                  properties:
                                                    claimName:
                                                      description: 'ClaimName is the
                                                        name of a PersistentVolumeClaim
                                                        in the same namespace as the
                                                        pod using this volume. More
                                                        info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                                      type: string
                                                    readOnly:
                                                      description: Will force the
                                                        ReadOnly setting in VolumeMounts.
                                                        Default false.
                                                      type: boolean
                                                  required:
                                                  - claimName
                                                  type: object
                                                photonPersistentDisk:
                                                  description: PhotonPersistentDisk
                                                    represents a PhotonController
                                                    persistent disk attached and mounted
                                                    on kubelets host machine
                                                  properties:
                                                    fsType:
                                                      description: Filesystem type
                                                        to mount. Must be a filesystem
                                                        type supported by the host
                                                        operating system. Ex. "ext4",
                                                        "xfs", "ntfs". Implicitly
                                                        inferred to be "ext4" if unspecified.
                                                      type: string
                                                    pdID:
                                                      description: ID that identifies
                                                        Photon Controller persistent
                                                        disk
                                                      type: string
                                                  required:
                                                  - pdID
                                                  type: object
                                                portworxVolume:
                                                  description: PortworxVolume represents
                                                    a portworx volume attached and
                                                    mounted on kubelets host machine
                                                  properties:
                                                    fsType:
                                                      description: FSType represents
                                                        the filesystem type to mount
                                                        Must be a filesystem type
                                                        supported by the host operating
                                                        system. Ex. "ext4", "xfs".
                                                        Implicitly inferred to be
                                                        "ext4" if unspecified.
                                                      type: string
                                                    readOnly:
                                                      description: Defaults to false
                                                        (read/write). ReadOnly here
                                                        will force the ReadOnly setting
                                                        in VolumeMounts.
                                                      type: boolean
                                                    volumeID:
                                                      description: VolumeID uniquely
                                                        identifies a Portworx volume
                                                      type: string
                                                  required:
                                                  - volumeID
                                                  type: object
                                                projected:
                                                  description: Items for all in one
                                                    resources secrets, configmaps,
                                                    and downward API
                                                  properties:
                                                    defaultMode:
                                                      description: Mode bits to use
                                                        on created files by default.
                                                        Must be a value between 0
                                                        and 0777. Directories within
                                                        the path are not affected
                                                        by this setting. This might
                                                        be in conflict with other
                                                        options that affect the file
                                                        mode, like fsGroup, and the
                                                        result can be other mode bits
                                                        set.
                                                      format: int32
                                                      type: integer
                                                    sources:
                                                      description: list of volume
                                                        projections
                                                      items:
                                                        description: Projection that
                                                          may be projected along with
                                                          other supported volume types
                                                        properties:
                                                          configMap:
                                                            description: information
                                                              about the configMap
                                                              data to project
                                                            properties:
                                                              items:
                                                                description: If unspecified,
                                                                  each key-value pair
                                                                  in the Data field
                                                                  of the referenced
                                                                  ConfigMap will be
                                                                  projected into the
                                                                  volume as a file
                                                                  whose name is the
                                                                  key and content
                                                                  is the value. If
                                                                  specified, the listed
                                                                  keys will be projected
                                                                  into the specified
                                                                  paths, and unlisted
                                                                  keys will not be
                                                                  present. If a key
                                                                  is specified which
                                                                  is not present in
                                                                  the ConfigMap, the
                                                                  volume setup will
                                                                  error unless it
                                                                  is marked optional.
                                                                  Paths must be relative
                                                                  and may not contain
                                                                  the '..' path or
                                                                  start with '..'.
                                                                items:
                                                                  description: Maps
                                                                    a string key to
                                                                    a path within
                                                                    a volume.
                                                                  properties:
                                                                    key:
                                                                      description: The
                                                                        key to project.
                                                                      type: string
                                                                    mode:
                                                                      description: 'Optional:
                                                                        mode bits
                                                                        to use on
                                                                        this file,
                                                                        must be a
                                                                        value between
                                                                        0 and 0777.
                                                                        If not specified,
                                                                        the volume
                                                                        defaultMode
                                                                        will be used.
                                                                        This might
                                                                        be in conflict
                                                                        with other
                                                                        options that
                                                                        affect the
                                                                        file mode,
                                                                        like fsGroup,
                                                                        and the result
                                                                        can be other
                                                                        mode bits
                                                                        set.'
                                                                      format: int32
                                                                      type: integer
                                                                    path:
                                                                      description: The
                                                                        relative path
                                                                        of the file
                                                                        to map the
                                                                        key to. May
                                                                        not be an
                                                                        absolute path.
                                                                        May not contain
                                                                        the path element
                                                                        '..'. May
                                                                        not start
                                                                        with the string
                                                                        '..'.
                                                                      type: string
                                                                  required:
                                                                  - key
                                                                  - path
                                                                  type: object
                                                                type: array
                                                              name:
                                                                description: 'Name
                                                                  of the referent.
                                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                                  TODO: Add other
                                                                  useful fields. apiVersion,
                                                                  kind, uid?'
                                                                type: string
                                                              optional:
                                                                description: Specify
                                                                  whether the ConfigMap
                                                                  or its keys must
                                                                  be defined
                                                                type: boolean
                                                            type: object
                                                          downwardAPI:
                                                            description: information
                                                              about the downwardAPI
                                                              data to project
                                                            properties:
                                                              items:
                                                                description: Items
                                                                  is a list of DownwardAPIVolume
                                                                  file
                                                                items:
                                                                  description: DownwardAPIVolumeFile
                                                                    represents information
                                                                    to create the
                                                                    file containing
                                                                    the pod field
                                                                  properties:
                                                                    fieldRef:
                                                                      description: 'Required:
                                                                        Selects a
                                                                        field of the
                                                                        pod: only
                                                                        annotations,
                                                                        labels, name
                                                                        and namespace
                                                                        are supported.'
                                                                      properties:
                                                                        apiVersion:
                                                                          description: Version
                                                                            of the
                                                                            schema
                                                                            the FieldPath
                                                                            is written
                                                                            in terms
                                                                            of, defaults
                                                                            to "v1".
                                                                          type: string
                                                                        fieldPath:
                                                                          description: Path
                                                                            of the
                                                                            field
                                                                            to select
                                                                            in the
                                                                            specified
                                                                            API version.
                                                                          type: string
                                                                      required:
                                                                      - fieldPath
                                                                      type: object
                                                                    mode:
                                                                      description: 'Optional:
                                                                        mode bits
                                                                        to use on
                                                                        this file,
                                                                        must be a
                                                                        value between
                                                                        0 and 0777.
                                                                        If not specified,
                                                                        the volume
                                                                        defaultMode
                                                                        will be used.
                                                                        This might
                                                                        be in conflict
                                                                        with other
                                                                        options that
                                                                        affect the
                                                                        file mode,
                                                                        like fsGroup,
                                                                        and the result
                                                                        can be other
                                                                        mode bits
                                                                        set.'
                                                                      format: int32
                                                                      type: integer
                                                                    path:
                                                                      description: 'Required:
                                                                        Path is  the
                                                                        relative path
                                                                        name of the
                                                                        file to be
                                                                        created. Must
                                                                        not be absolute
                                                                        or contain
                                                                        the ''..''
                                                                        path. Must
                                                                        be utf-8 encoded.
                                                                        The first
                                                                        item of the
                                                                        relative path
                                                                        must not start
                                                                        with ''..'''
                                                                      type: string
                                                                    resourceFieldRef:
                                                                      description: 'Selects
                                                                        a resource
                                                                        of the container:
                                                                        only resources
                                                                        limits and
                                                                        requests (limits.cpu,
                                                                        limits.memory,
                                                                        requests.cpu
                                                                        and requests.memory)
                                                                        are currently
                                                                        supported.'
                                                                      properties:
                                                                        containerName:
                                                                          description: 'Container
                                                                            name:
                                                                            required
                                                                            for volumes,
                                                                            optional
                                                                            for env
                                                                            vars'
                                                                          type: string
                                                                        divisor:
                                                                          anyOf:
                                                                          - type: integer
                                                                          - type: string
                                                                          description: Specifies
                                                                            the output
                                                                            format
                                                                            of the
                                                                            exposed
                                                                            resources,
                                                                            defaults
                                                                            to "1"
                                                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                                          x-kubernetes-int-or-string: true
                                                                        resource:
                                                                          description: 'Required:
                                                                            resource
                                                                            to select'
                                                                          type: string
                                                                      required:
                                                                      - resource
                                                                      type: object
                                                                  required:
                                                                  - path
                                                                  type: object
                                                                type: array
                                                            type: object
                                                          secret:
                                                            description: information
                                                              about the secret data
                                                              to project
                                                            properties:
                                                              items:
                                                                description: If unspecified,
                                                                  each key-value pair
                                                                  in the Data field
                                                                  of the referenced
                                                                  Secret will be projected
                                                                  into the volume
                                                                  as a file whose
                                                                  name is the key
                                                                  and content is the
                                                                  value. If specified,
                                                                  the listed keys
                                                                  will be projected
                                                                  into the specified
                                                                  paths, and unlisted
                                                                  keys will not be
                                                                  present. If a key
                                                                  is specified which
                                                                  is not present in
                                                                  the Secret, the
                                                                  volume setup will
                                                                  error unless it
                                                                  is marked optional.
                                                                  Paths must be relative
                                                                  and may not contain
                                                                  the '..' path or
                                                                  start with '..'.
                                                                items:
                                                                  description: Maps
                                                                    a string key to
                                                                    a path within
                                                                    a volume.
                                                                  properties:
                                                                    key:
                                                                      description: The
                                                                        key to project.
                                                                      type: string
                                                                    mode:
                                                                      description: 'Optional:
                                                                        mode bits
                                                                        to use on
                                                                        this file,
                                                                        must be a
                                                                        value between
                                                                        0 and 0777.
                                                                        If not specified,
                                                                        the volume
                                                                        defaultMode
                                                                        will be used.
                                                                        This might
                                                                        be in conflict
                                                                        with other
                                                                        options that
                                                                        affect the
                                                                        file mode,
                                                                        like fsGroup,
                                                                        and the result
                                                                        can be other
                                                                        mode bits
                                                                        set.'
                                                                      format: int32
                                                                      type: integer
                                                                    path:
                                                                      description: The
                                                                        relative path
                                                                        of the file
                                                                        to map the
                                                                        key to. May
                                                                        not be an
                                                                        absolute path.
                                                                        May not contain
                                                                        the path element
                                                                        '..'. May
                                                                        not start
                                                                        with the string
                                                                        '..'.
                                                                      type: string
                                                                  required:
                                                                  - key
                                                                  - path
                                                                  type: object
                                                                type: array
                                                              name:
                                                                description: 'Name
                                                                  of the referent.
                                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                                  TODO: Add other
                                                                  useful fields. apiVersion,
                                                                  kind, uid?'
                                                                type: string
                                                              optional:
                                                                description: Specify
                                                                  whether the Secret
                                                                  or its key must
                                                                  be defined
                                                                type: boolean
                                                            type: object
                                                          serviceAccountToken:
                                                            description: information
                                                              about the serviceAccountToken
                                                              data to project
                                                            properties:
                                                              audience:
                                                                description: Audience
                                                                  is the intended
                                                                  audience of the
                                                                  token. A recipient
                                                                  of a token must
                                                                  identify itself
                                                                  with an identifier
                                                                  specified in the
                                                                  audience of the
                                                                  token, and otherwise
                                                                  should reject the
                                                                  token. The audience
                                                                  defaults to the
                                                                  identifier of the
                                                                  apiserver.
                                                                type: string
                                                              expirationSeconds:
                                                                description: ExpirationSeconds
                                                                  is the requested
                                                                  duration of validity
                                                                  of the service account
                                                                  token. As the token
                                                                  approaches expiration,
                                                                  the kubelet volume
                                                                  plugin will proactively
                                                                  rotate the service
                                                                  account token. The
                                                                  kubelet will start
                                                                  trying to rotate
                                                                  the token if the
                                                                  token is older than
                                                                  80 percent of its
                                                                  time to live or
                                                                  if the token is
                                                                  older than 24 hours.Defaults
                                                                  to 1 hour and must
                                                                  be at least 10 minutes.
                                                                format: int64
                                                                type: integer
                                                              path:
                                                                description: Path
                                                                  is the path relative
                                                                  to the mount point
                                                                  of the file to project
                                                                  the token into.
                                                                type: string
                                                            required:
                                                            - path
                                                            type: object
                                                        type: object
                                                      type: array
                                                  required:
                                                  - sources
                                                  type: object
                                                quobyte:
                                                  description: Quobyte represents
                                                    a Quobyte mount on the host that
                                                    shares a pod's lifetime
                                                  properties:
                                                    group:
                                                      description: Group to map volume
                                                        access to Default is no group
                                                      type: string
                                                    readOnly:
                                                      description: ReadOnly here will
                                                        force the Quobyte volume to
                                                        be mounted with read-only
                                                        permissions. Defaults to false.
                                                      type: boolean
                                                    registry:
                                                      description: Registry represents
                                                        a single or multiple Quobyte
                                                        Registry services specified
                                                        as a string as host:port pair
                                                        (multiple entries are separated
                                                        with commas) which acts as
                                                        the central registry for volumes
                                                      type: string
                                                    tenant:
                                                      description: Tenant owning the
                                                        given Quobyte volume in the
                                                        Backend Used with dynamically
                                                        provisioned Quobyte volumes,
                                                        value is set by the plugin
                                                      type: string
                                                    user:
                                                      description: User to map volume
                                                        access to Defaults to serivceaccount
                                                        user
                                                      type: string
                                                    volume:
                                                      description: Volume is a string
                                                        that references an already
                                                        created Quobyte volume by
                                                        name.
                                                      type: string
                                                  required:
                                                  - registry
                                                  - volume
                                                  type: object
                                                rbd:
                                                  description: 'RBD represents a Rados
                                                    Block Device mount on the host
                                                    that shares a pod''s lifetime.
                                                    More info: https://examples.k8s.io/volumes/rbd/README.md'
                                                  properties:
                                                    fsType:
                                                      description: 'Filesystem type
                                                        of the volume that you want
                                                        to mount. Tip: Ensure that
                                                        the filesystem type is supported
                                                        by the host operating system.
                                                        Examples: "ext4", "xfs", "ntfs".
                                                        Implicitly inferred to be
                                                        "ext4" if unspecified. More
                                                        info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                                        TODO: how do we prevent errors
                                                        in the filesystem from compromising
                                                        the machine'
                                                      type: string
                                                    image:
                                                      description: 'The rados image
                                                        name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                                      type: string
                                                    keyring:
                                                      description: 'Keyring is the
                                                        path to key ring for RBDUser.
                                                        Default is /etc/ceph/keyring.
                                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                                      type: string
                                                    monitors:
                                                      description: 'A collection of
                                                        Ceph monitors. More info:
                                                        https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                                      items:
                                                        type: string
                                                      type: array
                                                    pool:
                                                      description: 'The rados pool
                                                        name. Default is rbd. More
                                                        info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                                      type: string
                                                    readOnly:
                                                      description: 'ReadOnly here
                                                        will force the ReadOnly setting
                                                        in VolumeMounts. Defaults
                                                        to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                                      type: boolean
                                                    secretRef:
                                                      description: 'SecretRef is name
                                                        of the authentication secret
                                                        for RBDUser. If provided overrides
                                                        keyring. Default is nil. More
                                                        info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                                      properties:
                                                        name:
                                                          description: 'Name of the
                                                            referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                            TODO: Add other useful
                                                            fields. apiVersion, kind,
                                                            uid?'
                                                          type: string
                                                      type: object
                                                    user:
                                                      description: 'The rados user
                                                        name. Default is admin. More
                                                        info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                                      type: string
                                                  required:
                                                  - image
                                                  - monitors
                                                  type: object
                                                scaleIO:
                                                  description: ScaleIO represents
                                                    a ScaleIO persistent volume attached
                                                    and mounted on Kubernetes nodes.
                                                  properties:
                                                    fsType:
                                                      description: Filesystem type
                                                        to mount. Must be a filesystem
                                                        type supported by the host
                                                        operating system. Ex. "ext4",
                                                        "xfs", "ntfs". Default is
                                                        "xfs".
                                                      type: string
                                                    gateway:
                                                      description: The host address
                                                        of the ScaleIO API Gateway.
                                                      type: string
                                                    protectionDomain:
                                                      description: The name of the
                                                        ScaleIO Protection Domain
                                                        for the configured storage.
                                                      type: string
                                                    readOnly:
                                                      description: Defaults to false
                                                        (read/write). ReadOnly here
                                                        will force the ReadOnly setting
                                                        in VolumeMounts.
                                                      type: boolean
                                                    secretRef:
                                                      description: SecretRef references
                                                        to the secret for ScaleIO
                                                        user and other sensitive information.
                                                        If this is not provided, Login
                                                        operation will fail.
                                                      properties:
                                                        name:
                                                          description: 'Name of the
                                                            referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                            TODO: Add other useful
                                                            fields. apiVersion, kind,
                                                            uid?'
                                                          type: string
                                                      type: object
                                                    sslEnabled:
                                                      description: Flag to enable/disable
                                                        SSL communication with Gateway,
                                                        default false
                                                      type: boolean
                                                    storageMode:
                                                      description: Indicates whether
                                                        the storage for a volume should
                                                        be ThickProvisioned or ThinProvisioned.
                                                        Default is ThinProvisioned.
                                                      type: string
                                                    storagePool:
                                                      description: The ScaleIO Storage
                                                        Pool associated with the protection
                                                        domain.
                                                      type: string
                                                    system:
                                                      description: The name of the
                                                        storage system as configured
                                                        in ScaleIO.
                                                      type: string
                                                    volumeName:
                                                      description: The name of a volume
                                                        already created in the ScaleIO
                                                        system that is associated
                                                        with this volume source.
                                                      type: string
                                                  required:
                                                  - gateway
                                                  - secretRef
                                                  - system
                                                  type: object
                                                secret:
                                                  description: 'Secret represents
                                                    a secret that should populate
                                                    this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                                  properties:
                                                    defaultMode:
                                                      description: 'Optional: mode
                                                        bits to use on created files
                                                        by default. Must be a value
                                                        between 0 and 0777. Defaults
                                                        to 0644. Directories within
                                                        the path are not affected
                                                        by this setting. This might
                                                        be in conflict with other
                                                        options that affect the file
                                                        mode, like fsGroup, and the
                                                        result can be other mode bits
                                                        set.'
                                                      format: int32
                                                      type: integer
                                                    items:
                                                      description: If unspecified,
                                                        each key-value pair in the
                                                        Data field of the referenced
                                                        Secret will be projected into
                                                        the volume as a file whose
                                                        name is the key and content
                                                        is the value. If specified,
                                                        the listed keys will be projected
                                                        into the specified paths,
                                                        and unlisted keys will not
                                                        be present. If a key is specified
                                                        which is not present in the
                                                        Secret, the volume setup will
                                                        error unless it is marked
                                                        optional. Paths must be relative
                                                        and may not contain the '..'
                                                        path or start with '..'.
                                                      items:
                                                        description: Maps a string
                                                          key to a path within a volume.
                                                        properties:
                                                          key:
                                                            description: The key to
                                                              project.
                                                            type: string
                                                          mode:
                                                            description: 'Optional:
                                                              mode bits to use on
                                                              this file, must be a
                                                              value between 0 and
                                                              0777. If not specified,
                                                              the volume defaultMode
                                                              will be used. This might
                                                              be in conflict with
                                                              other options that affect
                                                              the file mode, like
                                                              fsGroup, and the result
                                                              can be other mode bits
                                                              set.'
                                                            format: int32
                                                            type: integer
                                                          path:
                                                            description: The relative
                                                              path of the file to
                                                              map the key to. May
                                                              not be an absolute path.
                                                              May not contain the
                                                              path element '..'. May
                                                              not start with the string
                                                              '..'.
                                                            type: string
                                                        required:
                                                        - key
                                                        - path
                                                        type: object
                                                      type: array
                                                    optional:
                                                      description: Specify whether
                                                        the Secret or its keys must
                                                        be defined
                                                      type: boolean
                                                    secretName:
                                                      description: 'Name of the secret
                                                        in the pod''s namespace to
                                                        use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                                      type: string
                                                  type: object
                                                storageos:
                                                  description: StorageOS represents
                                                    a StorageOS volume attached and
                                                    mounted on Kubernetes nodes.
                                                  properties:
                                                    fsType:
                                                      description: Filesystem type
                                                        to mount. Must be a filesystem
                                                        type supported by the host
                                                        operating system. Ex. "ext4",
                                                        "xfs", "ntfs". Implicitly
                                                        inferred to be "ext4" if unspecified.
                                                      type: string
                                                    readOnly:
                                                      description: Defaults to false
                                                        (read/write). ReadOnly here
                                                        will force the ReadOnly setting
                                                        in VolumeMounts.
                                                      type: boolean
                                                    secretRef:
                                                      description: SecretRef specifies
                                                        the secret to use for obtaining
                                                        the StorageOS API credentials.  If
                                                        not specified, default values
                                                        will be attempted.
                                                      properties:
                                                        name:
                                                          description: 'Name of the
                                                            referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                            TODO: Add other useful
                                                            fields. apiVersion, kind,
                                                            uid?'
                                                          type: string
                                                      type: object
                                                    volumeName:
                                                      description: VolumeName is the
                                                        human-readable name of the
                                                        StorageOS volume.  Volume
                                                        names are only unique within
                                                        a namespace.
                                                      type: string
                                                    volumeNamespace:
                                                      description: VolumeNamespace
                                                        specifies the scope of the
                                                        volume within StorageOS.  If
                                                        no namespace is specified
                                                        then the Pod's namespace will
                                                        be used.  This allows the
                                                        Kubernetes name scoping to
                                                        be mirrored within StorageOS
                                                        for tighter integration. Set
                                                        VolumeName to any name to
                                                        override the default behaviour.
                                                        Set to "default" if you are
                                                        not using namespaces within
                                                        StorageOS. Namespaces that
                                                        do not pre-exist within StorageOS
                                                        will be created.
                                                      type: string
                                                  type: object
                                                vsphereVolume:
                                                  description: VsphereVolume represents
                                                    a vSphere volume attached and
                                                    mounted on kubelets host machine
                                                  properties:
                                                    fsType:
                                                      description: Filesystem type
                                                        to mount. Must be a filesystem
                                                        type supported by the host
                                                        operating system. Ex. "ext4",
                                                        "xfs", "ntfs". Implicitly
                                                        inferred to be "ext4" if unspecified.
                                                      type: string
                                                    storagePolicyID:
                                                      description: Storage Policy
                                                        Based Management (SPBM) profile
                                                        ID associated with the StoragePolicyName.
                                                      type: string
                                                    storagePolicyName:
                                                      description: Storage Policy
                                                        Based Management (SPBM) profile
                                                        name.
                                                      type: string
                                                    volumePath:
                                                      description: Path that identifies
                                                        vSphere volume vmdk
                                                      type: string
                                                  required:
                                                  - volumePath
                                                  type: object
                                              required:
                                              - name
                                              type: object
                                            type: array
                                        required:
                                        - containers
                                        type: object
                                    type: object
                                required:
                                - selector
                                - template
                                type: object
                            required:
                            - name
                            - spec
                            type: object
                          type: array
                        permissions:
                          items:
                            description: StrategyDeploymentPermissions describe the
                              rbac rules and service account needed by the install
                              strategy
                            properties:
                              rules:
                                items:
                                  description: PolicyRule holds information that describes
                                    a policy rule, but does not contain information
                                    about who the rule applies to or which namespace
                                    the rule applies to.
                                  properties:
                                    apiGroups:
                                      description: APIGroups is the name of the APIGroup
                                        that contains the resources.  If multiple
                                        API groups are specified, any action requested
                                        against one of the enumerated resources in
                                        any API group will be allowed.
                                      items:
                                        type: string
                                      type: array
                                    nonResourceURLs:
                                      description: NonResourceURLs is a set of partial
                                        urls that a user should have access to.  *s
                                        are allowed, but only as the full, final step
                                        in the path Since non-resource URLs are not
                                        namespaced, this field is only applicable
                                        for ClusterRoles referenced from a ClusterRoleBinding.
                                        Rules can either apply to API resources (such
                                        as "pods" or "secrets") or non-resource URL
                                        paths (such as "/api"),  but not both.
                                      items:
                                        type: string
                                      type: array
                                    resourceNames:
                                      description: ResourceNames is an optional white
                                        list of names that the rule applies to.  An
                                        empty set means that everything is allowed.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: Resources is a list of resources
                                        this rule applies to.  ResourceAll represents
                                        all resources.
                                      items:
                                        type: string
                                      type: array
                                    verbs:
                                      description: Verbs is a list of Verbs that apply
                                        to ALL the ResourceKinds and AttributeRestrictions
                                        contained in this rule.  VerbAll represents
                                        all kinds.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - verbs
                                  type: object
                                type: array
                              serviceAccountName:
                                type: string
                            required:
                            - rules
                            - serviceAccountName
                            type: object
                          type: array
                      required:
                      - deployments
                      type: object
                    strategy:
                      type: string
                  required:
                  - strategy
                  type: object
                installModes:
                  description: InstallModes specify supported installation types
                  items:
                    description: InstallMode associates an InstallModeType with a
                      flag representing if the CSV supports it
                    properties:
                      supported:
                        type: boolean
                      type:
                        description: InstallModeType is a supported type of install
                          mode for CSV installation
                        type: string
                    required:
                    - supported
                    - type
                    type: object
                  type: array
                keywords:
                  items:
                    type: string
                  type: array
                labels:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to organize
                    and categorize (scope and select) objects.
                  type: object
                links:
                  items:
                    properties:
                      name:
                        type: string
                      url:
                        type: string
                    type: object
                  type: array
                maintainers:
                  items:
                    properties:
                      email:
                        type: string
                      name:
                        type: string
                    type: object
                  type: array
                maturity:
                  type: string
                minKubeVersion:
                  type: string
                nativeAPIs:
                  items:
                    description: GroupVersionKind unambiguously identifies a kind.  It
                      doesn't anonymously include GroupVersion to avoid automatic
                      coersion.  It doesn't use a GroupVersion to avoid custom marshalling
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                      version:
                        type: string
                    required:
                    - group
                    - kind
                    - version
                    type: object
                  type: array
                provider:
                  properties:
                    name:
                      type: string
                    url:
                      type: string
                  type: object
                replaces:
                  description: The name of a CSV this one replaces. Should match the
                    `metadata.Name` field of the old CSV.
                  type: string
                selector:
                  description: Label selector for related resources.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                version:
                  description: OperatorVersion is a wrapper around semver.Version
                    which supports correct marshaling to YAML and JSON.
                  type: string
                webhookdefinitions:
                  items:
                    description: WebhookDescription provides details to OLM about
                      required webhooks
                    properties:
                      admissionReviewVersions:
                        items:
                          type: string
                        type: array
                      containerPort:
                        format: int32
                        type: integer
                      conversionCRDs:
                        items:
                          type: string
                        type: array
                      deploymentName:
                        type: string
                      failurePolicy:
                        type: string
                      generateName:
                        type: string
                      matchPolicy:
                        description: MatchPolicyType specifies the type of match policy
                        type: string
                      objectSelector:
                        description: A label selector is a label query over a set
                          of resources. The result of matchLabels and matchExpressions
                          are ANDed. An empty label selector matches all objects.
                          A null label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      reinvocationPolicy:
                        description: ReinvocationPolicyType specifies what type of
                          policy the admission hook uses.
                        type: string
                      rules:
                        items:
                          description: RuleWithOperations is a tuple of Operations
                            and Resources. It is recommended to make sure that all
                            the tuple expansions are valid.
                          properties:
                            apiGroups:
                              description: APIGroups is the API groups the resources
                                belong to. '*' is all groups. If '*' is present, the
                                length of the slice must be one. Required.
                              items:
                                type: string
                              type: array
                            apiVersions:
                              description: APIVersions is the API versions the resources
                                belong to. '*' is all versions. If '*' is present,
                                the length of the slice must be one. Required.
                              items:
                                type: string
                              type: array
                            operations:
                              description: Operations is the operations the admission
                                hook cares about - CREATE, UPDATE, or * for all operations.
                                If '*' is present, the length of the slice must be
                                one. Required.
                              items:
                                type: string
                              type: array
                            resources:
                              description: "Resources is a list of resources this
                                rule applies to. \n For example: 'pods' means pods.
                                'pods/log' means the log subresource of pods. '*'
                                means all resources, but not subresources. 'pods/*'
                                means all subresources of pods. '*/scale' means all
                                scale subresources. '*/*' means all resources and
                                their subresources. \n If wildcard is present, the
                                validation rule will ensure resources do not overlap
                                with each other. \n Depending on the enclosing object,
                                subresources might not be allowed. Required."
                              items:
                                type: string
                              type: array
                            scope:
                              description: scope specifies the scope of this rule.
                                Valid values are "Cluster", "Namespaced", and "*"
                                "Cluster" means that only cluster-scoped resources
                                will match this rule. Namespace API objects are cluster-scoped.
                                "Namespaced" means that only namespaced resources
                                will match this rule. "*" means that there are no
                                scope restrictions. Subresources match the scope of
                                their parent resource. Default is "*".
                              type: string
                          type: object
                        type: array
                      sideEffects:
                        type: string
                      targetPort:
                        anyOf:
                        - type: integer
                        - type: string
                        x-kubernetes-int-or-string: true
                      timeoutSeconds:
                        format: int32
                        type: integer
                      type:
                        description: WebhookAdmissionType is the type of admission
                          webhooks supported by OLM
                        enum:
                        - ValidatingAdmissionWebhook
                        - MutatingAdmissionWebhook
                        - ConversionWebhook
                        type: string
                      webhookPath:
                        type: string
                    required:
                    - admissionReviewVersions
                    - generateName
                    - sideEffects
                    - type
                    type: object
                  type: array
              required:
              - displayName
              - install
              type: object
            status:
              description: ClusterServiceVersionStatus represents information about
                the status of a pod. Status may trail the actual state of a system.
              properties:
                certsLastUpdated:
                  description: Last time the owned APIService certs were updated
                  format: date-time
                  type: string
                certsRotateAt:
                  description: Time the owned APIService certs will rotate next
                  format: date-time
                  type: string
                conditions:
                  description: List of conditions, a history of state transitions
                  items:
                    description: Conditions appear in the status as a record of state
                      transitions on the ClusterServiceVersion
                    properties:
                      lastTransitionTime:
                        description: Last time the status transitioned from one status
                          to another.
                        format: date-time
                        type: string
                      lastUpdateTime:
                        description: Last time we updated the status
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          why the ClusterServiceVersion is in this condition.
                        type: string
                      phase:
                        description: Condition of the ClusterServiceVersion
                        type: string
                      reason:
                        description: A brief CamelCase message indicating details
                          about why the ClusterServiceVersion is in this state. e.g.
                          'RequirementsNotMet'
                        type: string
                    type: object
                  type: array
                lastTransitionTime:
                  description: Last time the status transitioned from one status to
                    another.
                  format: date-time
                  type: string
                lastUpdateTime:
                  description: Last time we updated the status
                  format: date-time
                  type: string
                message:
                  description: A human readable message indicating details about why
                    the ClusterServiceVersion is in this condition.
                  type: string
                phase:
                  description: Current condition of the ClusterServiceVersion
                  type: string
                reason:
                  description: A brief CamelCase message indicating details about
                    why the ClusterServiceVersion is in this state. e.g. 'RequirementsNotMet'
                  type: string
                requirementStatus:
                  description: The status of each requirement for this CSV
                  items:
                    properties:
                      dependents:
                        items:
                          description: DependentStatus is the status for a dependent
                            requirement (to prevent infinite nesting)
                          properties:
                            group:
                              type: string
                            kind:
                              type: string
                            message:
                              type: string
                            status:
                              description: StatusReason is a camelcased reason for
                                the status of a RequirementStatus or DependentStatus
                              type: string
                            uuid:
                              type: string
                            version:
                              type: string
                          required:
                          - group
                          - kind
                          - status
                          - version
                          type: object
                        type: array
                      group:
                        type: string
                      kind:
                        type: string
                      message:
                        type: string
                      name:
                        type: string
                      status:
                        description: StatusReason is a camelcased reason for the status
                          of a RequirementStatus or DependentStatus
                        type: string
                      uuid:
                        type: string
                      version:
                        type: string
                    required:
                    - group
                    - kind
                    - message
                    - name
                    - status
                    - version
                    type: object
                  type: array
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - olm
      kind: ClusterServiceVersion
      listKind: ClusterServiceVersionList
      plural: clusterserviceversions
      shortNames:
      - csv
      - csvs
      singular: clusterserviceversion
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:52Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:52Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"default","app.kubernetes.io/part-of":"tekton-pipelines","pipeline.tekton.dev/release":"v0.18.1","version":"v0.18.1"},"name":"clustertasks.tekton.dev"},"spec":{"conversion":{"strategy":"Webhook","webhook":{"clientConfig":{"service":{"name":"tekton-pipelines-webhook","namespace":"tekton-pipelines"}},"conversionReviewVersions":["v1beta1"]}},"group":"tekton.dev","names":{"categories":["tekton","tekton-pipelines"],"kind":"ClusterTask","plural":"clustertasks"},"preserveUnknownFields":false,"scope":"Cluster","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"type":"object","x-kubernetes-preserve-unknown-fields":true}},"served":true,"storage":false,"subresources":{"status":{}}},{"name":"v1beta1","schema":{"openAPIV3Schema":{"type":"object","x-kubernetes-preserve-unknown-fields":true}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
    creationTimestamp: "2020-12-01T17:28:10Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines
      pipeline.tekton.dev/release: v0.18.1
      version: v0.18.1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-12-01T17:28:10Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:pipeline.tekton.dev/release: {}
            f:version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
            f:webhook:
              .: {}
              f:clientConfig:
                .: {}
                f:service:
                  .: {}
                  f:name: {}
                  f:namespace: {}
                  f:port: {}
              f:conversionReviewVersions: {}
          f:group: {}
          f:names:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: oc
      operation: Update
      time: "2020-12-01T17:28:10Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:conversion:
            f:webhook:
              f:clientConfig:
                f:caBundle: {}
                f:service:
                  f:path: {}
      manager: webhook
      operation: Update
      time: "2020-12-01T17:28:19Z"
    name: clustertasks.tekton.dev
    resourceVersion: "5635426"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/clustertasks.tekton.dev
    uid: 71f2f1d4-59bb-4c9b-9c07-560c4747e076
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVTakNDQXpLZ0F3SUJBZ0lRQzJVdUlZK2lWem4zNlFCaFJJSENEREFOQmdrcWhraUc5dzBCQVFzRkFEQk8KTVJRd0VnWURWUVFLRXd0cmJtRjBhWFpsTG1SbGRqRTJNRFFHQTFVRUF4TXRkR1ZyZEc5dUxYQnBjR1ZzYVc1bApjeTEzWldKb2IyOXJMblJsYTNSdmJpMXdhWEJsYkdsdVpYTXVjM1pqTUI0WERUSXdNVEl3TVRFM01qZ3hPVm9YCkRUSXhNVEl3TVRFM01qZ3hPRm93VGpFVU1CSUdBMVVFQ2hNTGEyNWhkR2wyWlM1a1pYWXhOakEwQmdOVkJBTVQKTFhSbGEzUnZiaTF3YVhCbGJHbHVaWE10ZDJWaWFHOXZheTUwWld0MGIyNHRjR2x3Wld4cGJtVnpMbk4yWXpDQwpBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtlbDJTVXhOM2NGT1BnWUdVTExEdW1YCnQvL3RMWXhmY2h5ZWI3bGVvMmRWZWFRQUNUYXRoMFpnR0JQTFB1NlJ1WW8vTWdZUHUvaHJ6a3liRU9OcjhnLzYKRTJ6R0FhY2ZZcHlqaktzOWI3c2d3ME1CS2hwYmxpdnFHSHR2TVE0cGlUSjUwcUU1UUtiSVh0WkZzY3NlS1M2dQpJcE9lWW9oSER2V3Z5RDY0U01sVExsTHl6T0JZWTd3YlNYZER5clNUMjEvcmlFbndDaVlIcFZ1Q2VoY1RxdmNBCjFnUkxoSldGTFNZbGFUMGluQUNMbExFd2JLYmN0M0xPeU5lVW01SVF4Zm1XTlRYOUl4VnZoNXVYVG15clBLNy8KaEgwNDJyUXI0b21TbEMva1dTN3RzS0s2SzZHYlVsWUxhNW5pU09LQlkyQTAvNEtGUXJwcldTOVlSY2Y4ejkwQwpBd0VBQWFPQ0FTSXdnZ0VlTUE0R0ExVWREd0VCL3dRRUF3SUNoREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNECkFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVhaUJoczlmM2JwL0cKQ3dRYTJBdE0wRkJwRjlNd2did0dBMVVkRVFTQnREQ0JzWUlZZEdWcmRHOXVMWEJwY0dWc2FXNWxjeTEzWldKbwpiMjlyZ2lsMFpXdDBiMjR0Y0dsd1pXeHBibVZ6TFhkbFltaHZiMnN1ZEdWcmRHOXVMWEJwY0dWc2FXNWxjNEl0CmRHVnJkRzl1TFhCcGNHVnNhVzVsY3kxM1pXSm9iMjlyTG5SbGEzUnZiaTF3YVhCbGJHbHVaWE11YzNaamdqdDAKWld0MGIyNHRjR2x3Wld4cGJtVnpMWGRsWW1odmIyc3VkR1ZyZEc5dUxYQnBjR1ZzYVc1bGN5NXpkbU11WTJ4MQpjM1JsY2k1c2IyTmhiREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBTnZKNFh1M0V3Qm5FQ0xBYUZBVkVMRXRNClVoby9sQitLZzcveHF4OEdJeGNTY0VoVUJTYk1YM0xHaCtvT0p1ZmthenVRb2UxRDMvdDdrWVEyYStBY2graWQKTHgveEo5STdSeHJPMHRId2x2Y2RLaHRpalRxMVBhK3BXdkdKSlh1U0tQWnZaalVWL2Q0RnZSMVFYc2Y4UVRxcQptMGFsU2kzdUxEQ0puOXJwdURlWmNNVHAyVXRobFpWby9qUDFnbGRTclVyZkltKzNWaWlKbVBDdnY3NVJ1VklxCmZNcU56SXhHWkNQUjFGNnJKNUd3cno3ZmRUNFViYnU5eE8xUXk2ZE9KYzNhVXR4dWVsSEwxRGhic1k3aGNDYlgKRWV5d0svaEFwZktRV1VzaW1icXdnRVpvNkZBQml5ZFdHaWxVa3BncUwrY3pSQ1d4V1dlMXppYWdwY3dNVWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          service:
            name: tekton-pipelines-webhook
            namespace: tekton-pipelines
            path: /resource-conversion
            port: 443
        conversionReviewVersions:
        - v1beta1
    group: tekton.dev
    names:
      categories:
      - tekton
      - tekton-pipelines
      kind: ClusterTask
      listKind: ClusterTaskList
      plural: clustertasks
      singular: clustertask
    scope: Cluster
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: false
      subresources:
        status: {}
    - name: v1beta1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-pipelines
      kind: ClusterTask
      listKind: ClusterTaskList
      plural: clustertasks
      singular: clustertask
    conditions:
    - lastTransitionTime: "2020-12-01T17:28:10Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-12-01T17:28:10Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T12:58:29Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:additionalPrinterColumns: {}
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:channel:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:clusterID:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:desiredUpdate:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:force:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:image:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:version:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                    f:overrides:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:upstream:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:availableUpdates:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:nullable: {}
                      f:type: {}
                    f:conditions:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:desired:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:channels:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                        f:image:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:url:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:version:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                    f:history:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:observedGeneration:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                    f:versionHash:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:29Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:29Z"
    name: clusterversions.config.openshift.io
    resourceVersion: "270"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/clusterversions.config.openshift.io
    uid: e54ec7da-fea6-452b-8f70-8251b74dc669
  spec:
    conversion:
      strategy: None
    group: config.openshift.io
    names:
      kind: ClusterVersion
      listKind: ClusterVersionList
      plural: clusterversions
      singular: clusterversion
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.history[?(@.state=="Completed")].version
        name: Version
        type: string
      - jsonPath: .status.conditions[?(@.type=="Available")].status
        name: Available
        type: string
      - jsonPath: .status.conditions[?(@.type=="Progressing")].status
        name: Progressing
        type: string
      - jsonPath: .status.conditions[?(@.type=="Progressing")].lastTransitionTime
        name: Since
        type: date
      - jsonPath: .status.conditions[?(@.type=="Progressing")].message
        name: Status
        type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: ClusterVersion is the configuration for the ClusterVersionOperator.
            This is where parameters related to automatic updates can be set.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec is the desired state of the cluster version - the
                operator will work to ensure that the desired version is applied to
                the cluster.
              properties:
                channel:
                  description: channel is an identifier for explicitly requesting
                    that a non-default set of updates be applied to this cluster.
                    The default channel will be contain stable updates that are appropriate
                    for production clusters.
                  type: string
                clusterID:
                  description: clusterID uniquely identifies this cluster. This is
                    expected to be an RFC4122 UUID value (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    in hexadecimal values). This is a required field.
                  type: string
                desiredUpdate:
                  description: "desiredUpdate is an optional field that indicates
                    the desired value of the cluster version. Setting this value will
                    trigger an upgrade (if the current version does not match the
                    desired version). The set of recommended update values is listed
                    as part of available updates in status, and setting values outside
                    that range may cause the upgrade to fail. You may specify the
                    version field without setting image if an update exists with that
                    version in the availableUpdates or history. \n If an upgrade fails
                    the operator will halt and report status about the failing component.
                    Setting the desired update value back to the previous version
                    will cause a rollback to be attempted. Not all rollbacks will
                    succeed."
                  properties:
                    force:
                      description: "force allows an administrator to update to an
                        image that has failed verification, does not appear in the
                        availableUpdates list, or otherwise would be blocked by normal
                        protections on update. This option should only be used when
                        the authenticity of the provided image has been verified out
                        of band because the provided image will run with full administrative
                        access to the cluster. Do not use this flag with images that
                        comes from unknown or potentially malicious sources. \n This
                        flag does not override other forms of consistency checking
                        that are required before a new update is deployed."
                      type: boolean
                    image:
                      description: image is a container image location that contains
                        the update. When this field is part of spec, image is optional
                        if version is specified and the availableUpdates field contains
                        a matching version.
                      type: string
                    version:
                      description: version is a semantic versioning identifying the
                        update version. When this field is part of spec, version is
                        optional if image is specified.
                      type: string
                  type: object
                overrides:
                  description: overrides is list of overides for components that are
                    managed by cluster version operator. Marking a component unmanaged
                    will prevent the operator from creating or updating the object.
                  items:
                    description: ComponentOverride allows overriding cluster version
                      operator's behavior for a component.
                    properties:
                      group:
                        description: group identifies the API group that the kind
                          is in.
                        type: string
                      kind:
                        description: kind indentifies which object to override.
                        type: string
                      name:
                        description: name is the component's name.
                        type: string
                      namespace:
                        description: namespace is the component's namespace. If the
                          resource is cluster scoped, the namespace should be empty.
                        type: string
                      unmanaged:
                        description: 'unmanaged controls if cluster version operator
                          should stop managing the resources in this cluster. Default:
                          false'
                        type: boolean
                    required:
                    - group
                    - kind
                    - name
                    - namespace
                    - unmanaged
                    type: object
                  type: array
                upstream:
                  description: upstream may be used to specify the preferred update
                    server. By default it will use the appropriate update server for
                    the cluster and region.
                  type: string
              required:
              - clusterID
              type: object
            status:
              description: status contains information about the available updates
                and any in-progress updates.
              properties:
                availableUpdates:
                  description: availableUpdates contains the list of updates that
                    are appropriate for this cluster. This list may be empty if no
                    updates are recommended, if the update service is unavailable,
                    or if an invalid channel has been specified.
                  items:
                    description: Release represents an OpenShift release image and
                      associated metadata.
                    properties:
                      channels:
                        description: channels is the set of Cincinnati channels to
                          which the release currently belongs.
                        items:
                          type: string
                        type: array
                      image:
                        description: image is a container image location that contains
                          the update. When this field is part of spec, image is optional
                          if version is specified and the availableUpdates field contains
                          a matching version.
                        type: string
                      url:
                        description: url contains information about this release.
                          This URL is set by the 'url' metadata property on a release
                          or the metadata returned by the update API and should be
                          displayed as a link in user interfaces. The URL field may
                          not be set for test or nightly releases.
                        type: string
                      version:
                        description: version is a semantic versioning identifying
                          the update version. When this field is part of spec, version
                          is optional if image is specified.
                        type: string
                    type: object
                  nullable: true
                  type: array
                conditions:
                  description: conditions provides information about the cluster version.
                    The condition "Available" is set to true if the desiredUpdate
                    has been reached. The condition "Progressing" is set to true if
                    an update is being applied. The condition "Degraded" is set to
                    true if an update is currently blocked by a temporary or permanent
                    error. Conditions are only valid for the current desiredUpdate
                    when metadata.generation is equal to status.generation.
                  items:
                    description: ClusterOperatorStatusCondition represents the state
                      of the operator's managed and monitored components.
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the time of the last update
                          to the current status property.
                        format: date-time
                        type: string
                      message:
                        description: message provides additional information about
                          the current condition. This is only to be consumed by humans.
                        type: string
                      reason:
                        description: reason is the CamelCase reason for the condition's
                          current status.
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: type specifies the aspect reported by this condition.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                desired:
                  description: desired is the version that the cluster is reconciling
                    towards. If the cluster is not yet fully initialized desired will
                    be set with the information available, which may be an image or
                    a tag.
                  properties:
                    channels:
                      description: channels is the set of Cincinnati channels to which
                        the release currently belongs.
                      items:
                        type: string
                      type: array
                    image:
                      description: image is a container image location that contains
                        the update. When this field is part of spec, image is optional
                        if version is specified and the availableUpdates field contains
                        a matching version.
                      type: string
                    url:
                      description: url contains information about this release. This
                        URL is set by the 'url' metadata property on a release or
                        the metadata returned by the update API and should be displayed
                        as a link in user interfaces. The URL field may not be set
                        for test or nightly releases.
                      type: string
                    version:
                      description: version is a semantic versioning identifying the
                        update version. When this field is part of spec, version is
                        optional if image is specified.
                      type: string
                  type: object
                history:
                  description: history contains a list of the most recent versions
                    applied to the cluster. This value may be empty during cluster
                    startup, and then will be updated when a new update is being applied.
                    The newest update is first in the list and it is ordered by recency.
                    Updates in the history have state Completed if the rollout completed
                    - if an update was failing or halfway applied the state will be
                    Partial. Only a limited amount of update history is preserved.
                  items:
                    description: UpdateHistory is a single attempted update to the
                      cluster.
                    properties:
                      completionTime:
                        description: completionTime, if set, is when the update was
                          fully applied. The update that is currently being applied
                          will have a null completion time. Completion time will always
                          be set for entries that are not the current update (usually
                          to the started time of the next update).
                        format: date-time
                        nullable: true
                        type: string
                      image:
                        description: image is a container image location that contains
                          the update. This value is always populated.
                        type: string
                      startedTime:
                        description: startedTime is the time at which the update was
                          started.
                        format: date-time
                        type: string
                      state:
                        description: state reflects whether the update was fully applied.
                          The Partial state indicates the update is not fully applied,
                          while the Completed state indicates the update was successfully
                          rolled out at least once (all parts of the update successfully
                          applied).
                        type: string
                      verified:
                        description: verified indicates whether the provided update
                          was properly verified before it was installed. If this is
                          false the cluster may not be trusted.
                        type: boolean
                      version:
                        description: version is a semantic versioning identifying
                          the update version. If the requested image does not define
                          a version, or if a failure occurs retrieving the image,
                          this value may be empty.
                        type: string
                    required:
                    - completionTime
                    - image
                    - startedTime
                    - state
                    - verified
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration reports which version of the spec
                    is being synced. If this value is not equal to metadata.generation,
                    then the desired and conditions fields may represent a previous
                    version.
                  format: int64
                  type: integer
                versionHash:
                  description: versionHash is a fingerprint of the content that the
                    cluster will be updated with. It is used by the operator to avoid
                    unnecessary work and is for internal use only.
                  type: string
              required:
              - availableUpdates
              - desired
              - observedGeneration
              - versionHash
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ClusterVersion
      listKind: ClusterVersionList
      plural: clusterversions
      singular: clusterversion
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:29Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:29Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"default","app.kubernetes.io/part-of":"tekton-pipelines","pipeline.tekton.dev/release":"v0.18.1","version":"v0.18.1"},"name":"conditions.tekton.dev"},"spec":{"group":"tekton.dev","names":{"categories":["tekton","tekton-pipelines"],"kind":"Condition","plural":"conditions"},"scope":"Namespaced","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"type":"object","x-kubernetes-preserve-unknown-fields":true}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
    creationTimestamp: "2020-12-01T17:28:10Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines
      pipeline.tekton.dev/release: v0.18.1
      version: v0.18.1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-12-01T17:28:10Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:pipeline.tekton.dev/release: {}
            f:version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: oc
      operation: Update
      time: "2020-12-01T17:28:10Z"
    name: conditions.tekton.dev
    resourceVersion: "5635242"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/conditions.tekton.dev
    uid: 670a7138-0f58-45f6-9955-ecba1ce024f5
  spec:
    conversion:
      strategy: None
    group: tekton.dev
    names:
      categories:
      - tekton
      - tekton-pipelines
      kind: Condition
      listKind: ConditionList
      plural: conditions
      singular: condition
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-pipelines
      kind: Condition
      listKind: ConditionList
      plural: conditions
      singular: condition
    conditions:
    - lastTransitionTime: "2020-12-01T17:28:10Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-12-01T17:28:10Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T12:58:48Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:48Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:48Z"
    name: configs.imageregistry.operator.openshift.io
    resourceVersion: "703"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/configs.imageregistry.operator.openshift.io
    uid: b5f6bd02-9379-4259-b3cd-20cd3b11baf1
  spec:
    conversion:
      strategy: None
    group: imageregistry.operator.openshift.io
    names:
      kind: Config
      listKind: ConfigList
      plural: configs
      singular: config
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Config is the configuration object for a registry instance
            managed by the registry operator
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ImageRegistrySpec defines the specs for the running registry.
              properties:
                affinity:
                  description: affinity is a group of node affinity scheduling rules
                    for the image registry pod(s).
                  properties:
                    nodeAffinity:
                      description: Describes node affinity scheduling rules for the
                        pod.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            matches the corresponding matchExpressions; the node(s)
                            with the highest sum are the most preferred.
                          items:
                            description: An empty preferred scheduling term matches
                              all objects with implicit weight 0 (i.e. it's a no-op).
                              A null preferred scheduling term matches no objects
                              (i.e. is also a no-op).
                            properties:
                              preference:
                                description: A node selector term, associated with
                                  the corresponding weight.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              weight:
                                description: Weight associated with matching the corresponding
                                  nodeSelectorTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - preference
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by this
                            field are not met at scheduling time, the pod will not
                            be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to an update), the system
                            may or may not try to eventually evict the pod from its
                            node.
                          properties:
                            nodeSelectorTerms:
                              description: Required. A list of node selector terms.
                                The terms are ORed.
                              items:
                                description: A null or empty node selector term matches
                                  no objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a subset
                                  of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              type: array
                          required:
                          - nodeSelectorTerms
                          type: object
                      type: object
                    podAffinity:
                      description: Describes pod affinity scheduling rules (e.g. co-locate
                        this pod in the same node, zone, etc. as some other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            has pods which matches the corresponding podAffinityTerm;
                            the node(s) with the highest sum are the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Required. A pod affinity term, associated
                                  with the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - podAffinityTerm
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by this
                            field are not met at scheduling time, the pod will not
                            be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to a pod label update),
                            the system may or may not try to eventually evict the
                            pod from its node. When there are multiple elements, the
                            lists of nodes corresponding to each podAffinityTerm are
                            intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label query over a set of resources,
                                  in this case pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      description: Describes pod anti-affinity scheduling rules (e.g.
                        avoid putting this pod in the same node, zone, etc. as some
                        other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the anti-affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling anti-affinity
                            expressions, etc.), compute a sum by iterating through
                            the elements of this field and adding "weight" to the
                            sum if the node has pods which matches the corresponding
                            podAffinityTerm; the node(s) with the highest sum are
                            the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Required. A pod affinity term, associated
                                  with the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - podAffinityTerm
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the anti-affinity requirements specified
                            by this field are not met at scheduling time, the pod
                            will not be scheduled onto the node. If the anti-affinity
                            requirements specified by this field cease to be met at
                            some point during pod execution (e.g. due to a pod label
                            update), the system may or may not try to eventually evict
                            the pod from its node. When there are multiple elements,
                            the lists of nodes corresponding to each podAffinityTerm
                            are intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label query over a set of resources,
                                  in this case pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                  type: object
                defaultRoute:
                  description: defaultRoute indicates whether an external facing route
                    for the registry should be created using the default generated
                    hostname.
                  type: boolean
                disableRedirect:
                  description: disableRedirect controls whether to route all data
                    through the Registry, rather than redirecting to the backend.
                  type: boolean
                httpSecret:
                  description: httpSecret is the value needed by the registry to secure
                    uploads, generated by default.
                  type: string
                logLevel:
                  default: Normal
                  description: "logLevel is an intent based logging for an overall
                    component.  It does not give fine grained control, but it is a
                    simple way to manage coarse grained logging choices that operators
                    have to interpret for their operands. \n Valid values are: \"Normal\",
                    \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                logging:
                  description: logging is deprecated, use logLevel instead.
                  format: int64
                  type: integer
                managementState:
                  description: managementState indicates whether and how the operator
                    should manage the component
                  pattern: ^(Managed|Unmanaged|Force|Removed)$
                  type: string
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: nodeSelector defines the node selection constraints
                    for the registry pod.
                  type: object
                observedConfig:
                  description: observedConfig holds a sparse config that controller
                    has observed from the cluster state.  It exists in spec because
                    it is an input to the level for the operator
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                operatorLogLevel:
                  default: Normal
                  description: "operatorLogLevel is an intent based logging for the
                    operator itself.  It does not give fine grained control, but it
                    is a simple way to manage coarse grained logging choices that
                    operators have to interpret for themselves. \n Valid values are:
                    \"Normal\", \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                proxy:
                  description: proxy defines the proxy to be used when calling master
                    api, upstream registries, etc.
                  properties:
                    http:
                      description: http defines the proxy to be used by the image
                        registry when accessing HTTP endpoints.
                      type: string
                    https:
                      description: https defines the proxy to be used by the image
                        registry when accessing HTTPS endpoints.
                      type: string
                    noProxy:
                      description: noProxy defines a comma-separated list of host
                        names that shouldn't go through any proxy.
                      type: string
                  type: object
                readOnly:
                  description: readOnly indicates whether the registry instance should
                    reject attempts to push new images or delete existing ones.
                  type: boolean
                replicas:
                  description: replicas determines the number of registry instances
                    to run.
                  format: int32
                  type: integer
                requests:
                  description: requests controls how many parallel requests a given
                    registry instance will handle before queuing additional requests.
                  properties:
                    read:
                      description: read defines limits for image registry's reads.
                      properties:
                        maxInQueue:
                          description: maxInQueue sets the maximum queued api requests
                            to the registry.
                          type: integer
                        maxRunning:
                          description: maxRunning sets the maximum in flight api requests
                            to the registry.
                          type: integer
                        maxWaitInQueue:
                          description: maxWaitInQueue sets the maximum time a request
                            can wait in the queue before being rejected.
                          format: duration
                          type: string
                      type: object
                    write:
                      description: write defines limits for image registry's writes.
                      properties:
                        maxInQueue:
                          description: maxInQueue sets the maximum queued api requests
                            to the registry.
                          type: integer
                        maxRunning:
                          description: maxRunning sets the maximum in flight api requests
                            to the registry.
                          type: integer
                        maxWaitInQueue:
                          description: maxWaitInQueue sets the maximum time a request
                            can wait in the queue before being rejected.
                          format: duration
                          type: string
                      type: object
                  type: object
                resources:
                  description: resources defines the resource requests+limits for
                    the registry pod.
                  properties:
                    limits:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                rolloutStrategy:
                  description: rolloutStrategy defines rollout strategy for the image
                    registry deployment.
                  pattern: ^(RollingUpdate|Recreate)$
                  type: string
                routes:
                  description: routes defines additional external facing routes which
                    should be created for the registry.
                  items:
                    description: ImageRegistryConfigRoute holds information on external
                      route access to image registry.
                    properties:
                      hostname:
                        description: hostname for the route.
                        type: string
                      name:
                        description: name of the route to be created.
                        type: string
                      secretName:
                        description: secretName points to secret containing the certificates
                          to be used by the route.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                storage:
                  description: storage details for configuring registry storage, e.g.
                    S3 bucket coordinates.
                  properties:
                    azure:
                      description: azure represents configuration that uses Azure
                        Blob Storage.
                      properties:
                        accountName:
                          description: accountName defines the account to be used
                            by the registry.
                          type: string
                        cloudName:
                          description: cloudName is the name of the Azure cloud environment
                            to be used by the registry. If empty, the operator will
                            set it based on the infrastructure object.
                          type: string
                        container:
                          description: container defines Azure's container to be used
                            by registry.
                          maxLength: 63
                          minLength: 3
                          pattern: ^[0-9a-z]+(-[0-9a-z]+)*$
                          type: string
                      type: object
                    emptyDir:
                      description: 'emptyDir represents ephemeral storage on the pod''s
                        host node. WARNING: this storage cannot be used with more
                        than 1 replica and is not suitable for production use. When
                        the pod is removed from a node for any reason, the data in
                        the emptyDir is deleted forever.'
                      type: object
                    gcs:
                      description: gcs represents configuration that uses Google Cloud
                        Storage.
                      properties:
                        bucket:
                          description: bucket is the bucket name in which you want
                            to store the registry's data. Optional, will be generated
                            if not provided.
                          type: string
                        keyID:
                          description: keyID is the KMS key ID to use for encryption.
                            Optional, buckets are encrypted by default on GCP. This
                            allows for the use of a custom encryption key.
                          type: string
                        projectID:
                          description: projectID is the Project ID of the GCP project
                            that this bucket should be associated with.
                          type: string
                        region:
                          description: region is the GCS location in which your bucket
                            exists. Optional, will be set based on the installed GCS
                            Region.
                          type: string
                      type: object
                    managementState:
                      description: managementState indicates if the operator manages
                        the underlying storage unit. If Managed the operator will
                        remove the storage when this operator gets Removed.
                      pattern: ^(Managed|Unmanaged)$
                      type: string
                    pvc:
                      description: pvc represents configuration that uses a PersistentVolumeClaim.
                      properties:
                        claim:
                          description: claim defines the Persisent Volume Claim's
                            name to be used.
                          type: string
                      type: object
                    s3:
                      description: s3 represents configuration that uses Amazon Simple
                        Storage Service.
                      properties:
                        bucket:
                          description: bucket is the bucket name in which you want
                            to store the registry's data. Optional, will be generated
                            if not provided.
                          type: string
                        cloudFront:
                          description: cloudFront configures Amazon Cloudfront as
                            the storage middleware in a registry.
                          properties:
                            baseURL:
                              description: baseURL contains the SCHEME://HOST[/PATH]
                                at which Cloudfront is served.
                              type: string
                            duration:
                              description: duration is the duration of the Cloudfront
                                session.
                              format: duration
                              type: string
                            keypairID:
                              description: keypairID is key pair ID provided by AWS.
                              type: string
                            privateKey:
                              description: privateKey points to secret containing
                                the private key, provided by AWS.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          required:
                          - baseURL
                          - keypairID
                          - privateKey
                          type: object
                        encrypt:
                          description: encrypt specifies whether the registry stores
                            the image in encrypted format or not. Optional, defaults
                            to false.
                          type: boolean
                        keyID:
                          description: keyID is the KMS key ID to use for encryption.
                            Optional, Encrypt must be true, or this parameter is ignored.
                          type: string
                        region:
                          description: region is the AWS region in which your bucket
                            exists. Optional, will be set based on the installed AWS
                            Region.
                          type: string
                        regionEndpoint:
                          description: regionEndpoint is the endpoint for S3 compatible
                            storage services. Optional, defaults based on the Region
                            that is provided.
                          type: string
                        virtualHostedStyle:
                          description: virtualHostedStyle enables using S3 virtual
                            hosted style bucket paths with a custom RegionEndpoint
                            Optional, defaults to false.
                          type: boolean
                      type: object
                    swift:
                      description: swift represents configuration that uses OpenStack
                        Object Storage.
                      properties:
                        authURL:
                          description: authURL defines the URL for obtaining an authentication
                            token.
                          type: string
                        authVersion:
                          description: authVersion specifies the OpenStack Auth's
                            version.
                          type: string
                        container:
                          description: container defines the name of Swift container
                            where to store the registry's data.
                          type: string
                        domain:
                          description: domain specifies Openstack's domain name for
                            Identity v3 API.
                          type: string
                        domainID:
                          description: domainID specifies Openstack's domain id for
                            Identity v3 API.
                          type: string
                        regionName:
                          description: regionName defines Openstack's region in which
                            container exists.
                          type: string
                        tenant:
                          description: tenant defines Openstack tenant name to be
                            used by registry.
                          type: string
                        tenantID:
                          description: tenant defines Openstack tenant id to be used
                            by registry.
                          type: string
                      type: object
                  type: object
                tolerations:
                  description: tolerations defines the tolerations for the registry
                    pod.
                  items:
                    description: The pod this Toleration is attached to tolerates
                      any taint that matches the triple <key,value,effect> using the
                      matching operator <operator>.
                    properties:
                      effect:
                        description: Effect indicates the taint effect to match. Empty
                          means match all taint effects. When specified, allowed values
                          are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Key is the taint key that the toleration applies
                          to. Empty means match all taint keys. If the key is empty,
                          operator must be Exists; this combination means to match
                          all values and all keys.
                        type: string
                      operator:
                        description: Operator represents a key's relationship to the
                          value. Valid operators are Exists and Equal. Defaults to
                          Equal. Exists is equivalent to wildcard for value, so that
                          a pod can tolerate all taints of a particular category.
                        type: string
                      tolerationSeconds:
                        description: TolerationSeconds represents the period of time
                          the toleration (which must be of effect NoExecute, otherwise
                          this field is ignored) tolerates the taint. By default,
                          it is not set, which means tolerate the taint forever (do
                          not evict). Zero and negative values will be treated as
                          0 (evict immediately) by the system.
                        format: int64
                        type: integer
                      value:
                        description: Value is the taint value the toleration matches
                          to. If the operator is Exists, the value should be empty,
                          otherwise just a regular string.
                        type: string
                    type: object
                  type: array
                unsupportedConfigOverrides:
                  description: 'unsupportedConfigOverrides holds a sparse config that
                    will override any previously set options.  It only needs to be
                    the fields to override it will end up overlaying in the following
                    order: 1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides'
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              required:
              - managementState
              - replicas
              type: object
            status:
              description: ImageRegistryStatus reports image registry operational
                status.
              properties:
                conditions:
                  description: conditions is a list of conditions and their status
                  items:
                    description: OperatorCondition is just the standard condition
                      fields.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
                generations:
                  description: generations are used to determine when an item needs
                    to be reconciled or has changed in a way that needs a reaction.
                  items:
                    description: GenerationStatus keeps track of the generation for
                      a given resource so that decisions about forced updates can
                      be made.
                    properties:
                      group:
                        description: group is the group of the thing you're tracking
                        type: string
                      hash:
                        description: hash is an optional field set for resources without
                          generation that are content sensitive like secrets and configmaps
                        type: string
                      lastGeneration:
                        description: lastGeneration is the last generation of the
                          workload controller involved
                        format: int64
                        type: integer
                      name:
                        description: name is the name of the thing you're tracking
                        type: string
                      namespace:
                        description: namespace is where the thing you're tracking
                          is
                        type: string
                      resource:
                        description: resource is the resource type of the thing you're
                          tracking
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration is the last generation change you've
                    dealt with
                  format: int64
                  type: integer
                readyReplicas:
                  description: readyReplicas indicates how many replicas are ready
                    and at the desired state
                  format: int32
                  type: integer
                storage:
                  description: storage indicates the current applied storage configuration
                    of the registry.
                  properties:
                    azure:
                      description: azure represents configuration that uses Azure
                        Blob Storage.
                      properties:
                        accountName:
                          description: accountName defines the account to be used
                            by the registry.
                          type: string
                        cloudName:
                          description: cloudName is the name of the Azure cloud environment
                            to be used by the registry. If empty, the operator will
                            set it based on the infrastructure object.
                          type: string
                        container:
                          description: container defines Azure's container to be used
                            by registry.
                          maxLength: 63
                          minLength: 3
                          pattern: ^[0-9a-z]+(-[0-9a-z]+)*$
                          type: string
                      type: object
                    emptyDir:
                      description: 'emptyDir represents ephemeral storage on the pod''s
                        host node. WARNING: this storage cannot be used with more
                        than 1 replica and is not suitable for production use. When
                        the pod is removed from a node for any reason, the data in
                        the emptyDir is deleted forever.'
                      type: object
                    gcs:
                      description: gcs represents configuration that uses Google Cloud
                        Storage.
                      properties:
                        bucket:
                          description: bucket is the bucket name in which you want
                            to store the registry's data. Optional, will be generated
                            if not provided.
                          type: string
                        keyID:
                          description: keyID is the KMS key ID to use for encryption.
                            Optional, buckets are encrypted by default on GCP. This
                            allows for the use of a custom encryption key.
                          type: string
                        projectID:
                          description: projectID is the Project ID of the GCP project
                            that this bucket should be associated with.
                          type: string
                        region:
                          description: region is the GCS location in which your bucket
                            exists. Optional, will be set based on the installed GCS
                            Region.
                          type: string
                      type: object
                    managementState:
                      description: managementState indicates if the operator manages
                        the underlying storage unit. If Managed the operator will
                        remove the storage when this operator gets Removed.
                      pattern: ^(Managed|Unmanaged)$
                      type: string
                    pvc:
                      description: pvc represents configuration that uses a PersistentVolumeClaim.
                      properties:
                        claim:
                          description: claim defines the Persisent Volume Claim's
                            name to be used.
                          type: string
                      type: object
                    s3:
                      description: s3 represents configuration that uses Amazon Simple
                        Storage Service.
                      properties:
                        bucket:
                          description: bucket is the bucket name in which you want
                            to store the registry's data. Optional, will be generated
                            if not provided.
                          type: string
                        cloudFront:
                          description: cloudFront configures Amazon Cloudfront as
                            the storage middleware in a registry.
                          properties:
                            baseURL:
                              description: baseURL contains the SCHEME://HOST[/PATH]
                                at which Cloudfront is served.
                              type: string
                            duration:
                              description: duration is the duration of the Cloudfront
                                session.
                              format: duration
                              type: string
                            keypairID:
                              description: keypairID is key pair ID provided by AWS.
                              type: string
                            privateKey:
                              description: privateKey points to secret containing
                                the private key, provided by AWS.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          required:
                          - baseURL
                          - keypairID
                          - privateKey
                          type: object
                        encrypt:
                          description: encrypt specifies whether the registry stores
                            the image in encrypted format or not. Optional, defaults
                            to false.
                          type: boolean
                        keyID:
                          description: keyID is the KMS key ID to use for encryption.
                            Optional, Encrypt must be true, or this parameter is ignored.
                          type: string
                        region:
                          description: region is the AWS region in which your bucket
                            exists. Optional, will be set based on the installed AWS
                            Region.
                          type: string
                        regionEndpoint:
                          description: regionEndpoint is the endpoint for S3 compatible
                            storage services. Optional, defaults based on the Region
                            that is provided.
                          type: string
                        virtualHostedStyle:
                          description: virtualHostedStyle enables using S3 virtual
                            hosted style bucket paths with a custom RegionEndpoint
                            Optional, defaults to false.
                          type: boolean
                      type: object
                    swift:
                      description: swift represents configuration that uses OpenStack
                        Object Storage.
                      properties:
                        authURL:
                          description: authURL defines the URL for obtaining an authentication
                            token.
                          type: string
                        authVersion:
                          description: authVersion specifies the OpenStack Auth's
                            version.
                          type: string
                        container:
                          description: container defines the name of Swift container
                            where to store the registry's data.
                          type: string
                        domain:
                          description: domain specifies Openstack's domain name for
                            Identity v3 API.
                          type: string
                        domainID:
                          description: domainID specifies Openstack's domain id for
                            Identity v3 API.
                          type: string
                        regionName:
                          description: regionName defines Openstack's region in which
                            container exists.
                          type: string
                        tenant:
                          description: tenant defines Openstack tenant name to be
                            used by registry.
                          type: string
                        tenantID:
                          description: tenant defines Openstack tenant id to be used
                            by registry.
                          type: string
                      type: object
                  type: object
                storageManaged:
                  description: storageManaged is deprecated, please refer to Storage.managementState
                  type: boolean
                version:
                  description: version is the level this availability applies to
                  type: string
              required:
              - storage
              - storageManaged
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Config
      listKind: ConfigList
      plural: configs
      singular: config
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:48Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:48Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:52Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:52Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:52Z"
    name: configs.operator.openshift.io
    resourceVersion: "873"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/configs.operator.openshift.io
    uid: c8bb5c08-fedd-4b16-a8ad-0be260bd6f6d
  spec:
    conversion:
      strategy: None
    group: operator.openshift.io
    names:
      categories:
      - coreoperators
      kind: Config
      listKind: ConfigList
      plural: configs
      singular: config
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Config provides information to configure the config operator.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec is the specification of the desired behavior of the
                Config Operator.
              properties:
                logLevel:
                  default: Normal
                  description: "logLevel is an intent based logging for an overall
                    component.  It does not give fine grained control, but it is a
                    simple way to manage coarse grained logging choices that operators
                    have to interpret for their operands. \n Valid values are: \"Normal\",
                    \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                managementState:
                  description: managementState indicates whether and how the operator
                    should manage the component
                  pattern: ^(Managed|Unmanaged|Force|Removed)$
                  type: string
                observedConfig:
                  description: observedConfig holds a sparse config that controller
                    has observed from the cluster state.  It exists in spec because
                    it is an input to the level for the operator
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                operatorLogLevel:
                  default: Normal
                  description: "operatorLogLevel is an intent based logging for the
                    operator itself.  It does not give fine grained control, but it
                    is a simple way to manage coarse grained logging choices that
                    operators have to interpret for themselves. \n Valid values are:
                    \"Normal\", \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                unsupportedConfigOverrides:
                  description: 'unsupportedConfigOverrides holds a sparse config that
                    will override any previously set options.  It only needs to be
                    the fields to override it will end up overlaying in the following
                    order: 1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides'
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              type: object
            status:
              description: status defines the observed status of the Config Operator.
              properties:
                conditions:
                  description: conditions is a list of conditions and their status
                  items:
                    description: OperatorCondition is just the standard condition
                      fields.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
                generations:
                  description: generations are used to determine when an item needs
                    to be reconciled or has changed in a way that needs a reaction.
                  items:
                    description: GenerationStatus keeps track of the generation for
                      a given resource so that decisions about forced updates can
                      be made.
                    properties:
                      group:
                        description: group is the group of the thing you're tracking
                        type: string
                      hash:
                        description: hash is an optional field set for resources without
                          generation that are content sensitive like secrets and configmaps
                        type: string
                      lastGeneration:
                        description: lastGeneration is the last generation of the
                          workload controller involved
                        format: int64
                        type: integer
                      name:
                        description: name is the name of the thing you're tracking
                        type: string
                      namespace:
                        description: namespace is where the thing you're tracking
                          is
                        type: string
                      resource:
                        description: resource is the resource type of the thing you're
                          tracking
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration is the last generation change you've
                    dealt with
                  format: int64
                  type: integer
                readyReplicas:
                  description: readyReplicas indicates how many replicas are ready
                    and at the desired state
                  format: int32
                  type: integer
                version:
                  description: version is the level this availability applies to
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - coreoperators
      kind: Config
      listKind: ConfigList
      plural: configs
      singular: config
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:52Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:52Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      description: Extension for configuring openshif samples operator.
      displayName: ConfigsSamples
    creationTimestamp: "2020-11-18T12:58:48Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:description: {}
            f:displayName: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:architectures:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:managementState:
                      .: {}
                      f:description: {}
                      f:pattern: {}
                      f:type: {}
                    f:samplesRegistry:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:skippedImagestreams:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:skippedTemplates:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:architectures:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:conditions:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:managementState:
                      .: {}
                      f:description: {}
                      f:pattern: {}
                      f:type: {}
                    f:samplesRegistry:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:skippedImagestreams:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:skippedTemplates:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:version:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:48Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:49Z"
    name: configs.samples.operator.openshift.io
    resourceVersion: "714"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/configs.samples.operator.openshift.io
    uid: 72ef0238-7109-4694-b6c5-aa1c6429a380
  spec:
    conversion:
      strategy: None
    group: samples.operator.openshift.io
    names:
      kind: Config
      listKind: ConfigList
      plural: configs
      singular: config
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Config contains the configuration and detailed condition status
            for the Samples Operator.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ConfigSpec contains the desired configuration and state
                for the Samples Operator, controlling various behavior around the
                imagestreams and templates it creates/updates in the openshift namespace.
              properties:
                architectures:
                  description: architectures determine which hardware architecture(s)
                    to install, where x86_64, ppc64le, and s390x are the only supported
                    choices currently.
                  items:
                    type: string
                  type: array
                managementState:
                  description: managementState is top level on/off type of switch
                    for all operators. When "Managed", this operator processes config
                    and manipulates the samples accordingly. When "Unmanaged", this
                    operator ignores any updates to the resources it watches. When
                    "Removed", it reacts that same wasy as it does if the Config object
                    is deleted, meaning any ImageStreams or Templates it manages (i.e.
                    it honors the skipped lists) and the registry secret are deleted,
                    along with the ConfigMap in the operator's namespace that represents
                    the last config used to manipulate the samples,
                  pattern: ^(Managed|Unmanaged|Force|Removed)$
                  type: string
                samplesRegistry:
                  description: samplesRegistry allows for the specification of which
                    registry is accessed by the ImageStreams for their image content.  Defaults
                    on the content in https://github.com/openshift/library that are
                    pulled into this github repository, but based on our pulling only
                    ocp content it typically defaults to registry.redhat.io.
                  type: string
                skippedImagestreams:
                  description: skippedImagestreams specifies names of image streams
                    that should NOT be created/updated.  Admins can use this to allow
                    them to delete content they don’t want.  They will still have
                    to manually delete the content but the operator will not recreate(or
                    update) anything listed here.
                  items:
                    type: string
                  type: array
                skippedTemplates:
                  description: skippedTemplates specifies names of templates that
                    should NOT be created/updated.  Admins can use this to allow them
                    to delete content they don’t want.  They will still have to manually
                    delete the content but the operator will not recreate(or update)
                    anything listed here.
                  items:
                    type: string
                  type: array
              type: object
            status:
              description: ConfigStatus contains the actual configuration in effect,
                as well as various details that describe the state of the Samples
                Operator.
              properties:
                architectures:
                  description: architectures determine which hardware architecture(s)
                    to install, where x86_64 and ppc64le are the supported choices.
                  items:
                    type: string
                  type: array
                conditions:
                  description: conditions represents the available maintenance status
                    of the sample imagestreams and templates.
                  items:
                    description: ConfigCondition captures various conditions of the
                      Config as entries are processed.
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another.
                        format: date-time
                        type: string
                      lastUpdateTime:
                        description: lastUpdateTime is the last time this condition
                          was updated.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition.
                        type: string
                      reason:
                        description: reason is what caused the condition's last transition.
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: type of condition.
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                managementState:
                  description: managementState reflects the current operational status
                    of the on/off switch for the operator.  This operator compares
                    the ManagementState as part of determining that we are turning
                    the operator back on (i.e. "Managed") when it was previously "Unmanaged".
                  pattern: ^(Managed|Unmanaged|Force|Removed)$
                  type: string
                samplesRegistry:
                  description: samplesRegistry allows for the specification of which
                    registry is accessed by the ImageStreams for their image content.  Defaults
                    on the content in https://github.com/openshift/library that are
                    pulled into this github repository, but based on our pulling only
                    ocp content it typically defaults to registry.redhat.io.
                  type: string
                skippedImagestreams:
                  description: skippedImagestreams specifies names of image streams
                    that should NOT be created/updated.  Admins can use this to allow
                    them to delete content they don’t want.  They will still have
                    to manually delete the content but the operator will not recreate(or
                    update) anything listed here.
                  items:
                    type: string
                  type: array
                skippedTemplates:
                  description: skippedTemplates specifies names of templates that
                    should NOT be created/updated.  Admins can use this to allow them
                    to delete content they don’t want.  They will still have to manually
                    delete the content but the operator will not recreate(or update)
                    anything listed here.
                  items:
                    type: string
                  type: array
                version:
                  description: version is the value of the operator's payload based
                    version indicator when it was last successfully processed
                  type: string
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Config
      listKind: ConfigList
      plural: configs
      singular: config
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:48Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:49Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      description: Extension for configuring openshift web console command line interface
        (CLI) downloads.
      displayName: ConsoleCLIDownload
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:48Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:description: {}
            f:displayName: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:additionalPrinterColumns: {}
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:description:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:displayName:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:links:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:48Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:48Z"
    name: consoleclidownloads.console.openshift.io
    resourceVersion: "694"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/consoleclidownloads.console.openshift.io
    uid: f99c7c87-6f45-4a56-b26a-2483d6ea39ed
  spec:
    conversion:
      strategy: None
    group: console.openshift.io
    names:
      kind: ConsoleCLIDownload
      listKind: ConsoleCLIDownloadList
      plural: consoleclidownloads
      singular: consoleclidownload
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.displayName
        name: Display name
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: ConsoleCLIDownload is an extension for configuring openshift
            web console command line interface (CLI) downloads.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ConsoleCLIDownloadSpec is the desired cli download configuration.
              properties:
                description:
                  description: description is the description of the CLI download
                    (can include markdown).
                  type: string
                displayName:
                  description: displayName is the display name of the CLI download.
                  type: string
                links:
                  description: links is a list of objects that provide CLI download
                    link details.
                  items:
                    properties:
                      href:
                        description: href is the absolute secure URL for the link
                          (must use https)
                        pattern: ^https://
                        type: string
                      text:
                        description: text is the display text for the link
                        type: string
                    required:
                    - href
                    type: object
                  type: array
              required:
              - description
              - displayName
              - links
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ConsoleCLIDownload
      listKind: ConsoleCLIDownloadList
      plural: consoleclidownloads
      singular: consoleclidownload
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:48Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:48Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      description: ConsoleExternalLogLink is an extension for customizing OpenShift
        web console log links.
      displayName: ConsoleExternalLogLinks
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:48Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:description: {}
            f:displayName: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:additionalPrinterColumns: {}
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:hrefTemplate:
                      .: {}
                      f:description: {}
                      f:pattern: {}
                      f:type: {}
                    f:namespaceFilter:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:text:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:48Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:48Z"
    name: consoleexternalloglinks.console.openshift.io
    resourceVersion: "708"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/consoleexternalloglinks.console.openshift.io
    uid: 050c27f8-c5c8-4f82-917c-01bae07f091c
  spec:
    conversion:
      strategy: None
    group: console.openshift.io
    names:
      kind: ConsoleExternalLogLink
      listKind: ConsoleExternalLogLinkList
      plural: consoleexternalloglinks
      singular: consoleexternalloglink
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.text
        name: Text
        type: string
      - jsonPath: .spec.hrefTemplate
        name: HrefTemplate
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: ConsoleExternalLogLink is an extension for customizing OpenShift
            web console log links.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ConsoleExternalLogLinkSpec is the desired log link configuration.
                The log link will appear on the logs tab of the pod details page.
              properties:
                hrefTemplate:
                  description: "hrefTemplate is an absolute secure URL (must use https)
                    for the log link including variables to be replaced. Variables
                    are specified in the URL with the format ${variableName}, for
                    instance, ${containerName} and will be replaced with the corresponding
                    values from the resource. Resource is a pod. Supported variables
                    are: - ${resourceName} - name of the resource which containes
                    the logs - ${resourceUID} - UID of the resource which contains
                    the logs               - e.g. `11111111-2222-3333-4444-555555555555`
                    - ${containerName} - name of the resource's container that contains
                    the logs - ${resourceNamespace} - namespace of the resource that
                    contains the logs - ${resourceNamespaceUID} - namespace UID of
                    the resource that contains the logs - ${podLabels} - JSON representation
                    of labels matching the pod with the logs             - e.g. `{\"key1\":\"value1\",\"key2\":\"value2\"}`
                    \n e.g., https://example.com/logs?resourceName=${resourceName}&containerName=${containerName}&resourceNamespace=${resourceNamespace}&podLabels=${podLabels}"
                  pattern: ^https://
                  type: string
                namespaceFilter:
                  description: namespaceFilter is a regular expression used to restrict
                    a log link to a matching set of namespaces (e.g., `^openshift-`).
                    The string is converted into a regular expression using the JavaScript
                    RegExp constructor. If not specified, links will be displayed
                    for all the namespaces.
                  type: string
                text:
                  description: text is the display text for the link
                  type: string
              required:
              - hrefTemplate
              - text
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ConsoleExternalLogLink
      listKind: ConsoleExternalLogLinkList
      plural: consoleexternalloglinks
      singular: consoleexternalloglink
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:48Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:48Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      description: Extension for customizing OpenShift web console links
      displayName: ConsoleLinks
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:48Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:description: {}
            f:displayName: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:additionalPrinterColumns: {}
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:applicationMenu:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:imageURL:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:section:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:required: {}
                      f:type: {}
                    f:href:
                      .: {}
                      f:description: {}
                      f:pattern: {}
                      f:type: {}
                    f:location:
                      .: {}
                      f:description: {}
                      f:pattern: {}
                      f:type: {}
                    f:namespaceDashboard:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:namespaceSelector:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:matchExpressions:
                              .: {}
                              f:description: {}
                              f:items: {}
                              f:type: {}
                            f:matchLabels:
                              .: {}
                              f:additionalProperties: {}
                              f:description: {}
                              f:type: {}
                          f:type: {}
                        f:namespaces:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                      f:type: {}
                    f:text:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:48Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:49Z"
    name: consolelinks.console.openshift.io
    resourceVersion: "726"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/consolelinks.console.openshift.io
    uid: 1e640e1e-480d-4664-9991-33d2cbbfe700
  spec:
    conversion:
      strategy: None
    group: console.openshift.io
    names:
      kind: ConsoleLink
      listKind: ConsoleLinkList
      plural: consolelinks
      singular: consolelink
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.text
        name: Text
        type: string
      - jsonPath: .spec.href
        name: URL
        type: string
      - jsonPath: .spec.menu
        name: Menu
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: ConsoleLink is an extension for customizing OpenShift web console
            links.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ConsoleLinkSpec is the desired console link configuration.
              properties:
                applicationMenu:
                  description: applicationMenu holds information about section and
                    icon used for the link in the application menu, and it is applicable
                    only when location is set to ApplicationMenu.
                  properties:
                    imageURL:
                      description: imageUrl is the URL for the icon used in front
                        of the link in the application menu. The URL must be an HTTPS
                        URL or a Data URI. The image should be square and will be
                        shown at 24x24 pixels.
                      type: string
                    section:
                      description: section is the section of the application menu
                        in which the link should appear. This can be any text that
                        will appear as a subheading in the application menu dropdown.
                        A new section will be created if the text does not match text
                        of an existing section.
                      type: string
                  required:
                  - section
                  type: object
                href:
                  description: href is the absolute secure URL for the link (must
                    use https)
                  pattern: ^https://
                  type: string
                location:
                  description: location determines which location in the console the
                    link will be appended to (ApplicationMenu, HelpMenu, UserMenu,
                    NamespaceDashboard).
                  pattern: ^(ApplicationMenu|HelpMenu|UserMenu|NamespaceDashboard)$
                  type: string
                namespaceDashboard:
                  description: namespaceDashboard holds information about namespaces
                    in which the dashboard link should appear, and it is applicable
                    only when location is set to NamespaceDashboard. If not specified,
                    the link will appear in all namespaces.
                  properties:
                    namespaceSelector:
                      description: namespaceSelector is used to select the Namespaces
                        that should contain dashboard link by label. If the namespace
                        labels match, dashboard link will be shown for the namespaces.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                    namespaces:
                      description: namespaces is an array of namespace names in which
                        the dashboard link should appear.
                      items:
                        type: string
                      type: array
                  type: object
                text:
                  description: text is the display text for the link
                  type: string
              required:
              - href
              - location
              - text
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ConsoleLink
      listKind: ConsoleLinkList
      plural: consolelinks
      singular: consolelink
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:49Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:49Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      description: Extension for configuring openshift web console notifications.
      displayName: ConsoleNotification
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:48Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:description: {}
            f:displayName: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:additionalPrinterColumns: {}
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:backgroundColor:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:color:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:link:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:href:
                          .: {}
                          f:description: {}
                          f:pattern: {}
                          f:type: {}
                        f:text:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:required: {}
                      f:type: {}
                    f:location:
                      .: {}
                      f:description: {}
                      f:pattern: {}
                      f:type: {}
                    f:text:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:48Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:49Z"
    name: consolenotifications.console.openshift.io
    resourceVersion: "728"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/consolenotifications.console.openshift.io
    uid: 8445eae6-66d9-4f61-b4c0-8e3aac186e58
  spec:
    conversion:
      strategy: None
    group: console.openshift.io
    names:
      kind: ConsoleNotification
      listKind: ConsoleNotificationList
      plural: consolenotifications
      singular: consolenotification
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.text
        name: Text
        type: string
      - jsonPath: .spec.location
        name: Location
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: ConsoleNotification is the extension for configuring openshift
            web console notifications.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ConsoleNotificationSpec is the desired console notification
                configuration.
              properties:
                backgroundColor:
                  description: backgroundColor is the color of the background for
                    the notification as CSS data type color.
                  type: string
                color:
                  description: color is the color of the text for the notification
                    as CSS data type color.
                  type: string
                link:
                  description: link is an object that holds notification link details.
                  properties:
                    href:
                      description: href is the absolute secure URL for the link (must
                        use https)
                      pattern: ^https://
                      type: string
                    text:
                      description: text is the display text for the link
                      type: string
                  required:
                  - href
                  - text
                  type: object
                location:
                  description: 'location is the location of the notification in the
                    console. Valid values are: "BannerTop", "BannerBottom", "BannerTopBottom".'
                  pattern: ^(BannerTop|BannerBottom|BannerTopBottom)$
                  type: string
                text:
                  description: text is the visible text of the notification.
                  type: string
              required:
              - text
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ConsoleNotification
      listKind: ConsoleNotificationList
      plural: consolenotifications
      singular: consolenotification
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:49Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:49Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:31Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:authentication:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:logoutRedirect:
                          .: {}
                          f:description: {}
                          f:pattern: {}
                          f:type: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:consoleURL:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:31Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:31Z"
    name: consoles.config.openshift.io
    resourceVersion: "310"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/consoles.config.openshift.io
    uid: 3fd67405-60c7-477c-b3fe-058d6d0d89a6
  spec:
    conversion:
      strategy: None
    group: config.openshift.io
    names:
      kind: Console
      listKind: ConsoleList
      plural: consoles
      singular: console
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Console holds cluster-wide configuration for the web console,
            including the logout URL, and reports the public URL of the console. The
            canonical name is `cluster`.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec holds user settable values for configuration
              properties:
                authentication:
                  description: ConsoleAuthentication defines a list of optional configuration
                    for console authentication.
                  properties:
                    logoutRedirect:
                      description: 'An optional, absolute URL to redirect web browsers
                        to after logging out of the console. If not specified, it
                        will redirect to the default login page. This is required
                        when using an identity provider that supports single sign-on
                        (SSO) such as: - OpenID (Keycloak, Azure) - RequestHeader
                        (GSSAPI, SSPI, SAML) - OAuth (GitHub, GitLab, Google) Logging
                        out of the console will destroy the user''s token. The logoutRedirect
                        provides the user the option to perform single logout (SLO)
                        through the identity provider to destroy their single sign-on
                        session.'
                      pattern: ^$|^((https):\/\/?)[^\s()<>]+(?:\([\w\d]+\)|([^[:punct:]\s]|\/?))$
                      type: string
                  type: object
              type: object
            status:
              description: status holds observed values from the cluster. They may
                not be overridden.
              properties:
                consoleURL:
                  description: The URL for the console. This will be derived from
                    the host for the route that is created for the console.
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Console
      listKind: ConsoleList
      plural: consoles
      singular: console
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:31Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:31Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:49Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:49Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:49Z"
    name: consoles.operator.openshift.io
    resourceVersion: "756"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/consoles.operator.openshift.io
    uid: 4460c200-0879-4177-b71f-c0821fbfe46f
  spec:
    conversion:
      strategy: None
    group: operator.openshift.io
    names:
      kind: Console
      listKind: ConsoleList
      plural: consoles
      singular: console
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Console provides a means to configure an operator to manage
            the console.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ConsoleSpec is the specification of the desired behavior
                of the Console.
              properties:
                customization:
                  description: customization is used to optionally provide a small
                    set of customization options to the web console.
                  properties:
                    brand:
                      description: brand is the default branding of the web console
                        which can be overridden by providing the brand field.  There
                        is a limited set of specific brand options. This field controls
                        elements of the console such as the logo. Invalid value will
                        prevent a console rollout.
                      pattern: ^$|^(ocp|origin|okd|dedicated|online|azure)$
                      type: string
                    customLogoFile:
                      description: 'customLogoFile replaces the default OpenShift
                        logo in the masthead and about dialog. It is a reference to
                        a ConfigMap in the openshift-config namespace. This can be
                        created with a command like ''oc create configmap custom-logo
                        --from-file=/path/to/file -n openshift-config''. Image size
                        must be less than 1 MB due to constraints on the ConfigMap
                        size. The ConfigMap key should include a file extension so
                        that the console serves the file with the correct MIME type.
                        Recommended logo specifications: Dimensions: Max height of
                        68px and max width of 200px SVG format preferred'
                      properties:
                        key:
                          description: Key allows pointing to a specific key/value
                            inside of the configmap.  This is useful for logical file
                            references.
                          type: string
                        name:
                          type: string
                      type: object
                    customProductName:
                      description: customProductName is the name that will be displayed
                        in page titles, logo alt text, and the about dialog instead
                        of the normal OpenShift product name.
                      type: string
                    documentationBaseURL:
                      description: documentationBaseURL links to external documentation
                        are shown in various sections of the web console.  Providing
                        documentationBaseURL will override the default documentation
                        URL. Invalid value will prevent a console rollout.
                      pattern: ^$|^((https):\/\/?)[^\s()<>]+(?:\([\w\d]+\)|([^[:punct:]\s]|\/?))\/$
                      type: string
                  type: object
                logLevel:
                  default: Normal
                  description: "logLevel is an intent based logging for an overall
                    component.  It does not give fine grained control, but it is a
                    simple way to manage coarse grained logging choices that operators
                    have to interpret for their operands. \n Valid values are: \"Normal\",
                    \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                managementState:
                  description: managementState indicates whether and how the operator
                    should manage the component
                  pattern: ^(Managed|Unmanaged|Force|Removed)$
                  type: string
                observedConfig:
                  description: observedConfig holds a sparse config that controller
                    has observed from the cluster state.  It exists in spec because
                    it is an input to the level for the operator
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                operatorLogLevel:
                  default: Normal
                  description: "operatorLogLevel is an intent based logging for the
                    operator itself.  It does not give fine grained control, but it
                    is a simple way to manage coarse grained logging choices that
                    operators have to interpret for themselves. \n Valid values are:
                    \"Normal\", \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                providers:
                  description: providers contains configuration for using specific
                    service providers.
                  properties:
                    statuspage:
                      description: statuspage contains ID for statuspage.io page that
                        provides status info about.
                      properties:
                        pageID:
                          description: pageID is the unique ID assigned by Statuspage
                            for your page. This must be a public page.
                          type: string
                      type: object
                  type: object
                route:
                  description: route contains hostname and secret reference that contains
                    the serving certificate. If a custom route is specified, a new
                    route will be created with the provided hostname, under which
                    console will be available. In case of custom hostname uses the
                    default routing suffix of the cluster, the Secret specification
                    for a serving certificate will not be needed. In case of custom
                    hostname points to an arbitrary domain, manual DNS configurations
                    steps are necessary. The default console route will be maintained
                    to reserve the default hostname for console if the custom route
                    is removed. If not specified, default route will be used.
                  properties:
                    hostname:
                      description: hostname is the desired custom domain under which
                        console will be available.
                      type: string
                    secret:
                      description: 'secret points to secret in the openshift-config
                        namespace that contains custom certificate and key and needs
                        to be created manually by the cluster admin. Referenced Secret
                        is required to contain following key value pairs: - "tls.crt"
                        - to specifies custom certificate - "tls.key" - to specifies
                        private key of the custom certificate If the custom hostname
                        uses the default routing suffix of the cluster, the Secret
                        specification for a serving certificate will not be needed.'
                      properties:
                        name:
                          description: name is the metadata.name of the referenced
                            secret
                          type: string
                      required:
                      - name
                      type: object
                  type: object
                unsupportedConfigOverrides:
                  description: 'unsupportedConfigOverrides holds a sparse config that
                    will override any previously set options.  It only needs to be
                    the fields to override it will end up overlaying in the following
                    order: 1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides'
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              type: object
            status:
              description: ConsoleStatus defines the observed status of the Console.
              properties:
                conditions:
                  description: conditions is a list of conditions and their status
                  items:
                    description: OperatorCondition is just the standard condition
                      fields.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
                generations:
                  description: generations are used to determine when an item needs
                    to be reconciled or has changed in a way that needs a reaction.
                  items:
                    description: GenerationStatus keeps track of the generation for
                      a given resource so that decisions about forced updates can
                      be made.
                    properties:
                      group:
                        description: group is the group of the thing you're tracking
                        type: string
                      hash:
                        description: hash is an optional field set for resources without
                          generation that are content sensitive like secrets and configmaps
                        type: string
                      lastGeneration:
                        description: lastGeneration is the last generation of the
                          workload controller involved
                        format: int64
                        type: integer
                      name:
                        description: name is the name of the thing you're tracking
                        type: string
                      namespace:
                        description: namespace is where the thing you're tracking
                          is
                        type: string
                      resource:
                        description: resource is the resource type of the thing you're
                          tracking
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration is the last generation change you've
                    dealt with
                  format: int64
                  type: integer
                readyReplicas:
                  description: readyReplicas indicates how many replicas are ready
                    and at the desired state
                  format: int32
                  type: integer
                version:
                  description: version is the level this availability applies to
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Console
      listKind: ConsoleList
      plural: consoles
      singular: console
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:49Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:49Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      description: Extension for configuring openshift web console YAML samples.
      displayName: ConsoleYAMLSample
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:48Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:description: {}
            f:displayName: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:description:
                      .: {}
                      f:description: {}
                      f:pattern: {}
                      f:type: {}
                    f:snippet:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:targetResource:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:apiVersion:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:kind:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                    f:title:
                      .: {}
                      f:description: {}
                      f:pattern: {}
                      f:type: {}
                    f:yaml:
                      .: {}
                      f:description: {}
                      f:pattern: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:48Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:49Z"
    name: consoleyamlsamples.console.openshift.io
    resourceVersion: "718"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/consoleyamlsamples.console.openshift.io
    uid: 39de5282-0776-47b4-af9c-b570707c0a1c
  spec:
    conversion:
      strategy: None
    group: console.openshift.io
    names:
      kind: ConsoleYAMLSample
      listKind: ConsoleYAMLSampleList
      plural: consoleyamlsamples
      singular: consoleyamlsample
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: ConsoleYAMLSample is an extension for customizing OpenShift
            web console YAML samples.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ConsoleYAMLSampleSpec is the desired YAML sample configuration.
                Samples will appear with their descriptions in a samples sidebar when
                creating a resources in the web console.
              properties:
                description:
                  description: description of the YAML sample.
                  pattern: ^(.|\s)*\S(.|\s)*$
                  type: string
                snippet:
                  description: snippet indicates that the YAML sample is not the full
                    YAML resource definition, but a fragment that can be inserted
                    into the existing YAML document at the user's cursor.
                  type: boolean
                targetResource:
                  description: targetResource contains apiVersion and kind of the
                    resource YAML sample is representating.
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                      type: string
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                  type: object
                title:
                  description: title of the YAML sample.
                  pattern: ^(.|\s)*\S(.|\s)*$
                  type: string
                yaml:
                  description: yaml is the YAML sample to display.
                  pattern: ^(.|\s)*\S(.|\s)*$
                  type: string
              required:
              - description
              - targetResource
              - title
              - yaml
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ConsoleYAMLSample
      listKind: ConsoleYAMLSampleList
      plural: consoleyamlsamples
      singular: consoleyamlsample
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:48Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:49Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T12:59:05Z"
    generation: 1
    labels:
      openshift.io/operator-managed: ""
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:openshift.io/operator-managed: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:containerRuntimeConfig:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:logLevel:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:logSizeMax:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:overlaySize:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:pidsLimit:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                      f:type: {}
                    f:machineConfigPoolSelector:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:matchExpressions:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                        f:matchLabels:
                          .: {}
                          f:additionalProperties: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:conditions:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:observedGeneration:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                  f:type: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:59:05Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:59:07Z"
    name: containerruntimeconfigs.machineconfiguration.openshift.io
    resourceVersion: "1263"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/containerruntimeconfigs.machineconfiguration.openshift.io
    uid: 42bf7123-67b7-4ac4-92c0-cbb15c56ed6c
  spec:
    conversion:
      strategy: None
    group: machineconfiguration.openshift.io
    names:
      kind: ContainerRuntimeConfig
      listKind: ContainerRuntimeConfigList
      plural: containerruntimeconfigs
      shortNames:
      - ctrcfg
      singular: containerruntimeconfig
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: ContainerRuntimeConfig describes a customized Container Runtime
            configuration.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ContainerRuntimeConfigSpec defines the desired state of
                ContainerRuntimeConfig
              properties:
                containerRuntimeConfig:
                  description: ContainerRuntimeConfiguration defines the tuneables
                    of the container runtime
                  properties:
                    logLevel:
                      description: logLevel specifies the verbosity of the logs based
                        on the level it is set to. Options are fatal, panic, error,
                        warn, info, and debug.
                      type: string
                    logSizeMax:
                      description: logSizeMax specifies the Maximum size allowed for
                        the container log file. Negative numbers indicate that no
                        size limit is imposed. If it is positive, it must be >= 8192
                        to match/exceed conmon's read buffer.
                      type: string
                    overlaySize:
                      description: 'overlaySize specifies the maximum size of a container
                        image. This flag can be used to set quota on the size of container
                        images. (default: 10GB)'
                      type: string
                    pidsLimit:
                      description: pidsLimit specifies the maximum number of processes
                        allowed in a container
                      format: int64
                      type: integer
                  type: object
                machineConfigPoolSelector:
                  description: A label selector is a label query over a set of resources.
                    The result of matchLabels and matchExpressions are ANDed. An empty
                    label selector matches all objects. A null label selector matches
                    no objects.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
              type: object
            status:
              description: ContainerRuntimeConfigStatus defines the observed state
                of a ContainerRuntimeConfig
              properties:
                conditions:
                  description: conditions represents the latest available observations
                    of current state.
                  items:
                    description: ContainerRuntimeConfigCondition defines the state
                      of the ContainerRuntimeConfig
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the time of the last update
                          to the current status object.
                        format: date-time
                        nullable: true
                        type: string
                      message:
                        description: message provides additional information about
                          the current condition. This is only to be consumed by humans.
                        type: string
                      reason:
                        description: reason is the reason for the condition's last
                          transition.  Reasons are PascalCase
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: type specifies the state of the operator's reconciliation
                          functionality.
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration represents the generation observed
                    by the controller.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ContainerRuntimeConfig
      listKind: ContainerRuntimeConfigList
      plural: containerruntimeconfigs
      shortNames:
      - ctrcfg
      singular: containerruntimeconfig
    conditions:
    - lastTransitionTime: "2020-11-18T12:59:05Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:59:07Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T13:05:46Z"
    generation: 1
    labels:
      openshift.io/operator-managed: ""
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T13:05:46Z"
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:openshift.io/operator-managed: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:additionalTrustBundle:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:nullable: {}
                      f:type: {}
                    f:cloudProviderCAData:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:nullable: {}
                      f:type: {}
                    f:cloudProviderConfig:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:clusterDNSIP:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:etcdDiscoveryDomain:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:images:
                      .: {}
                      f:additionalProperties: {}
                      f:description: {}
                      f:type: {}
                    f:infra:
                      .: {}
                      f:description: {}
                      f:nullable: {}
                      f:properties:
                        .: {}
                        f:apiVersion:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:kind:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:metadata:
                          .: {}
                          f:type: {}
                        f:spec:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:cloudConfig:
                              .: {}
                              f:description: {}
                              f:properties:
                                .: {}
                                f:key:
                                  .: {}
                                  f:description: {}
                                  f:type: {}
                                f:name:
                                  .: {}
                                  f:type: {}
                              f:type: {}
                          f:type: {}
                        f:status:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:apiServerInternalURI:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:apiServerURL:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:etcdDiscoveryDomain:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:infrastructureName:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:platform:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:platformStatus:
                              .: {}
                              f:description: {}
                              f:properties:
                                .: {}
                                f:aws:
                                  .: {}
                                  f:description: {}
                                  f:properties:
                                    .: {}
                                    f:region:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                  f:type: {}
                                f:azure:
                                  .: {}
                                  f:description: {}
                                  f:properties:
                                    .: {}
                                    f:networkResourceGroupName:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:resourceGroupName:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                  f:type: {}
                                f:baremetal:
                                  .: {}
                                  f:description: {}
                                  f:properties:
                                    .: {}
                                    f:apiServerInternalIP:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:ingressIP:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:nodeDNSIP:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                  f:type: {}
                                f:gcp:
                                  .: {}
                                  f:description: {}
                                  f:properties:
                                    .: {}
                                    f:projectID:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:region:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                  f:type: {}
                                f:openstack:
                                  .: {}
                                  f:description: {}
                                  f:properties:
                                    .: {}
                                    f:apiServerInternalIP:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:cloudName:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:ingressIP:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:nodeDNSIP:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                  f:type: {}
                                f:ovirt:
                                  .: {}
                                  f:description: {}
                                  f:properties:
                                    .: {}
                                    f:apiServerInternalIP:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:ingressIP:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:nodeDNSIP:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                  f:type: {}
                                f:type:
                                  .: {}
                                  f:description: {}
                                  f:type: {}
                                f:vsphere:
                                  .: {}
                                  f:description: {}
                                  f:properties:
                                    .: {}
                                    f:apiServerInternalIP:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:ingressIP:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:nodeDNSIP:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                  f:type: {}
                              f:type: {}
                          f:type: {}
                      f:required: {}
                      f:type: {}
                    f:kubeAPIServerServingCAData:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                    f:kubeletIPv6:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:networkType:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:osImageURL:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:platform:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:proxy:
                      .: {}
                      f:description: {}
                      f:nullable: {}
                      f:properties:
                        .: {}
                        f:httpProxy:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:httpsProxy:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:noProxy:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                    f:pullSecret:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:apiVersion:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:fieldPath:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:kind:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:name:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:namespace:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:resourceVersion:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:uid:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                    f:rootCAData:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:conditions:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:observedGeneration:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                  f:type: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: machine-config-operator
      operation: Update
      time: "2020-11-18T13:05:46Z"
    name: controllerconfigs.machineconfiguration.openshift.io
    resourceVersion: "3681"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/controllerconfigs.machineconfiguration.openshift.io
    uid: 63d3d839-ce81-4a68-a041-48d7e8a401a1
  spec:
    conversion:
      strategy: None
    group: machineconfiguration.openshift.io
    names:
      kind: ControllerConfig
      listKind: ControllerConfigList
      plural: controllerconfigs
      singular: controllerconfig
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: ControllerConfig describes configuration for MachineConfigController.
            This is currently only used to drive the MachineConfig objects generated
            by the TemplateController.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ControllerConfigSpec is the spec for ControllerConfig resource.
              properties:
                additionalTrustBundle:
                  description: additionalTrustBundle is a certificate bundle that
                    will be added to the nodes trusted certificate store.
                  format: byte
                  nullable: true
                  type: string
                cloudProviderCAData:
                  description: cloudProvider specifies the cloud provider CA data
                  format: byte
                  nullable: true
                  type: string
                cloudProviderConfig:
                  description: cloudProviderConfig is the configuration for the given
                    cloud provider
                  type: string
                clusterDNSIP:
                  description: clusterDNSIP is the cluster DNS IP address
                  type: string
                etcdDiscoveryDomain:
                  description: etcdDiscoveryDomain is deprecated, use infra.status.etcdDiscoveryDomain
                    instead
                  type: string
                images:
                  additionalProperties:
                    type: string
                  description: images is map of images that are used by the controller
                    to render templates under ./templates/
                  type: object
                infra:
                  description: infra holds the infrastructure details
                  nullable: true
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                      type: string
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: spec holds user settable values for configuration
                      properties:
                        cloudConfig:
                          description: cloudConfig is a reference to a ConfigMap containing
                            the cloud provider configuration file. This configuration
                            file is used to configure the Kubernetes cloud provider
                            integration when using the built-in cloud provider integration
                            or the external cloud controller manager. The namespace
                            for this config map is openshift-config.
                          properties:
                            key:
                              description: Key allows pointing to a specific key/value
                                inside of the configmap.  This is useful for logical
                                file references.
                              type: string
                            name:
                              type: string
                          type: object
                      type: object
                    status:
                      description: status holds observed values from the cluster.
                        They may not be overridden.
                      properties:
                        apiServerInternalURI:
                          description: apiServerInternalURL is a valid URI with scheme(http/https),
                            address and port.  apiServerInternalURL can be used by
                            components like kubelets, to contact the Kubernetes API
                            server using the infrastructure provider rather than Kubernetes
                            networking.
                          type: string
                        apiServerURL:
                          description: apiServerURL is a valid URI with scheme(http/https),
                            address and port.  apiServerURL can be used by components
                            like the web console to tell users where to find the Kubernetes
                            API.
                          type: string
                        etcdDiscoveryDomain:
                          description: 'etcdDiscoveryDomain is the domain used to
                            fetch the SRV records for discovering etcd servers and
                            clients. For more info: https://github.com/etcd-io/etcd/blob/329be66e8b3f9e2e6af83c123ff89297e49ebd15/Documentation/op-guide/clustering.md#dns-discovery'
                          type: string
                        infrastructureName:
                          description: infrastructureName uniquely identifies a cluster
                            with a human friendly name. Once set it should not be
                            changed. Must be of max length 27 and must have only alphanumeric
                            or hyphen characters.
                          type: string
                        platform:
                          description: "platform is the underlying infrastructure
                            provider for the cluster. \n Deprecated: Use platformStatus.type
                            instead."
                          type: string
                        platformStatus:
                          description: platformStatus holds status information specific
                            to the underlying infrastructure provider.
                          properties:
                            aws:
                              description: AWS contains settings specific to the Amazon
                                Web Services infrastructure provider.
                              properties:
                                region:
                                  description: region holds the default AWS region
                                    for new AWS resources created by the cluster.
                                  type: string
                              type: object
                            azure:
                              description: Azure contains settings specific to the
                                Azure infrastructure provider.
                              properties:
                                networkResourceGroupName:
                                  description: networkResourceGroupName is the Resource
                                    Group for network resources like the Virtual Network
                                    and Subnets used by the cluster. If empty, the
                                    value is same as ResourceGroupName.
                                  type: string
                                resourceGroupName:
                                  description: resourceGroupName is the Resource Group
                                    for new Azure resources created for the cluster.
                                  type: string
                              type: object
                            baremetal:
                              description: BareMetal contains settings specific to
                                the BareMetal platform.
                              properties:
                                apiServerInternalIP:
                                  description: apiServerInternalIP is an IP address
                                    to contact the Kubernetes API server that can
                                    be used by components inside the cluster, like
                                    kubelets using the infrastructure rather than
                                    Kubernetes networking. It is the IP that the Infrastructure.status.apiServerInternalURI
                                    points to. It is the IP for a self-hosted load
                                    balancer in front of the API servers.
                                  type: string
                                ingressIP:
                                  description: ingressIP is an external IP which routes
                                    to the default ingress controller. The IP is a
                                    suitable target of a wildcard DNS record used
                                    to resolve default route host names.
                                  type: string
                                nodeDNSIP:
                                  description: nodeDNSIP is the IP address for the
                                    internal DNS used by the nodes. Unlike the one
                                    managed by the DNS operator, `NodeDNSIP` provides
                                    name resolution for the nodes themselves. There
                                    is no DNS-as-a-service for BareMetal deployments.
                                    In order to minimize necessary changes to the
                                    datacenter DNS, a DNS service is hosted as a static
                                    pod to serve those hostnames to the nodes in the
                                    cluster.
                                  type: string
                              type: object
                            gcp:
                              description: GCP contains settings specific to the Google
                                Cloud Platform infrastructure provider.
                              properties:
                                projectID:
                                  description: resourceGroupName is the Project ID
                                    for new GCP resources created for the cluster.
                                  type: string
                                region:
                                  description: region holds the region for new GCP
                                    resources created for the cluster.
                                  type: string
                              type: object
                            openstack:
                              description: OpenStack contains settings specific to
                                the OpenStack infrastructure provider.
                              properties:
                                apiServerInternalIP:
                                  description: apiServerInternalIP is an IP address
                                    to contact the Kubernetes API server that can
                                    be used by components inside the cluster, like
                                    kubelets using the infrastructure rather than
                                    Kubernetes networking. It is the IP that the Infrastructure.status.apiServerInternalURI
                                    points to. It is the IP for a self-hosted load
                                    balancer in front of the API servers.
                                  type: string
                                cloudName:
                                  description: cloudName is the name of the desired
                                    OpenStack cloud in the client configuration file
                                    (`clouds.yaml`).
                                  type: string
                                ingressIP:
                                  description: ingressIP is an external IP which routes
                                    to the default ingress controller. The IP is a
                                    suitable target of a wildcard DNS record used
                                    to resolve default route host names.
                                  type: string
                                nodeDNSIP:
                                  description: nodeDNSIP is the IP address for the
                                    internal DNS used by the nodes. Unlike the one
                                    managed by the DNS operator, `NodeDNSIP` provides
                                    name resolution for the nodes themselves. There
                                    is no DNS-as-a-service for OpenStack deployments.
                                    In order to minimize necessary changes to the
                                    datacenter DNS, a DNS service is hosted as a static
                                    pod to serve those hostnames to the nodes in the
                                    cluster.
                                  type: string
                              type: object
                            ovirt:
                              description: Ovirt contains settings specific to the
                                oVirt infrastructure provider.
                              properties:
                                apiServerInternalIP:
                                  description: apiServerInternalIP is an IP address
                                    to contact the Kubernetes API server that can
                                    be used by components inside the cluster, like
                                    kubelets using the infrastructure rather than
                                    Kubernetes networking. It is the IP that the Infrastructure.status.apiServerInternalURI
                                    points to. It is the IP for a self-hosted load
                                    balancer in front of the API servers.
                                  type: string
                                ingressIP:
                                  description: ingressIP is an external IP which routes
                                    to the default ingress controller. The IP is a
                                    suitable target of a wildcard DNS record used
                                    to resolve default route host names.
                                  type: string
                                nodeDNSIP:
                                  description: nodeDNSIP is the IP address for the
                                    internal DNS used by the nodes. Unlike the one
                                    managed by the DNS operator, `NodeDNSIP` provides
                                    name resolution for the nodes themselves. There
                                    is no DNS-as-a-service for oVirt deployments.
                                    In order to minimize necessary changes to the
                                    datacenter DNS, a DNS service is hosted as a static
                                    pod to serve those hostnames to the nodes in the
                                    cluster.
                                  type: string
                              type: object
                            type:
                              description: type is the underlying infrastructure provider
                                for the cluster. This value controls whether infrastructure
                                automation such as service load balancers, dynamic
                                volume provisioning, machine creation and deletion,
                                and other integrations are enabled. If None, no infrastructure
                                automation is enabled. Allowed values are "AWS", "Azure",
                                "BareMetal", "GCP", "Libvirt", "OpenStack", "VSphere",
                                "oVirt", and "None". Individual components may not
                                support all platforms, and must handle unrecognized
                                platforms as None if they do not support that platform.
                              type: string
                            vsphere:
                              description: VSphere contains settings specific to the
                                VSphere infrastructure provider.
                              properties:
                                apiServerInternalIP:
                                  description: apiServerInternalIP is an IP address
                                    to contact the Kubernetes API server that can
                                    be used by components inside the cluster, like
                                    kubelets using the infrastructure rather than
                                    Kubernetes networking. It is the IP that the Infrastructure.status.apiServerInternalURI
                                    points to. It is the IP for a self-hosted load
                                    balancer in front of the API servers.
                                  type: string
                                ingressIP:
                                  description: ingressIP is an external IP which routes
                                    to the default ingress controller. The IP is a
                                    suitable target of a wildcard DNS record used
                                    to resolve default route host names.
                                  type: string
                                nodeDNSIP:
                                  description: nodeDNSIP is the IP address for the
                                    internal DNS used by the nodes. Unlike the one
                                    managed by the DNS operator, `NodeDNSIP` provides
                                    name resolution for the nodes themselves. There
                                    is no DNS-as-a-service for vSphere deployments.
                                    In order to minimize necessary changes to the
                                    datacenter DNS, a DNS service is hosted as a static
                                    pod to serve those hostnames to the nodes in the
                                    cluster.
                                  type: string
                              type: object
                          type: object
                      type: object
                  required:
                  - spec
                  type: object
                kubeAPIServerServingCAData:
                  description: kubeAPIServerServingCAData managed Kubelet to API Server
                    Cert... Rotated automatically
                  format: byte
                  type: string
                kubeletIPv6:
                  description: kubeletIPv6 is true to force a single-stack IPv6 kubelet
                    config
                  type: boolean
                networkType:
                  description: networkType holds the type of network the cluster is
                    using
                  type: string
                osImageURL:
                  description: osImageURL is the location of the container image that
                    contains the OS update payload. Its value is taken from the data.osImageURL
                    field on the machine-config-osimageurl ConfigMap.
                  type: string
                platform:
                  description: platform is deprecated. Use infra.status.platformStatus.type
                    instead
                  type: string
                proxy:
                  description: proxy holds the current proxy configuration for the
                    nodes
                  nullable: true
                  properties:
                    httpProxy:
                      description: httpProxy is the URL of the proxy for HTTP requests.
                      type: string
                    httpsProxy:
                      description: httpsProxy is the URL of the proxy for HTTPS requests.
                      type: string
                    noProxy:
                      description: noProxy is a comma-separated list of hostnames
                        and/or CIDRs for which the proxy should not be used.
                      type: string
                  type: object
                pullSecret:
                  description: pullSecret is the default pull secret that needs to
                    be installed on all machines.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                rootCAData:
                  description: rootCAData specifies the root CA data
                  format: byte
                  type: string
              type: object
            status:
              description: ControllerConfigStatus is the status for ControllerConfig
              properties:
                conditions:
                  description: conditions represents the latest available observations
                    of current state.
                  items:
                    description: ControllerConfigStatusCondition contains condition
                      information for ControllerConfigStatus
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the time of the last update
                          to the current status object.
                        format: date-time
                        nullable: true
                        type: string
                      message:
                        description: message provides additional information about
                          the current condition. This is only to be consumed by humans.
                        type: string
                      reason:
                        description: reason is the reason for the condition's last
                          transition.  Reasons are PascalCase
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: type specifies the state of the operator's reconciliation
                          functionality.
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration represents the generation observed
                    by the controller.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ControllerConfig
      listKind: ControllerConfigList
      plural: controllerconfigs
      singular: controllerconfig
    conditions:
    - lastTransitionTime: "2020-11-18T13:05:46Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T13:05:46Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T12:58:35Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:providerSpec:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:secretRef:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:apiVersion:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:fieldPath:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:kind:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:name:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:namespace:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:resourceVersion:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:uid:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:conditions:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:lastSyncGeneration:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                    f:lastSyncTimestamp:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                    f:providerStatus:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:provisioned:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:35Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:35Z"
    name: credentialsrequests.cloudcredential.openshift.io
    resourceVersion: "479"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/credentialsrequests.cloudcredential.openshift.io
    uid: eee87f21-b070-4fe1-9722-e09f15be1061
  spec:
    conversion:
      strategy: None
    group: cloudcredential.openshift.io
    names:
      kind: CredentialsRequest
      listKind: CredentialsRequestList
      plural: credentialsrequests
      singular: credentialsrequest
    preserveUnknownFields: true
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: CredentialsRequest is the Schema for the credentialsrequests
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: CredentialsRequestSpec defines the desired state of CredentialsRequest
              properties:
                providerSpec:
                  description: ProviderSpec contains the cloud provider specific credentials
                    specification.
                  type: object
                secretRef:
                  description: SecretRef points to the secret where the credentials
                    should be stored once generated.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
              required:
              - secretRef
              type: object
            status:
              description: CredentialsRequestStatus defines the observed state of
                CredentialsRequest
              properties:
                conditions:
                  description: Conditions includes detailed status for the CredentialsRequest
                  items:
                    description: CredentialsRequestCondition contains details for
                      any of the conditions on a CredentialsRequest object
                    properties:
                      lastProbeTime:
                        description: LastProbeTime is the last time we probed the
                          condition
                        format: date-time
                        type: string
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transitioned from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human-readable message indicating
                          details about the last transition
                        type: string
                      reason:
                        description: Reason is a unique, one-word, CamelCase reason
                          for the condition's last transition
                        type: string
                      status:
                        description: Status is the status of the condition
                        type: string
                      type:
                        description: Type is the specific type of the condition
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                lastSyncGeneration:
                  description: LastSyncGeneration is the generation of the credentials
                    request resource that was last synced. Used to determine if the
                    object has changed and requires a sync.
                  format: int64
                  type: integer
                lastSyncTimestamp:
                  description: LastSyncTimestamp is the time that the credentials
                    were last synced.
                  format: date-time
                  type: string
                providerStatus:
                  description: ProviderStatus contains cloud provider specific status.
                  type: object
                provisioned:
                  description: Provisioned is true once the credentials have been
                    initially provisioned.
                  type: boolean
              required:
              - lastSyncGeneration
              - provisioned
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: CredentialsRequest
      listKind: CredentialsRequestList
      plural: credentialsrequests
      singular: credentialsrequest
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:35Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:35Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:51Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:51Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:51Z"
    name: csisnapshotcontrollers.operator.openshift.io
    resourceVersion: "811"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/csisnapshotcontrollers.operator.openshift.io
    uid: 9aebfd12-34d0-45c8-809c-c1b91cdc5dca
  spec:
    conversion:
      strategy: None
    group: operator.openshift.io
    names:
      kind: CSISnapshotController
      listKind: CSISnapshotControllerList
      plural: csisnapshotcontrollers
      singular: csisnapshotcontroller
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: CSISnapshotController provides a means to configure an operator
            to manage the CSI snapshots. `cluster` is the canonical name.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec holds user settable values for configuration
              properties:
                logLevel:
                  default: Normal
                  description: "logLevel is an intent based logging for an overall
                    component.  It does not give fine grained control, but it is a
                    simple way to manage coarse grained logging choices that operators
                    have to interpret for their operands. \n Valid values are: \"Normal\",
                    \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                managementState:
                  description: managementState indicates whether and how the operator
                    should manage the component
                  pattern: ^(Managed|Unmanaged|Force|Removed)$
                  type: string
                observedConfig:
                  description: observedConfig holds a sparse config that controller
                    has observed from the cluster state.  It exists in spec because
                    it is an input to the level for the operator
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                operatorLogLevel:
                  default: Normal
                  description: "operatorLogLevel is an intent based logging for the
                    operator itself.  It does not give fine grained control, but it
                    is a simple way to manage coarse grained logging choices that
                    operators have to interpret for themselves. \n Valid values are:
                    \"Normal\", \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                unsupportedConfigOverrides:
                  description: 'unsupportedConfigOverrides holds a sparse config that
                    will override any previously set options.  It only needs to be
                    the fields to override it will end up overlaying in the following
                    order: 1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides'
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              type: object
            status:
              description: status holds observed values from the cluster. They may
                not be overridden.
              properties:
                conditions:
                  description: conditions is a list of conditions and their status
                  items:
                    description: OperatorCondition is just the standard condition
                      fields.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
                generations:
                  description: generations are used to determine when an item needs
                    to be reconciled or has changed in a way that needs a reaction.
                  items:
                    description: GenerationStatus keeps track of the generation for
                      a given resource so that decisions about forced updates can
                      be made.
                    properties:
                      group:
                        description: group is the group of the thing you're tracking
                        type: string
                      hash:
                        description: hash is an optional field set for resources without
                          generation that are content sensitive like secrets and configmaps
                        type: string
                      lastGeneration:
                        description: lastGeneration is the last generation of the
                          workload controller involved
                        format: int64
                        type: integer
                      name:
                        description: name is the name of the thing you're tracking
                        type: string
                      namespace:
                        description: namespace is where the thing you're tracking
                          is
                        type: string
                      resource:
                        description: resource is the resource type of the thing you're
                          tracking
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration is the last generation change you've
                    dealt with
                  format: int64
                  type: integer
                readyReplicas:
                  description: readyReplicas indicates how many replicas are ready
                    and at the desired state
                  format: int32
                  type: integer
                version:
                  description: version is the level this availability applies to
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: CSISnapshotController
      listKind: CSISnapshotControllerList
      plural: csisnapshotcontrollers
      singular: csisnapshotcontroller
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:31Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:baseDomain:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:privateZone:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:id:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:tags:
                          .: {}
                          f:additionalProperties: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                    f:publicZone:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:id:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:tags:
                          .: {}
                          f:additionalProperties: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:31Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:31Z"
    name: dnses.config.openshift.io
    resourceVersion: "319"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/dnses.config.openshift.io
    uid: 51f98a58-2679-4c27-9fc3-184ece3c7cdc
  spec:
    conversion:
      strategy: None
    group: config.openshift.io
    names:
      kind: DNS
      listKind: DNSList
      plural: dnses
      singular: dns
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: DNS holds cluster-wide information about DNS. The canonical
            name is `cluster`
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec holds user settable values for configuration
              properties:
                baseDomain:
                  description: "baseDomain is the base domain of the cluster. All
                    managed DNS records will be sub-domains of this base. \n For example,
                    given the base domain `openshift.example.com`, an API server DNS
                    record may be created for `cluster-api.openshift.example.com`.
                    \n Once set, this field cannot be changed."
                  type: string
                privateZone:
                  description: "privateZone is the location where all the DNS records
                    that are only available internally to the cluster exist. \n If
                    this field is nil, no private records should be created. \n Once
                    set, this field cannot be changed."
                  properties:
                    id:
                      description: "id is the identifier that can be used to find
                        the DNS hosted zone. \n on AWS zone can be fetched using `ID`
                        as id in [1] on Azure zone can be fetched using `ID` as a
                        pre-determined name in [2], on GCP zone can be fetched using
                        `ID` as a pre-determined name in [3]. \n [1]: https://docs.aws.amazon.com/cli/latest/reference/route53/get-hosted-zone.html#options
                        [2]: https://docs.microsoft.com/en-us/cli/azure/network/dns/zone?view=azure-cli-latest#az-network-dns-zone-show
                        [3]: https://cloud.google.com/dns/docs/reference/v1/managedZones/get"
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: "tags can be used to query the DNS hosted zone.
                        \n on AWS, resourcegroupstaggingapi [1] can be used to fetch
                        a zone using `Tags` as tag-filters, \n [1]: https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/get-resources.html#options"
                      type: object
                  type: object
                publicZone:
                  description: "publicZone is the location where all the DNS records
                    that are publicly accessible to the internet exist. \n If this
                    field is nil, no public records should be created. \n Once set,
                    this field cannot be changed."
                  properties:
                    id:
                      description: "id is the identifier that can be used to find
                        the DNS hosted zone. \n on AWS zone can be fetched using `ID`
                        as id in [1] on Azure zone can be fetched using `ID` as a
                        pre-determined name in [2], on GCP zone can be fetched using
                        `ID` as a pre-determined name in [3]. \n [1]: https://docs.aws.amazon.com/cli/latest/reference/route53/get-hosted-zone.html#options
                        [2]: https://docs.microsoft.com/en-us/cli/azure/network/dns/zone?view=azure-cli-latest#az-network-dns-zone-show
                        [3]: https://cloud.google.com/dns/docs/reference/v1/managedZones/get"
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: "tags can be used to query the DNS hosted zone.
                        \n on AWS, resourcegroupstaggingapi [1] can be used to fetch
                        a zone using `Tags` as tag-filters, \n [1]: https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/get-resources.html#options"
                      type: object
                  type: object
              type: object
            status:
              description: status holds observed values from the cluster. They may
                not be overridden.
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: DNS
      listKind: DNSList
      plural: dnses
      singular: dns
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:31Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:31Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T12:58:52Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:servers:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:clusterDomain:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:clusterIP:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:conditions:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:52Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:52Z"
    name: dnses.operator.openshift.io
    resourceVersion: "872"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/dnses.operator.openshift.io
    uid: b1cf074a-4148-4e9b-9cc1-16d2bdcf4c61
  spec:
    conversion:
      strategy: None
    group: operator.openshift.io
    names:
      kind: DNS
      listKind: DNSList
      plural: dnses
      singular: dns
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: "DNS manages the CoreDNS component to provide a name resolution
            service for pods and services in the cluster. \n This supports the DNS-based
            service discovery specification: https://github.com/kubernetes/dns/blob/master/docs/specification.md
            \n More details: https://kubernetes.io/docs/tasks/administer-cluster/coredns"
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec is the specification of the desired behavior of the
                DNS.
              properties:
                servers:
                  description: "servers is a list of DNS resolvers that provide name
                    query delegation for one or more subdomains outside the scope
                    of the cluster domain. If servers consists of more than one Server,
                    longest suffix match will be used to determine the Server. \n
                    For example, if there are two Servers, one for \"foo.com\" and
                    another for \"a.foo.com\", and the name query is for \"www.a.foo.com\",
                    it will be routed to the Server with Zone \"a.foo.com\". \n If
                    this field is nil, no servers are created."
                  items:
                    description: Server defines the schema for a server that runs
                      per instance of CoreDNS.
                    properties:
                      forwardPlugin:
                        description: forwardPlugin defines a schema for configuring
                          CoreDNS to proxy DNS messages to upstream resolvers.
                        properties:
                          upstreams:
                            description: "upstreams is a list of resolvers to forward
                              name queries for subdomains of Zones. Upstreams are
                              randomized when more than 1 upstream is specified. Each
                              instance of CoreDNS performs health checking of Upstreams.
                              When a healthy upstream returns an error during the
                              exchange, another resolver is tried from Upstreams.
                              Each upstream is represented by an IP address or IP:port
                              if the upstream listens on a port other than 53. \n
                              A maximum of 15 upstreams is allowed per ForwardPlugin."
                            items:
                              type: string
                            maxItems: 15
                            type: array
                        type: object
                      name:
                        description: name is required and specifies a unique name
                          for the server. Name must comply with the Service Name Syntax
                          of rfc6335.
                        type: string
                      zones:
                        description: zones is required and specifies the subdomains
                          that Server is authoritative for. Zones must conform to
                          the rfc1123 definition of a subdomain. Specifying the cluster
                          domain (i.e., "cluster.local") is invalid.
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
              type: object
            status:
              description: status is the most recently observed status of the DNS.
              properties:
                clusterDomain:
                  description: "clusterDomain is the local cluster DNS domain suffix
                    for DNS services. This will be a subdomain as defined in RFC 1034,
                    section 3.5: https://tools.ietf.org/html/rfc1034#section-3.5 Example:
                    \"cluster.local\" \n More info: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service"
                  type: string
                clusterIP:
                  description: "clusterIP is the service IP through which this DNS
                    is made available. \n In the case of the default DNS, this will
                    be a well known IP that is used as the default nameserver for
                    pods that are using the default ClusterFirst DNS policy. \n In
                    general, this IP can be specified in a pod's spec.dnsConfig.nameservers
                    list or used explicitly when performing name resolution from within
                    the cluster. Example: dig foo.com @<service IP> \n More info:
                    https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies"
                  type: string
                conditions:
                  description: "conditions provide information about the state of
                    the DNS on the cluster. \n These are the supported DNS conditions:
                    \n   * Available   - True if the following conditions are met:
                    \    * DNS controller daemonset is available.   - False if any
                    of those conditions are unsatisfied."
                  items:
                    description: OperatorCondition is just the standard condition
                      fields.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
              required:
              - clusterDomain
              - clusterIP
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: DNS
      listKind: DNSList
      plural: dnses
      singular: dns
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:52Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:52Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:51Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:dnsName:
                      .: {}
                      f:description: {}
                      f:minLength: {}
                      f:type: {}
                    f:recordTTL:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:minimum: {}
                      f:type: {}
                    f:recordType:
                      .: {}
                      f:description: {}
                      f:enum: {}
                      f:type: {}
                    f:targets:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:minItems: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:observedGeneration:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                    f:zones:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                  f:type: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:51Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:51Z"
    name: dnsrecords.ingress.operator.openshift.io
    resourceVersion: "836"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/dnsrecords.ingress.operator.openshift.io
    uid: cfad38e6-f6f2-4234-b40c-a9a263626c94
  spec:
    conversion:
      strategy: None
    group: ingress.operator.openshift.io
    names:
      kind: DNSRecord
      listKind: DNSRecordList
      plural: dnsrecords
      singular: dnsrecord
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: "DNSRecord is a DNS record managed in the zones defined by
            dns.config.openshift.io/cluster .spec.publicZone and .spec.privateZone.
            \n Cluster admin manipulation of this resource is not supported. This
            resource is only for internal communication of OpenShift operators."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec is the specification of the desired behavior of the
                dnsecord.
              properties:
                dnsName:
                  description: dnsName is the hostname of the DNS record
                  minLength: 1
                  type: string
                recordTTL:
                  description: recordTTL is the record TTL in seconds. If zero, the
                    default is 30.
                  format: int64
                  minimum: 0
                  type: integer
                recordType:
                  description: recordType is the DNS record type. For example, "A"
                    or "CNAME".
                  enum:
                  - CNAME
                  - A
                  type: string
                targets:
                  description: targets are record targets.
                  items:
                    type: string
                  minItems: 1
                  type: array
              required:
              - dnsName
              - recordTTL
              - recordType
              - targets
              type: object
            status:
              description: status is the most recently observed status of the dnsRecord.
              properties:
                observedGeneration:
                  description: observedGeneration is the most recently observed generation
                    of the DNSRecord.  When the DNSRecord is updated, the controller
                    updates the corresponding record in each managed zone.  If an
                    update for a particular zone fails, that failure is recorded in
                    the status condition for the zone so that the controller can determine
                    that it needs to retry the update for that specific zone.
                  format: int64
                  type: integer
                zones:
                  description: zones are the status of the record in each zone.
                  items:
                    description: DNSZoneStatus is the status of a record within a
                      specific zone.
                    properties:
                      conditions:
                        description: "conditions are any conditions associated with
                          the record in the zone. \n If publishing the record fails,
                          the \"Failed\" condition will be set with a reason and message
                          describing the cause of the failure."
                        items:
                          description: DNSZoneCondition is just the standard condition
                            fields.
                          properties:
                            lastTransitionTime:
                              format: date-time
                              type: string
                            message:
                              type: string
                            reason:
                              type: string
                            status:
                              minLength: 1
                              type: string
                            type:
                              minLength: 1
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      dnsZone:
                        description: dnsZone is the zone where the record is published.
                        properties:
                          id:
                            description: "id is the identifier that can be used to
                              find the DNS hosted zone. \n on AWS zone can be fetched
                              using `ID` as id in [1] on Azure zone can be fetched
                              using `ID` as a pre-determined name in [2], on GCP zone
                              can be fetched using `ID` as a pre-determined name in
                              [3]. \n [1]: https://docs.aws.amazon.com/cli/latest/reference/route53/get-hosted-zone.html#options
                              [2]: https://docs.microsoft.com/en-us/cli/azure/network/dns/zone?view=azure-cli-latest#az-network-dns-zone-show
                              [3]: https://cloud.google.com/dns/docs/reference/v1/managedZones/get"
                            type: string
                          tags:
                            additionalProperties:
                              type: string
                            description: "tags can be used to query the DNS hosted
                              zone. \n on AWS, resourcegroupstaggingapi [1] can be
                              used to fetch a zone using `Tags` as tag-filters, \n
                              [1]: https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/get-resources.html#options"
                            type: object
                        type: object
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: DNSRecord
      listKind: DNSRecordList
      plural: dnsrecords
      singular: dnsrecord
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T13:05:11Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:ownerReferences:
            .: {}
            k:{"uid":"629378f9-4b6d-445e-8764-cbfb5eda542e"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:egress:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:maxItems: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
          f:storedVersions: {}
      manager: cluster-network-operator
      operation: Update
      time: "2021-01-13T04:16:18Z"
    name: egressnetworkpolicies.network.openshift.io
    ownerReferences:
    - apiVersion: operator.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Network
      name: cluster
      uid: 629378f9-4b6d-445e-8764-cbfb5eda542e
    resourceVersion: "36921690"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/egressnetworkpolicies.network.openshift.io
    uid: 443f0959-d457-40cc-8f35-80496a4dfb2e
  spec:
    conversion:
      strategy: None
    group: network.openshift.io
    names:
      kind: EgressNetworkPolicy
      listKind: EgressNetworkPolicyList
      plural: egressnetworkpolicies
      singular: egressnetworkpolicy
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: EgressNetworkPolicy describes the current egress network policy
            for a Namespace. When using the 'redhat/openshift-ovs-multitenant' network
            plugin, traffic from a pod to an IP address outside the cluster will be
            checked against each EgressNetworkPolicyRule in the pod's namespace's
            EgressNetworkPolicy, in order. If no rule matches (or no EgressNetworkPolicy
            is present) then the traffic will be allowed by default.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec is the specification of the current egress network
                policy
              properties:
                egress:
                  description: egress contains the list of egress policy rules
                  items:
                    description: EgressNetworkPolicyRule contains a single egress
                      network policy rule
                    properties:
                      to:
                        description: to is the target that traffic is allowed/denied
                          to
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          cidrSelector:
                            description: cidrSelector is the CIDR range to allow/deny
                              traffic to. If this is set, dnsName must be unset
                            pattern: ^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/([0-9]|[12][0-9]|3[0-2])$
                            type: string
                          dnsName:
                            description: dnsName is the domain name to allow/deny
                              traffic to. If this is set, cidrSelector must be unset
                            pattern: ^([A-Za-z0-9-]+\.)*[A-Za-z0-9-]+\.?$
                            type: string
                        type: object
                      type:
                        description: type marks this as an "Allow" or "Deny" rule
                        pattern: ^Allow|Deny$
                        type: string
                    required:
                    - to
                    - type
                    type: object
                  maxItems: 1000
                  type: array
              required:
              - egress
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: EgressNetworkPolicy
      listKind: EgressNetworkPolicyList
      plural: egressnetworkpolicies
      singular: egressnetworkpolicy
    conditions:
    - lastTransitionTime: "2020-11-18T13:05:11Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T13:05:11Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:51Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:51Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:51Z"
    name: etcds.operator.openshift.io
    resourceVersion: "842"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/etcds.operator.openshift.io
    uid: 6dff675c-eb5d-42d7-a1fd-7d1eb9df9a2e
  spec:
    conversion:
      strategy: None
    group: operator.openshift.io
    names:
      categories:
      - coreoperators
      kind: Etcd
      listKind: EtcdList
      plural: etcds
      singular: etcd
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Etcd provides information to configure an operator to manage
            kube-apiserver.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                failedRevisionLimit:
                  description: failedRevisionLimit is the number of failed static
                    pod installer revisions to keep on disk and in the api -1 = unlimited,
                    0 or unset = 5 (default)
                  format: int32
                  type: integer
                forceRedeploymentReason:
                  description: forceRedeploymentReason can be used to force the redeployment
                    of the operand by providing a unique string. This provides a mechanism
                    to kick a previously failed deployment and provide a reason why
                    you think it will work this time instead of failing again on the
                    same config.
                  type: string
                logLevel:
                  default: Normal
                  description: "logLevel is an intent based logging for an overall
                    component.  It does not give fine grained control, but it is a
                    simple way to manage coarse grained logging choices that operators
                    have to interpret for their operands. \n Valid values are: \"Normal\",
                    \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                managementState:
                  description: managementState indicates whether and how the operator
                    should manage the component
                  pattern: ^(Managed|Unmanaged|Force|Removed)$
                  type: string
                observedConfig:
                  description: observedConfig holds a sparse config that controller
                    has observed from the cluster state.  It exists in spec because
                    it is an input to the level for the operator
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                operatorLogLevel:
                  default: Normal
                  description: "operatorLogLevel is an intent based logging for the
                    operator itself.  It does not give fine grained control, but it
                    is a simple way to manage coarse grained logging choices that
                    operators have to interpret for themselves. \n Valid values are:
                    \"Normal\", \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                succeededRevisionLimit:
                  description: succeededRevisionLimit is the number of successful
                    static pod installer revisions to keep on disk and in the api
                    -1 = unlimited, 0 or unset = 5 (default)
                  format: int32
                  type: integer
                unsupportedConfigOverrides:
                  description: 'unsupportedConfigOverrides holds a sparse config that
                    will override any previously set options.  It only needs to be
                    the fields to override it will end up overlaying in the following
                    order: 1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides'
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              type: object
            status:
              properties:
                conditions:
                  description: conditions is a list of conditions and their status
                  items:
                    description: OperatorCondition is just the standard condition
                      fields.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
                generations:
                  description: generations are used to determine when an item needs
                    to be reconciled or has changed in a way that needs a reaction.
                  items:
                    description: GenerationStatus keeps track of the generation for
                      a given resource so that decisions about forced updates can
                      be made.
                    properties:
                      group:
                        description: group is the group of the thing you're tracking
                        type: string
                      hash:
                        description: hash is an optional field set for resources without
                          generation that are content sensitive like secrets and configmaps
                        type: string
                      lastGeneration:
                        description: lastGeneration is the last generation of the
                          workload controller involved
                        format: int64
                        type: integer
                      name:
                        description: name is the name of the thing you're tracking
                        type: string
                      namespace:
                        description: namespace is where the thing you're tracking
                          is
                        type: string
                      resource:
                        description: resource is the resource type of the thing you're
                          tracking
                        type: string
                    type: object
                  type: array
                latestAvailableRevision:
                  description: latestAvailableRevision is the deploymentID of the
                    most recent deployment
                  format: int32
                  type: integer
                latestAvailableRevisionReason:
                  description: latestAvailableRevisionReason describe the detailed
                    reason for the most recent deployment
                  type: string
                nodeStatuses:
                  description: nodeStatuses track the deployment values and errors
                    across individual nodes
                  items:
                    description: NodeStatus provides information about the current
                      state of a particular node managed by this operator.
                    properties:
                      currentRevision:
                        description: currentRevision is the generation of the most
                          recently successful deployment
                        format: int32
                        type: integer
                      lastFailedRevision:
                        description: lastFailedRevision is the generation of the deployment
                          we tried and failed to deploy.
                        format: int32
                        type: integer
                      lastFailedRevisionErrors:
                        description: lastFailedRevisionErrors is a list of the errors
                          during the failed deployment referenced in lastFailedRevision
                        items:
                          type: string
                        type: array
                      nodeName:
                        description: nodeName is the name of the node
                        type: string
                      targetRevision:
                        description: targetRevision is the generation of the deployment
                          we're trying to apply
                        format: int32
                        type: integer
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration is the last generation change you've
                    dealt with
                  format: int64
                  type: integer
                readyReplicas:
                  description: readyReplicas indicates how many replicas are ready
                    and at the desired state
                  format: int32
                  type: integer
                version:
                  description: version is the level this availability applies to
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - coreoperators
      kind: Etcd
      listKind: EtcdList
      plural: etcds
      singular: etcd
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:32Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:customNoUpgrade:
                      .: {}
                      f:description: {}
                      f:nullable: {}
                      f:properties:
                        .: {}
                        f:disabled:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                        f:enabled:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                      f:type: {}
                    f:featureSet:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:32Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:32Z"
    name: featuregates.config.openshift.io
    resourceVersion: "322"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/featuregates.config.openshift.io
    uid: cd63fe83-a9f5-42cd-8fc8-d789f1f30e65
  spec:
    conversion:
      strategy: None
    group: config.openshift.io
    names:
      kind: FeatureGate
      listKind: FeatureGateList
      plural: featuregates
      singular: featuregate
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Feature holds cluster-wide information about feature gates.  The
            canonical name is `cluster`
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec holds user settable values for configuration
              properties:
                customNoUpgrade:
                  description: customNoUpgrade allows the enabling or disabling of
                    any feature. Turning this feature set on IS NOT SUPPORTED, CANNOT
                    BE UNDONE, and PREVENTS UPGRADES. Because of its nature, this
                    setting cannot be validated.  If you have any typos or accidentally
                    apply invalid combinations your cluster may fail in an unrecoverable
                    way.  featureSet must equal "CustomNoUpgrade" must be set to use
                    this field.
                  nullable: true
                  properties:
                    disabled:
                      description: disabled is a list of all feature gates that you
                        want to force off
                      items:
                        type: string
                      type: array
                    enabled:
                      description: enabled is a list of all feature gates that you
                        want to force on
                      items:
                        type: string
                      type: array
                  type: object
                featureSet:
                  description: featureSet changes the list of features in the cluster.  The
                    default is empty.  Be very careful adjusting this setting. Turning
                    on or off features may cause irreversible changes in your cluster
                    which cannot be undone.
                  type: string
              type: object
            status:
              description: status holds observed values from the cluster. They may
                not be overridden.
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: FeatureGate
      listKind: FeatureGateList
      plural: featuregates
      singular: featuregate
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:32Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:32Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:48Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:connectionConfig:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:ca:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:name:
                              .: {}
                              f:description: {}
                              f:type: {}
                          f:required: {}
                          f:type: {}
                        f:tlsClientConfig:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:name:
                              .: {}
                              f:description: {}
                              f:type: {}
                          f:required: {}
                          f:type: {}
                        f:url:
                          .: {}
                          f:description: {}
                          f:maxLength: {}
                          f:pattern: {}
                          f:type: {}
                      f:type: {}
                    f:description:
                      .: {}
                      f:description: {}
                      f:maxLength: {}
                      f:minLength: {}
                      f:type: {}
                    f:name:
                      .: {}
                      f:description: {}
                      f:maxLength: {}
                      f:minLength: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:conditions:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:48Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:49Z"
    name: helmchartrepositories.helm.openshift.io
    resourceVersion: "724"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/helmchartrepositories.helm.openshift.io
    uid: d9e40c5a-88c1-4f75-98a6-32958c485dc0
  spec:
    conversion:
      strategy: None
    group: helm.openshift.io
    names:
      kind: HelmChartRepository
      listKind: HelmChartRepositoryList
      plural: helmchartrepositories
      singular: helmchartrepository
    scope: Cluster
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: HelmChartRepository holds cluster-wide configuration for proxied
            Helm chart repository
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec holds user settable values for configuration
              properties:
                connectionConfig:
                  description: Required configuration for connecting to the chart
                    repo
                  properties:
                    ca:
                      description: ca is an optional reference to a config map by
                        name containing the PEM-encoded CA bundle. It is used as a
                        trust anchor to validate the TLS certificate presented by
                        the remote server. The key "ca-bundle.crt" is used to locate
                        the data. If empty, the default system roots are used. The
                        namespace for this config map is openshift-config.
                      properties:
                        name:
                          description: name is the metadata.name of the referenced
                            config map
                          type: string
                      required:
                      - name
                      type: object
                    tlsClientConfig:
                      description: tlsClientConfig is an optional reference to a secret
                        by name that contains the PEM-encoded TLS client certificate
                        and private key to present when connecting to the server.
                        The key "tls.crt" is used to locate the client certificate.
                        The key "tls.key" is used to locate the private key. The namespace
                        for this secret is openshift-config.
                      properties:
                        name:
                          description: name is the metadata.name of the referenced
                            secret
                          type: string
                      required:
                      - name
                      type: object
                    url:
                      description: Chart repository URL
                      maxLength: 2048
                      pattern: ^https?:\/\/
                      type: string
                  type: object
                description:
                  description: Optional human readable repository description, it
                    can be used by UI for displaying purposes
                  maxLength: 2048
                  minLength: 1
                  type: string
                name:
                  description: Optional associated human readable repository name,
                    it can be used by UI for displaying purposes
                  maxLength: 100
                  minLength: 1
                  type: string
              type: object
            status:
              description: Observed status of the repository within the cluster..
              properties:
                conditions:
                  description: conditions is a list of conditions and their statuses
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: HelmChartRepository
      listKind: HelmChartRepositoryList
      plural: helmchartrepositories
      singular: helmchartrepository
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:48Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:49Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T13:05:11Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:ownerReferences:
            .: {}
            k:{"uid":"629378f9-4b6d-445e-8764-cbfb5eda542e"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:additionalPrinterColumns: {}
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:egressCIDRs:
                  .: {}
                  f:description: {}
                  f:items: {}
                  f:type: {}
                f:egressIPs:
                  .: {}
                  f:description: {}
                  f:items: {}
                  f:type: {}
                f:host:
                  .: {}
                  f:description: {}
                  f:pattern: {}
                  f:type: {}
                f:hostIP:
                  .: {}
                  f:description: {}
                  f:pattern: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:subnet:
                  .: {}
                  f:description: {}
                  f:pattern: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
          f:storedVersions: {}
      manager: cluster-network-operator
      operation: Update
      time: "2021-01-13T04:16:18Z"
    name: hostsubnets.network.openshift.io
    ownerReferences:
    - apiVersion: operator.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Network
      name: cluster
      uid: 629378f9-4b6d-445e-8764-cbfb5eda542e
    resourceVersion: "36921688"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/hostsubnets.network.openshift.io
    uid: e4a2ad24-d558-4f5c-bfdb-dc795ae677a9
  spec:
    conversion:
      strategy: None
    group: network.openshift.io
    names:
      kind: HostSubnet
      listKind: HostSubnetList
      plural: hostsubnets
      singular: hostsubnet
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - description: The name of the node
        jsonPath: .host
        name: Host
        type: string
      - description: The IP address to be used as a VTEP by other nodes in the overlay
          network
        jsonPath: .hostIP
        name: Host IP
        type: string
      - description: The CIDR range of the overlay network assigned to the node for
          its pods
        jsonPath: .subnet
        name: Subnet
        type: string
      - description: The network egress CIDRs
        jsonPath: .egressCIDRs
        name: Egress CIDRs
        type: string
      - description: The network egress IP addresses
        jsonPath: .egressIPs
        name: Egress IPs
        type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: HostSubnet describes the container subnet network on a node.
            The HostSubnet object must have the same name as the Node object it corresponds
            to.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            egressCIDRs:
              description: EgressCIDRs is the list of CIDR ranges available for automatically
                assigning egress IPs to this node from. If this field is set then
                EgressIPs should be treated as read-only.
              items:
                pattern: ^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/([0-9]|[12][0-9]|3[0-2])$
                type: string
              type: array
            egressIPs:
              description: EgressIPs is the list of automatic egress IP addresses
                currently hosted by this node. If EgressCIDRs is empty, this can be
                set by hand; if EgressCIDRs is set then the master will overwrite
                the value here with its own allocation of egress IPs.
              items:
                pattern: ^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
                type: string
              type: array
            host:
              description: Host is the name of the node. (This is the same as the
                object's name, but both fields must be set.)
              pattern: ^[a-z0-9.-]+$
              type: string
            hostIP:
              description: HostIP is the IP address to be used as a VTEP by other
                nodes in the overlay network
              pattern: ^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            subnet:
              description: Subnet is the CIDR range of the overlay network assigned
                to the node for its pods
              pattern: ^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/([0-9]|[12][0-9]|3[0-2])$
              type: string
          required:
          - host
          - hostIP
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: HostSubnet
      listKind: HostSubnetList
      plural: hostsubnets
      singular: hostsubnet
    conditions:
    - lastTransitionTime: "2020-11-18T13:05:11Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T13:05:11Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:32Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:repositoryDigestMirrors:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:32Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:32Z"
    name: imagecontentsourcepolicies.operator.openshift.io
    resourceVersion: "331"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/imagecontentsourcepolicies.operator.openshift.io
    uid: 8ed42f15-9c8a-4593-a791-b00fe28d5ad6
  spec:
    conversion:
      strategy: None
    group: operator.openshift.io
    names:
      kind: ImageContentSourcePolicy
      listKind: ImageContentSourcePolicyList
      plural: imagecontentsourcepolicies
      singular: imagecontentsourcepolicy
    scope: Cluster
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ImageContentSourcePolicy holds cluster-wide information about
            how to handle registry mirror rules. When multiple policies are defined,
            the outcome of the behavior is defined on each field.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec holds user settable values for configuration
              properties:
                repositoryDigestMirrors:
                  description: "repositoryDigestMirrors allows images referenced by
                    image digests in pods to be pulled from alternative mirrored repository
                    locations. The image pull specification provided to the pod will
                    be compared to the source locations described in RepositoryDigestMirrors
                    and the image may be pulled down from any of the mirrors in the
                    list instead of the specified repository allowing administrators
                    to choose a potentially faster mirror. Only image pull specifications
                    that have an image disgest will have this behavior applied to
                    them - tags will continue to be pulled from the specified repository
                    in the pull spec. \n Each “source” repository is treated independently;
                    configurations for different “source” repositories don’t interact.
                    \n When multiple policies are defined for the same “source” repository,
                    the sets of defined mirrors will be merged together, preserving
                    the relative order of the mirrors, if possible. For example, if
                    policy A has mirrors `a, b, c` and policy B has mirrors `c, d,
                    e`, the mirrors will be used in the order `a, b, c, d, e`.  If
                    the orders of mirror entries conflict (e.g. `a, b` vs. `b, a`)
                    the configuration is not rejected but the resulting order is unspecified."
                  items:
                    description: 'RepositoryDigestMirrors holds cluster-wide information
                      about how to handle mirros in the registries config. Note: the
                      mirrors only work when pulling the images that are referenced
                      by their digests.'
                    properties:
                      mirrors:
                        description: mirrors is one or more repositories that may
                          also contain the same images. The order of mirrors in this
                          list is treated as the user's desired priority, while source
                          is by default considered lower priority than all mirrors.
                          Other cluster configuration, including (but not limited
                          to) other repositoryDigestMirrors objects, may impact the
                          exact order mirrors are contacted in, or some mirrors may
                          be contacted in parallel, so this should be considered a
                          preference rather than a guarantee of ordering.
                        items:
                          type: string
                        type: array
                      source:
                        description: source is the repository that users refer to,
                          e.g. in image pull specifications.
                        type: string
                    required:
                    - source
                    type: object
                  type: array
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ImageContentSourcePolicy
      listKind: ImageContentSourcePolicyList
      plural: imagecontentsourcepolicies
      singular: imagecontentsourcepolicy
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:32Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:32Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T12:58:51Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:51Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:51Z"
    name: imagepruners.imageregistry.operator.openshift.io
    resourceVersion: "825"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/imagepruners.imageregistry.operator.openshift.io
    uid: 819a3bbb-4f32-41b0-b6d2-6ff49a718829
  spec:
    conversion:
      strategy: None
    group: imageregistry.operator.openshift.io
    names:
      kind: ImagePruner
      listKind: ImagePrunerList
      plural: imagepruners
      singular: imagepruner
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: ImagePruner is the configuration object for an image registry
            pruner managed by the registry operator.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ImagePrunerSpec defines the specs for the running image
                pruner.
              properties:
                affinity:
                  description: affinity is a group of node affinity scheduling rules
                    for the image pruner pod.
                  properties:
                    nodeAffinity:
                      description: Describes node affinity scheduling rules for the
                        pod.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            matches the corresponding matchExpressions; the node(s)
                            with the highest sum are the most preferred.
                          items:
                            description: An empty preferred scheduling term matches
                              all objects with implicit weight 0 (i.e. it's a no-op).
                              A null preferred scheduling term matches no objects
                              (i.e. is also a no-op).
                            properties:
                              preference:
                                description: A node selector term, associated with
                                  the corresponding weight.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              weight:
                                description: Weight associated with matching the corresponding
                                  nodeSelectorTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - preference
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by this
                            field are not met at scheduling time, the pod will not
                            be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to an update), the system
                            may or may not try to eventually evict the pod from its
                            node.
                          properties:
                            nodeSelectorTerms:
                              description: Required. A list of node selector terms.
                                The terms are ORed.
                              items:
                                description: A null or empty node selector term matches
                                  no objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a subset
                                  of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              type: array
                          required:
                          - nodeSelectorTerms
                          type: object
                      type: object
                    podAffinity:
                      description: Describes pod affinity scheduling rules (e.g. co-locate
                        this pod in the same node, zone, etc. as some other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            has pods which matches the corresponding podAffinityTerm;
                            the node(s) with the highest sum are the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Required. A pod affinity term, associated
                                  with the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - podAffinityTerm
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by this
                            field are not met at scheduling time, the pod will not
                            be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to a pod label update),
                            the system may or may not try to eventually evict the
                            pod from its node. When there are multiple elements, the
                            lists of nodes corresponding to each podAffinityTerm are
                            intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label query over a set of resources,
                                  in this case pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      description: Describes pod anti-affinity scheduling rules (e.g.
                        avoid putting this pod in the same node, zone, etc. as some
                        other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the anti-affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling anti-affinity
                            expressions, etc.), compute a sum by iterating through
                            the elements of this field and adding "weight" to the
                            sum if the node has pods which matches the corresponding
                            podAffinityTerm; the node(s) with the highest sum are
                            the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Required. A pod affinity term, associated
                                  with the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - podAffinityTerm
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the anti-affinity requirements specified
                            by this field are not met at scheduling time, the pod
                            will not be scheduled onto the node. If the anti-affinity
                            requirements specified by this field cease to be met at
                            some point during pod execution (e.g. due to a pod label
                            update), the system may or may not try to eventually evict
                            the pod from its node. When there are multiple elements,
                            the lists of nodes corresponding to each podAffinityTerm
                            are intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label query over a set of resources,
                                  in this case pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                  type: object
                failedJobsHistoryLimit:
                  description: failedJobsHistoryLimit specifies how many failed image
                    pruner jobs to retain. Defaults to 3 if not set.
                  format: int32
                  type: integer
                ignoreInvalidImageReferences:
                  description: ignoreInvalidImageReferences indicates whether the
                    pruner can ignore errors while parsing image references.
                  type: boolean
                keepTagRevisions:
                  description: keepTagRevisions specifies the number of image revisions
                    for a tag in an image stream that will be preserved. Defaults
                    to 3.
                  type: integer
                keepYoungerThan:
                  description: 'keepYoungerThan specifies the minimum age in nanoseconds
                    of an image and its referrers for it to be considered a candidate
                    for pruning. DEPRECATED: This field is deprecated in favor of
                    keepYoungerThanDuration. If both are set, this field is ignored
                    and keepYoungerThanDuration takes precedence.'
                  format: int64
                  type: integer
                keepYoungerThanDuration:
                  description: keepYoungerThanDuration specifies the minimum age of
                    an image and its referrers for it to be considered a candidate
                    for pruning. Defaults to 60m (60 minutes).
                  format: duration
                  type: string
                logLevel:
                  default: Normal
                  description: "logLevel sets the level of log output for the pruner
                    job. \n Valid values are: \"Normal\", \"Debug\", \"Trace\", \"TraceAll\".
                    Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: nodeSelector defines the node selection constraints
                    for the image pruner pod.
                  type: object
                resources:
                  description: resources defines the resource requests and limits
                    for the image pruner pod.
                  properties:
                    limits:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                schedule:
                  description: 'schedule specifies when to execute the job using standard
                    cronjob syntax: https://wikipedia.org/wiki/Cron. Defaults to `0
                    0 * * *`.'
                  type: string
                successfulJobsHistoryLimit:
                  description: successfulJobsHistoryLimit specifies how many successful
                    image pruner jobs to retain. Defaults to 3 if not set.
                  format: int32
                  type: integer
                suspend:
                  description: suspend specifies whether or not to suspend subsequent
                    executions of this cronjob. Defaults to false.
                  type: boolean
                tolerations:
                  description: tolerations defines the node tolerations for the image
                    pruner pod.
                  items:
                    description: The pod this Toleration is attached to tolerates
                      any taint that matches the triple <key,value,effect> using the
                      matching operator <operator>.
                    properties:
                      effect:
                        description: Effect indicates the taint effect to match. Empty
                          means match all taint effects. When specified, allowed values
                          are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Key is the taint key that the toleration applies
                          to. Empty means match all taint keys. If the key is empty,
                          operator must be Exists; this combination means to match
                          all values and all keys.
                        type: string
                      operator:
                        description: Operator represents a key's relationship to the
                          value. Valid operators are Exists and Equal. Defaults to
                          Equal. Exists is equivalent to wildcard for value, so that
                          a pod can tolerate all taints of a particular category.
                        type: string
                      tolerationSeconds:
                        description: TolerationSeconds represents the period of time
                          the toleration (which must be of effect NoExecute, otherwise
                          this field is ignored) tolerates the taint. By default,
                          it is not set, which means tolerate the taint forever (do
                          not evict). Zero and negative values will be treated as
                          0 (evict immediately) by the system.
                        format: int64
                        type: integer
                      value:
                        description: Value is the taint value the toleration matches
                          to. If the operator is Exists, the value should be empty,
                          otherwise just a regular string.
                        type: string
                    type: object
                  type: array
              type: object
            status:
              description: ImagePrunerStatus reports image pruner operational status.
              properties:
                conditions:
                  description: conditions is a list of conditions and their status.
                  items:
                    description: OperatorCondition is just the standard condition
                      fields.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration is the last generation change that
                    has been applied.
                  format: int64
                  type: integer
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ImagePruner
      listKind: ImagePrunerList
      plural: imagepruners
      singular: imagepruner
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"default","app.kubernetes.io/part-of":"tekton-pipelines","knative.dev/crd-install":"true"},"name":"images.caching.internal.knative.dev"},"spec":{"group":"caching.internal.knative.dev","names":{"categories":["knative-internal","caching"],"kind":"Image","plural":"images","shortNames":["img"],"singular":"image"},"scope":"Namespaced","subresources":{"status":{}},"version":"v1alpha1"}}
    creationTimestamp: "2020-12-01T17:28:10Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines
      knative.dev/crd-install: "true"
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-12-01T17:28:10Z"
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:knative.dev/crd-install: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: oc
      operation: Update
      time: "2020-12-01T17:28:10Z"
    name: images.caching.internal.knative.dev
    resourceVersion: "5635246"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/images.caching.internal.knative.dev
    uid: e51d54f2-e9bd-45d2-9ca5-6891b4ce7830
  spec:
    conversion:
      strategy: None
    group: caching.internal.knative.dev
    names:
      categories:
      - knative-internal
      - caching
      kind: Image
      listKind: ImageList
      plural: images
      shortNames:
      - img
      singular: image
    preserveUnknownFields: true
    scope: Namespaced
    versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - knative-internal
      - caching
      kind: Image
      listKind: ImageList
      plural: images
      shortNames:
      - img
      singular: image
    conditions:
    - lastTransitionTime: "2020-12-01T17:28:10Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-12-01T17:28:10Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:32Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:additionalTrustedCA:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:name:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:required: {}
                      f:type: {}
                    f:allowedRegistriesForImport:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:externalRegistryHostnames:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:registrySources:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:allowedRegistries:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                        f:blockedRegistries:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                        f:insecureRegistries:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:externalRegistryHostnames:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:internalRegistryHostname:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:32Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:32Z"
    name: images.config.openshift.io
    resourceVersion: "325"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/images.config.openshift.io
    uid: 878e1c8a-cfe8-4bc5-bce0-c7b68eb59c9c
  spec:
    conversion:
      strategy: None
    group: config.openshift.io
    names:
      kind: Image
      listKind: ImageList
      plural: images
      singular: image
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Image governs policies related to imagestream imports and runtime
            configuration for external registries. It allows cluster admins to configure
            which registries OpenShift is allowed to import images from, extra CA
            trust bundles for external registries, and policies to block or allow
            registry hostnames. When exposing OpenShift's image registry to the public,
            this also lets cluster admins specify the external hostname.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec holds user settable values for configuration
              properties:
                additionalTrustedCA:
                  description: additionalTrustedCA is a reference to a ConfigMap containing
                    additional CAs that should be trusted during imagestream import,
                    pod image pull, build image pull, and imageregistry pullthrough.
                    The namespace for this config map is openshift-config.
                  properties:
                    name:
                      description: name is the metadata.name of the referenced config
                        map
                      type: string
                  required:
                  - name
                  type: object
                allowedRegistriesForImport:
                  description: allowedRegistriesForImport limits the container image
                    registries that normal users may import images from. Set this
                    list to the registries that you trust to contain valid Docker
                    images and that you want applications to be able to import from.
                    Users with permission to create Images or ImageStreamMappings
                    via the API are not affected by this policy - typically only administrators
                    or system integrations will have those permissions.
                  items:
                    description: RegistryLocation contains a location of the registry
                      specified by the registry domain name. The domain name might
                      include wildcards, like '*' or '??'.
                    properties:
                      domainName:
                        description: domainName specifies a domain name for the registry
                          In case the registry use non-standard (80 or 443) port,
                          the port should be included in the domain name as well.
                        type: string
                      insecure:
                        description: insecure indicates whether the registry is secure
                          (https) or insecure (http) By default (if not specified)
                          the registry is assumed as secure.
                        type: boolean
                    type: object
                  type: array
                externalRegistryHostnames:
                  description: externalRegistryHostnames provides the hostnames for
                    the default external image registry. The external hostname should
                    be set only when the image registry is exposed externally. The
                    first value is used in 'publicDockerImageRepository' field in
                    ImageStreams. The value must be in "hostname[:port]" format.
                  items:
                    type: string
                  type: array
                registrySources:
                  description: registrySources contains configuration that determines
                    how the container runtime should treat individual registries when
                    accessing images for builds+pods. (e.g. whether or not to allow
                    insecure access).  It does not contain configuration for the internal
                    cluster registry.
                  properties:
                    allowedRegistries:
                      description: "allowedRegistries are the only registries permitted
                        for image pull and push actions. All other registries are
                        denied. \n Only one of BlockedRegistries or AllowedRegistries
                        may be set."
                      items:
                        type: string
                      type: array
                    blockedRegistries:
                      description: "blockedRegistries cannot be used for image pull
                        and push actions. All other registries are permitted. \n Only
                        one of BlockedRegistries or AllowedRegistries may be set."
                      items:
                        type: string
                      type: array
                    insecureRegistries:
                      description: insecureRegistries are registries which do not
                        have a valid TLS certificates or only support HTTP connections.
                      items:
                        type: string
                      type: array
                  type: object
              type: object
            status:
              description: status holds observed values from the cluster. They may
                not be overridden.
              properties:
                externalRegistryHostnames:
                  description: externalRegistryHostnames provides the hostnames for
                    the default external image registry. The external hostname should
                    be set only when the image registry is exposed externally. The
                    first value is used in 'publicDockerImageRepository' field in
                    ImageStreams. The value must be in "hostname[:port]" format.
                  items:
                    type: string
                  type: array
                internalRegistryHostname:
                  description: internalRegistryHostname sets the hostname for the
                    default internal image registry. The value must be in "hostname[:port]"
                    format. This value is set by the image registry operator which
                    controls the internal registry hostname. For backward compatibility,
                    users can still use OPENSHIFT_DEFAULT_REGISTRY environment variable
                    but this setting overrides the environment variable.
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Image
      listKind: ImageList
      plural: images
      singular: image
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:32Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:32Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:32Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:cloudConfig:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:key:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:name:
                          .: {}
                          f:type: {}
                      f:type: {}
                    f:platformSpec:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:aws:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:serviceEndpoints:
                              .: {}
                              f:description: {}
                              f:items: {}
                              f:type: {}
                          f:type: {}
                        f:azure:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:baremetal:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:gcp:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:ibmcloud:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:openstack:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:ovirt:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:type:
                          .: {}
                          f:description: {}
                          f:enum: {}
                          f:type: {}
                        f:vsphere:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:apiServerInternalURI:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:apiServerURL:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:etcdDiscoveryDomain:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:infrastructureName:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:platform:
                      .: {}
                      f:description: {}
                      f:enum: {}
                      f:type: {}
                    f:platformStatus:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:aws:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:region:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:serviceEndpoints:
                              .: {}
                              f:description: {}
                              f:items: {}
                              f:type: {}
                          f:type: {}
                        f:azure:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:cloudName:
                              .: {}
                              f:description: {}
                              f:enum: {}
                              f:type: {}
                            f:networkResourceGroupName:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:resourceGroupName:
                              .: {}
                              f:description: {}
                              f:type: {}
                          f:type: {}
                        f:baremetal:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:apiServerInternalIP:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:ingressIP:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:nodeDNSIP:
                              .: {}
                              f:description: {}
                              f:type: {}
                          f:type: {}
                        f:gcp:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:projectID:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:region:
                              .: {}
                              f:description: {}
                              f:type: {}
                          f:type: {}
                        f:ibmcloud:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:location:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:providerType:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:resourceGroupName:
                              .: {}
                              f:description: {}
                              f:type: {}
                          f:type: {}
                        f:openstack:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:apiServerInternalIP:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:cloudName:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:ingressIP:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:nodeDNSIP:
                              .: {}
                              f:description: {}
                              f:type: {}
                          f:type: {}
                        f:ovirt:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:apiServerInternalIP:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:ingressIP:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:nodeDNSIP:
                              .: {}
                              f:description: {}
                              f:type: {}
                          f:type: {}
                        f:type:
                          .: {}
                          f:description: {}
                          f:enum: {}
                          f:type: {}
                        f:vsphere:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:apiServerInternalIP:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:ingressIP:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:nodeDNSIP:
                              .: {}
                              f:description: {}
                              f:type: {}
                          f:type: {}
                      f:type: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:32Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:32Z"
    name: infrastructures.config.openshift.io
    resourceVersion: "336"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/infrastructures.config.openshift.io
    uid: f59d7446-5089-44c8-9b96-3b5cfd8f1424
  spec:
    conversion:
      strategy: None
    group: config.openshift.io
    names:
      kind: Infrastructure
      listKind: InfrastructureList
      plural: infrastructures
      singular: infrastructure
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Infrastructure holds cluster-wide information about Infrastructure.  The
            canonical name is `cluster`
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec holds user settable values for configuration
              properties:
                cloudConfig:
                  description: "cloudConfig is a reference to a ConfigMap containing
                    the cloud provider configuration file. This configuration file
                    is used to configure the Kubernetes cloud provider integration
                    when using the built-in cloud provider integration or the external
                    cloud controller manager. The namespace for this config map is
                    openshift-config. \n cloudConfig should only be consumed by the
                    kube_cloud_config controller. The controller is responsible for
                    using the user configuration in the spec for various platforms
                    and combining that with the user provided ConfigMap in this field
                    to create a stitched kube cloud config. The controller generates
                    a ConfigMap `kube-cloud-config` in `openshift-config-managed`
                    namespace with the kube cloud config is stored in `cloud.conf`
                    key. All the clients are expected to use the generated ConfigMap
                    only."
                  properties:
                    key:
                      description: Key allows pointing to a specific key/value inside
                        of the configmap.  This is useful for logical file references.
                      type: string
                    name:
                      type: string
                  type: object
                platformSpec:
                  description: platformSpec holds desired information specific to
                    the underlying infrastructure provider.
                  properties:
                    aws:
                      description: AWS contains settings specific to the Amazon Web
                        Services infrastructure provider.
                      properties:
                        serviceEndpoints:
                          description: serviceEndpoints list contains custom endpoints
                            which will override default service endpoint of AWS Services.
                            There must be only one ServiceEndpoint for a service.
                          items:
                            description: AWSServiceEndpoint store the configuration
                              of a custom url to override existing defaults of AWS
                              Services.
                            properties:
                              name:
                                description: name is the name of the AWS service.
                                  The list of all the service names can be found at
                                  https://docs.aws.amazon.com/general/latest/gr/aws-service-information.html
                                  This must be provided and cannot be empty.
                                pattern: ^[a-z0-9-]+$
                                type: string
                              url:
                                description: url is fully qualified URI with scheme
                                  https, that overrides the default generated endpoint
                                  for a client. This must be provided and cannot be
                                  empty.
                                pattern: ^https://
                                type: string
                            type: object
                          type: array
                      type: object
                    azure:
                      description: Azure contains settings specific to the Azure infrastructure
                        provider.
                      type: object
                    baremetal:
                      description: BareMetal contains settings specific to the BareMetal
                        platform.
                      type: object
                    gcp:
                      description: GCP contains settings specific to the Google Cloud
                        Platform infrastructure provider.
                      type: object
                    ibmcloud:
                      description: IBMCloud contains settings specific to the IBMCloud
                        infrastructure provider.
                      type: object
                    openstack:
                      description: OpenStack contains settings specific to the OpenStack
                        infrastructure provider.
                      type: object
                    ovirt:
                      description: Ovirt contains settings specific to the oVirt infrastructure
                        provider.
                      type: object
                    type:
                      description: type is the underlying infrastructure provider
                        for the cluster. This value controls whether infrastructure
                        automation such as service load balancers, dynamic volume
                        provisioning, machine creation and deletion, and other integrations
                        are enabled. If None, no infrastructure automation is enabled.
                        Allowed values are "AWS", "Azure", "BareMetal", "GCP", "Libvirt",
                        "OpenStack", "VSphere", "oVirt", and "None". Individual components
                        may not support all platforms, and must handle unrecognized
                        platforms as None if they do not support that platform.
                      enum:
                      - ""
                      - AWS
                      - Azure
                      - BareMetal
                      - GCP
                      - Libvirt
                      - OpenStack
                      - None
                      - VSphere
                      - oVirt
                      - IBMCloud
                      type: string
                    vsphere:
                      description: VSphere contains settings specific to the VSphere
                        infrastructure provider.
                      type: object
                  type: object
              type: object
            status:
              description: status holds observed values from the cluster. They may
                not be overridden.
              properties:
                apiServerInternalURI:
                  description: apiServerInternalURL is a valid URI with scheme 'https',
                    address and optionally a port (defaulting to 443).  apiServerInternalURL
                    can be used by components like kubelets, to contact the Kubernetes
                    API server using the infrastructure provider rather than Kubernetes
                    networking.
                  type: string
                apiServerURL:
                  description: apiServerURL is a valid URI with scheme 'https', address
                    and optionally a port (defaulting to 443).  apiServerURL can be
                    used by components like the web console to tell users where to
                    find the Kubernetes API.
                  type: string
                etcdDiscoveryDomain:
                  description: 'etcdDiscoveryDomain is the domain used to fetch the
                    SRV records for discovering etcd servers and clients. For more
                    info: https://github.com/etcd-io/etcd/blob/329be66e8b3f9e2e6af83c123ff89297e49ebd15/Documentation/op-guide/clustering.md#dns-discovery'
                  type: string
                infrastructureName:
                  description: infrastructureName uniquely identifies a cluster with
                    a human friendly name. Once set it should not be changed. Must
                    be of max length 27 and must have only alphanumeric or hyphen
                    characters.
                  type: string
                platform:
                  description: "platform is the underlying infrastructure provider
                    for the cluster. \n Deprecated: Use platformStatus.type instead."
                  enum:
                  - ""
                  - AWS
                  - Azure
                  - BareMetal
                  - GCP
                  - Libvirt
                  - OpenStack
                  - None
                  - VSphere
                  - oVirt
                  - IBMCloud
                  type: string
                platformStatus:
                  description: platformStatus holds status information specific to
                    the underlying infrastructure provider.
                  properties:
                    aws:
                      description: AWS contains settings specific to the Amazon Web
                        Services infrastructure provider.
                      properties:
                        region:
                          description: region holds the default AWS region for new
                            AWS resources created by the cluster.
                          type: string
                        serviceEndpoints:
                          description: ServiceEndpoints list contains custom endpoints
                            which will override default service endpoint of AWS Services.
                            There must be only one ServiceEndpoint for a service.
                          items:
                            description: AWSServiceEndpoint store the configuration
                              of a custom url to override existing defaults of AWS
                              Services.
                            properties:
                              name:
                                description: name is the name of the AWS service.
                                  The list of all the service names can be found at
                                  https://docs.aws.amazon.com/general/latest/gr/aws-service-information.html
                                  This must be provided and cannot be empty.
                                pattern: ^[a-z0-9-]+$
                                type: string
                              url:
                                description: url is fully qualified URI with scheme
                                  https, that overrides the default generated endpoint
                                  for a client. This must be provided and cannot be
                                  empty.
                                pattern: ^https://
                                type: string
                            type: object
                          type: array
                      type: object
                    azure:
                      description: Azure contains settings specific to the Azure infrastructure
                        provider.
                      properties:
                        cloudName:
                          description: cloudName is the name of the Azure cloud environment
                            which can be used to configure the Azure SDK with the
                            appropriate Azure API endpoints. If empty, the value is
                            equal to `AzurePublicCloud`.
                          enum:
                          - ""
                          - AzurePublicCloud
                          - AzureUSGovernmentCloud
                          - AzureChinaCloud
                          - AzureGermanCloud
                          type: string
                        networkResourceGroupName:
                          description: networkResourceGroupName is the Resource Group
                            for network resources like the Virtual Network and Subnets
                            used by the cluster. If empty, the value is same as ResourceGroupName.
                          type: string
                        resourceGroupName:
                          description: resourceGroupName is the Resource Group for
                            new Azure resources created for the cluster.
                          type: string
                      type: object
                    baremetal:
                      description: BareMetal contains settings specific to the BareMetal
                        platform.
                      properties:
                        apiServerInternalIP:
                          description: apiServerInternalIP is an IP address to contact
                            the Kubernetes API server that can be used by components
                            inside the cluster, like kubelets using the infrastructure
                            rather than Kubernetes networking. It is the IP that the
                            Infrastructure.status.apiServerInternalURI points to.
                            It is the IP for a self-hosted load balancer in front
                            of the API servers.
                          type: string
                        ingressIP:
                          description: ingressIP is an external IP which routes to
                            the default ingress controller. The IP is a suitable target
                            of a wildcard DNS record used to resolve default route
                            host names.
                          type: string
                        nodeDNSIP:
                          description: nodeDNSIP is the IP address for the internal
                            DNS used by the nodes. Unlike the one managed by the DNS
                            operator, `NodeDNSIP` provides name resolution for the
                            nodes themselves. There is no DNS-as-a-service for BareMetal
                            deployments. In order to minimize necessary changes to
                            the datacenter DNS, a DNS service is hosted as a static
                            pod to serve those hostnames to the nodes in the cluster.
                          type: string
                      type: object
                    gcp:
                      description: GCP contains settings specific to the Google Cloud
                        Platform infrastructure provider.
                      properties:
                        projectID:
                          description: resourceGroupName is the Project ID for new
                            GCP resources created for the cluster.
                          type: string
                        region:
                          description: region holds the region for new GCP resources
                            created for the cluster.
                          type: string
                      type: object
                    ibmcloud:
                      description: IBMCloud contains settings specific to the IBMCloud
                        infrastructure provider.
                      properties:
                        location:
                          description: Location is where the cluster has been deployed
                          type: string
                        providerType:
                          description: ProviderType indicates the type of cluster
                            that was created
                          type: string
                        resourceGroupName:
                          description: ResourceGroupName is the Resource Group for
                            new IBMCloud resources created for the cluster.
                          type: string
                      type: object
                    openstack:
                      description: OpenStack contains settings specific to the OpenStack
                        infrastructure provider.
                      properties:
                        apiServerInternalIP:
                          description: apiServerInternalIP is an IP address to contact
                            the Kubernetes API server that can be used by components
                            inside the cluster, like kubelets using the infrastructure
                            rather than Kubernetes networking. It is the IP that the
                            Infrastructure.status.apiServerInternalURI points to.
                            It is the IP for a self-hosted load balancer in front
                            of the API servers.
                          type: string
                        cloudName:
                          description: cloudName is the name of the desired OpenStack
                            cloud in the client configuration file (`clouds.yaml`).
                          type: string
                        ingressIP:
                          description: ingressIP is an external IP which routes to
                            the default ingress controller. The IP is a suitable target
                            of a wildcard DNS record used to resolve default route
                            host names.
                          type: string
                        nodeDNSIP:
                          description: nodeDNSIP is the IP address for the internal
                            DNS used by the nodes. Unlike the one managed by the DNS
                            operator, `NodeDNSIP` provides name resolution for the
                            nodes themselves. There is no DNS-as-a-service for OpenStack
                            deployments. In order to minimize necessary changes to
                            the datacenter DNS, a DNS service is hosted as a static
                            pod to serve those hostnames to the nodes in the cluster.
                          type: string
                      type: object
                    ovirt:
                      description: Ovirt contains settings specific to the oVirt infrastructure
                        provider.
                      properties:
                        apiServerInternalIP:
                          description: apiServerInternalIP is an IP address to contact
                            the Kubernetes API server that can be used by components
                            inside the cluster, like kubelets using the infrastructure
                            rather than Kubernetes networking. It is the IP that the
                            Infrastructure.status.apiServerInternalURI points to.
                            It is the IP for a self-hosted load balancer in front
                            of the API servers.
                          type: string
                        ingressIP:
                          description: ingressIP is an external IP which routes to
                            the default ingress controller. The IP is a suitable target
                            of a wildcard DNS record used to resolve default route
                            host names.
                          type: string
                        nodeDNSIP:
                          description: 'deprecated: as of 4.6, this field is no longer
                            set or honored.  It will be removed in a future release.'
                          type: string
                      type: object
                    type:
                      description: "type is the underlying infrastructure provider
                        for the cluster. This value controls whether infrastructure
                        automation such as service load balancers, dynamic volume
                        provisioning, machine creation and deletion, and other integrations
                        are enabled. If None, no infrastructure automation is enabled.
                        Allowed values are \"AWS\", \"Azure\", \"BareMetal\", \"GCP\",
                        \"Libvirt\", \"OpenStack\", \"VSphere\", \"oVirt\", and \"None\".
                        Individual components may not support all platforms, and must
                        handle unrecognized platforms as None if they do not support
                        that platform. \n This value will be synced with to the `status.platform`
                        and `status.platformStatus.type`. Currently this value cannot
                        be changed once set."
                      enum:
                      - ""
                      - AWS
                      - Azure
                      - BareMetal
                      - GCP
                      - Libvirt
                      - OpenStack
                      - None
                      - VSphere
                      - oVirt
                      - IBMCloud
                      type: string
                    vsphere:
                      description: VSphere contains settings specific to the VSphere
                        infrastructure provider.
                      properties:
                        apiServerInternalIP:
                          description: apiServerInternalIP is an IP address to contact
                            the Kubernetes API server that can be used by components
                            inside the cluster, like kubelets using the infrastructure
                            rather than Kubernetes networking. It is the IP that the
                            Infrastructure.status.apiServerInternalURI points to.
                            It is the IP for a self-hosted load balancer in front
                            of the API servers.
                          type: string
                        ingressIP:
                          description: ingressIP is an external IP which routes to
                            the default ingress controller. The IP is a suitable target
                            of a wildcard DNS record used to resolve default route
                            host names.
                          type: string
                        nodeDNSIP:
                          description: nodeDNSIP is the IP address for the internal
                            DNS used by the nodes. Unlike the one managed by the DNS
                            operator, `NodeDNSIP` provides name resolution for the
                            nodes themselves. There is no DNS-as-a-service for vSphere
                            deployments. In order to minimize necessary changes to
                            the datacenter DNS, a DNS service is hosted as a static
                            pod to serve those hostnames to the nodes in the cluster.
                          type: string
                      type: object
                  type: object
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Infrastructure
      listKind: InfrastructureList
      plural: infrastructures
      singular: infrastructure
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:32Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:32Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:35Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:35Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:36Z"
    name: ingresscontrollers.operator.openshift.io
    resourceVersion: "488"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/ingresscontrollers.operator.openshift.io
    uid: 5eee1cde-ab4e-46ea-97ef-063b8970b650
  spec:
    conversion:
      strategy: None
    group: operator.openshift.io
    names:
      kind: IngressController
      listKind: IngressControllerList
      plural: ingresscontrollers
      singular: ingresscontroller
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: "IngressController describes a managed ingress controller for
            the cluster. The controller can service OpenShift Route and Kubernetes
            Ingress resources. \n When an IngressController is created, a new ingress
            controller deployment is created to allow external traffic to reach the
            services that expose Ingress or Route resources. Updating this resource
            may lead to disruption for public facing network connections as a new
            ingress controller revision may be rolled out. \n https://kubernetes.io/docs/concepts/services-networking/ingress-controllers
            \n Whenever possible, sensible defaults for the platform are used. See
            each field for more details."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec is the specification of the desired behavior of the
                IngressController.
              properties:
                defaultCertificate:
                  description: "defaultCertificate is a reference to a secret containing
                    the default certificate served by the ingress controller. When
                    Routes don't specify their own certificate, defaultCertificate
                    is used. \n The secret must contain the following keys and data:
                    \n   tls.crt: certificate file contents   tls.key: key file contents
                    \n If unset, a wildcard certificate is automatically generated
                    and used. The certificate is valid for the ingress controller
                    domain (and subdomains) and the generated certificate's CA will
                    be automatically integrated with the cluster's trust store. \n
                    If a wildcard certificate is used and shared by multiple HTTP/2
                    enabled routes (which implies ALPN) then clients (i.e., notably
                    browsers) are at liberty to reuse open connections. This means
                    a client can reuse a connection to another route and that is likely
                    to fail. This behaviour is generally known as connection coalescing.
                    \n The in-use certificate (whether generated or user-specified)
                    will be automatically integrated with OpenShift's built-in OAuth
                    server."
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                domain:
                  description: "domain is a DNS name serviced by the ingress controller
                    and is used to configure multiple features: \n * For the LoadBalancerService
                    endpoint publishing strategy, domain is   used to configure DNS
                    records. See endpointPublishingStrategy. \n * When using a generated
                    default certificate, the certificate will be valid   for domain
                    and its subdomains. See defaultCertificate. \n * The value is
                    published to individual Route statuses so that end-users   know
                    where to target external DNS records. \n domain must be unique
                    among all IngressControllers, and cannot be updated. \n If empty,
                    defaults to ingress.config.openshift.io/cluster .spec.domain."
                  type: string
                endpointPublishingStrategy:
                  description: "endpointPublishingStrategy is used to publish the
                    ingress controller endpoints to other networks, enable load balancer
                    integrations, etc. \n If unset, the default is based on infrastructure.config.openshift.io/cluster
                    .status.platform: \n   AWS:      LoadBalancerService (with External
                    scope)   Azure:    LoadBalancerService (with External scope)   GCP:
                    \     LoadBalancerService (with External scope)   IBMCloud: LoadBalancerService
                    (with External scope)   Libvirt:  HostNetwork \n Any other platform
                    types (including None) default to HostNetwork. \n endpointPublishingStrategy
                    cannot be updated."
                  properties:
                    hostNetwork:
                      description: hostNetwork holds parameters for the HostNetwork
                        endpoint publishing strategy. Present only if type is HostNetwork.
                      type: object
                    loadBalancer:
                      description: loadBalancer holds parameters for the load balancer.
                        Present only if type is LoadBalancerService.
                      properties:
                        providerParameters:
                          description: "providerParameters holds desired load balancer
                            information specific to the underlying infrastructure
                            provider. \n If empty, defaults will be applied. See specific
                            providerParameters fields for details about their defaults."
                          properties:
                            aws:
                              description: "aws provides configuration settings that
                                are specific to AWS load balancers. \n If empty, defaults
                                will be applied. See specific aws fields for details
                                about their defaults."
                              properties:
                                classicLoadBalancer:
                                  description: classicLoadBalancerParameters holds
                                    configuration parameters for an AWS classic load
                                    balancer. Present only if type is Classic.
                                  type: object
                                networkLoadBalancer:
                                  description: networkLoadBalancerParameters holds
                                    configuration parameters for an AWS network load
                                    balancer. Present only if type is NLB.
                                  type: object
                                type:
                                  description: "type is the type of AWS load balancer
                                    to instantiate for an ingresscontroller. \n Valid
                                    values are: \n * \"Classic\": A Classic Load Balancer
                                    that makes routing decisions at either   the transport
                                    layer (TCP/SSL) or the application layer (HTTP/HTTPS).
                                    See   the following for additional details: \n
                                    \    https://docs.aws.amazon.com/AmazonECS/latest/developerguide/load-balancer-types.html#clb
                                    \n * \"NLB\": A Network Load Balancer that makes
                                    routing decisions at the   transport layer (TCP/SSL).
                                    See the following for additional details: \n     https://docs.aws.amazon.com/AmazonECS/latest/developerguide/load-balancer-types.html#nlb"
                                  enum:
                                  - Classic
                                  - NLB
                                  type: string
                              required:
                              - type
                              type: object
                            type:
                              description: type is the underlying infrastructure provider
                                for the load balancer. Allowed values are "AWS", "Azure",
                                "BareMetal", "GCP", "OpenStack", and "VSphere".
                              enum:
                              - AWS
                              - Azure
                              - BareMetal
                              - GCP
                              - OpenStack
                              - VSphere
                              - IBM
                              type: string
                          required:
                          - type
                          type: object
                        scope:
                          description: scope indicates the scope at which the load
                            balancer is exposed. Possible values are "External" and
                            "Internal".
                          enum:
                          - Internal
                          - External
                          type: string
                      required:
                      - scope
                      type: object
                    nodePort:
                      description: nodePort holds parameters for the NodePortService
                        endpoint publishing strategy. Present only if type is NodePortService.
                      type: object
                    private:
                      description: private holds parameters for the Private endpoint
                        publishing strategy. Present only if type is Private.
                      type: object
                    type:
                      description: "type is the publishing strategy to use. Valid
                        values are: \n * LoadBalancerService \n Publishes the ingress
                        controller using a Kubernetes LoadBalancer Service. \n In
                        this configuration, the ingress controller deployment uses
                        container networking. A LoadBalancer Service is created to
                        publish the deployment. \n See: https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
                        \n If domain is set, a wildcard DNS record will be managed
                        to point at the LoadBalancer Service's external name. DNS
                        records are managed only in DNS zones defined by dns.config.openshift.io/cluster
                        .spec.publicZone and .spec.privateZone. \n Wildcard DNS management
                        is currently supported only on the AWS, Azure, and GCP platforms.
                        \n * HostNetwork \n Publishes the ingress controller on node
                        ports where the ingress controller is deployed. \n In this
                        configuration, the ingress controller deployment uses host
                        networking, bound to node ports 80 and 443. The user is responsible
                        for configuring an external load balancer to publish the ingress
                        controller via the node ports. \n * Private \n Does not publish
                        the ingress controller. \n In this configuration, the ingress
                        controller deployment uses container networking, and is not
                        explicitly published. The user must manually publish the ingress
                        controller. \n * NodePortService \n Publishes the ingress
                        controller using a Kubernetes NodePort Service. \n In this
                        configuration, the ingress controller deployment uses container
                        networking. A NodePort Service is created to publish the deployment.
                        The specific node ports are dynamically allocated by OpenShift;
                        however, to support static port allocations, user changes
                        to the node port field of the managed NodePort Service will
                        preserved."
                      enum:
                      - LoadBalancerService
                      - HostNetwork
                      - Private
                      - NodePortService
                      type: string
                  required:
                  - type
                  type: object
                httpHeaders:
                  description: "httpHeaders defines policy for HTTP headers. \n If
                    this field is empty, the default values are used."
                  properties:
                    forwardedHeaderPolicy:
                      description: "forwardedHeaderPolicy specifies when and how the
                        IngressController sets the Forwarded, X-Forwarded-For, X-Forwarded-Host,
                        X-Forwarded-Port, X-Forwarded-Proto, and X-Forwarded-Proto-Version
                        HTTP headers.  The value may be one of the following: \n *
                        \"Append\", which specifies that the IngressController appends
                        the   headers, preserving existing headers. \n * \"Replace\",
                        which specifies that the IngressController sets the   headers,
                        replacing any existing Forwarded or X-Forwarded-* headers.
                        \n * \"IfNone\", which specifies that the IngressController
                        sets the   headers if they are not already set. \n * \"Never\",
                        which specifies that the IngressController never sets the
                        \  headers, preserving any existing headers. \n By default,
                        the policy is \"Append\"."
                      enum:
                      - Append
                      - Replace
                      - IfNone
                      - Never
                      type: string
                    uniqueId:
                      description: "uniqueId describes configuration for a custom
                        HTTP header that the ingress controller should inject into
                        incoming HTTP requests. Typically, this header is configured
                        to have a value that is unique to the HTTP request.  The header
                        can be used by applications or included in access logs to
                        facilitate tracing individual HTTP requests. \n If this field
                        is empty, no such header is injected into requests."
                      properties:
                        format:
                          description: 'format specifies the format for the injected
                            HTTP header''s value. This field has no effect unless
                            name is specified.  For the HAProxy-based ingress controller
                            implementation, this format uses the same syntax as the
                            HTTP log format.  If the field is empty, the default value
                            is "%{+X}o\\ %ci:%cp_%fi:%fp_%Ts_%rt:%pid"; see the corresponding
                            HAProxy documentation: http://cbonte.github.io/haproxy-dconv/2.0/configuration.html#8.2.3'
                          maxLength: 1024
                          minLength: 0
                          pattern: ^(%(%|(\{[-+]?[QXE](,[-+]?[QXE])*\})?([A-Za-z]+|\[[.0-9A-Z_a-z]+(\([^)]+\))?(,[.0-9A-Z_a-z]+(\([^)]+\))?)*\]))|[^%[:cntrl:]])*$
                          type: string
                        name:
                          description: name specifies the name of the HTTP header
                            (for example, "unique-id") that the ingress controller
                            should inject into HTTP requests.  The field's value must
                            be a valid HTTP header name as defined in RFC 2616 section
                            4.2.  If the field is empty, no header is injected.
                          maxLength: 1024
                          minLength: 0
                          pattern: ^$|^[-!#$%&'*+.0-9A-Z^_`a-z|~]+$
                          type: string
                      type: object
                  type: object
                logging:
                  description: logging defines parameters for what should be logged
                    where.  If this field is empty, operational logs are enabled but
                    access logs are disabled.
                  properties:
                    access:
                      description: "access describes how the client requests should
                        be logged. \n If this field is empty, access logging is disabled."
                      properties:
                        destination:
                          description: destination is where access logs go.
                          properties:
                            container:
                              description: container holds parameters for the Container
                                logging destination. Present only if type is Container.
                              type: object
                            syslog:
                              description: syslog holds parameters for a syslog endpoint.  Present
                                only if type is Syslog.
                              oneOf:
                              - properties:
                                  address:
                                    format: ipv4
                              - properties:
                                  address:
                                    format: ipv6
                              properties:
                                address:
                                  description: address is the IP address of the syslog
                                    endpoint that receives log messages.
                                  type: string
                                facility:
                                  description: "facility specifies the syslog facility
                                    of log messages. \n If this field is empty, the
                                    facility is \"local1\"."
                                  enum:
                                  - kern
                                  - user
                                  - mail
                                  - daemon
                                  - auth
                                  - syslog
                                  - lpr
                                  - news
                                  - uucp
                                  - cron
                                  - auth2
                                  - ftp
                                  - ntp
                                  - audit
                                  - alert
                                  - cron2
                                  - local0
                                  - local1
                                  - local2
                                  - local3
                                  - local4
                                  - local5
                                  - local6
                                  - local7
                                  type: string
                                port:
                                  description: port is the UDP port number of the
                                    syslog endpoint that receives log messages.
                                  format: int32
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                              required:
                              - address
                              - port
                              type: object
                            type:
                              description: "type is the type of destination for logs.
                                \ It must be one of the following: \n * Container
                                \n The ingress operator configures the sidecar container
                                named \"logs\" on the ingress controller pod and configures
                                the ingress controller to write logs to the sidecar.
                                \ The logs are then available as container logs.  The
                                expectation is that the administrator configures a
                                custom logging solution that reads logs from this
                                sidecar.  Note that using container logs means that
                                logs may be dropped if the rate of logs exceeds the
                                container runtime's or the custom logging solution's
                                capacity. \n * Syslog \n Logs are sent to a syslog
                                endpoint.  The administrator must specify an endpoint
                                that can receive syslog messages.  The expectation
                                is that the administrator has configured a custom
                                syslog instance."
                              enum:
                              - Container
                              - Syslog
                              type: string
                          required:
                          - type
                          type: object
                        httpCaptureCookies:
                          description: httpCaptureCookies specifies HTTP cookies that
                            should be captured in access logs.  If this field is empty,
                            no cookies are captured.
                          items:
                            description: IngressControllerCaptureHTTPCookie describes
                              an HTTP cookie that should be captured.
                            properties:
                              matchType:
                                description: matchType specifies the type of match
                                  to be performed on the cookie name.  Allowed values
                                  are "Exact" for an exact string match and "Prefix"
                                  for a string prefix match.  If "Exact" is specified,
                                  a name must be specified in the name field.  If
                                  "Prefix" is provided, a prefix must be specified
                                  in the namePrefix field.  For example, specifying
                                  matchType "Prefix" and namePrefix "foo" will capture
                                  a cookie named "foo" or "foobar" but not one named
                                  "bar".  The first matching cookie is captured.
                                enum:
                                - Exact
                                - Prefix
                                type: string
                              maxLength:
                                description: maxLength specifies a maximum length
                                  of the string that will be logged, which includes
                                  the cookie name, cookie value, and one-character
                                  delimiter.  If the log entry exceeds this length,
                                  the value will be truncated in the log message.  Note
                                  that the ingress controller may impose a separate
                                  bound on the total length of HTTP headers in a request.
                                maximum: 1024
                                minimum: 1
                                type: integer
                              name:
                                description: name specifies a cookie name.  Its value
                                  must be a valid HTTP cookie name as defined in RFC
                                  6265 section 4.1.
                                maxLength: 1024
                                minLength: 0
                                pattern: ^[-!#$%&'*+.0-9A-Z^_`a-z|~]*$
                                type: string
                              namePrefix:
                                description: namePrefix specifies a cookie name prefix.  Its
                                  value must be a valid HTTP cookie name as defined
                                  in RFC 6265 section 4.1.
                                maxLength: 1024
                                minLength: 0
                                pattern: ^[-!#$%&'*+.0-9A-Z^_`a-z|~]*$
                                type: string
                            required:
                            - matchType
                            - maxLength
                            type: object
                          maxItems: 1
                          nullable: true
                          type: array
                        httpCaptureHeaders:
                          description: "httpCaptureHeaders defines HTTP headers that
                            should be captured in access logs.  If this field is empty,
                            no headers are captured. \n Note that this option only
                            applies to cleartext HTTP connections and to secure HTTP
                            connections for which the ingress controller terminates
                            encryption (that is, edge-terminated or reencrypt connections).
                            \ Headers cannot be captured for TLS passthrough connections."
                          properties:
                            request:
                              description: "request specifies which HTTP request headers
                                to capture. \n If this field is empty, no request
                                headers are captured."
                              items:
                                description: IngressControllerCaptureHTTPHeader describes
                                  an HTTP header that should be captured.
                                properties:
                                  maxLength:
                                    description: maxLength specifies a maximum length
                                      for the header value.  If a header value exceeds
                                      this length, the value will be truncated in
                                      the log message.  Note that the ingress controller
                                      may impose a separate bound on the total length
                                      of HTTP headers in a request.
                                    minimum: 1
                                    type: integer
                                  name:
                                    description: name specifies a header name.  Its
                                      value must be a valid HTTP header name as defined
                                      in RFC 2616 section 4.2.
                                    pattern: ^[-!#$%&'*+.0-9A-Z^_`a-z|~]+$
                                    type: string
                                required:
                                - maxLength
                                - name
                                type: object
                              nullable: true
                              type: array
                            response:
                              description: "response specifies which HTTP response
                                headers to capture. \n If this field is empty, no
                                response headers are captured."
                              items:
                                description: IngressControllerCaptureHTTPHeader describes
                                  an HTTP header that should be captured.
                                properties:
                                  maxLength:
                                    description: maxLength specifies a maximum length
                                      for the header value.  If a header value exceeds
                                      this length, the value will be truncated in
                                      the log message.  Note that the ingress controller
                                      may impose a separate bound on the total length
                                      of HTTP headers in a request.
                                    minimum: 1
                                    type: integer
                                  name:
                                    description: name specifies a header name.  Its
                                      value must be a valid HTTP header name as defined
                                      in RFC 2616 section 4.2.
                                    pattern: ^[-!#$%&'*+.0-9A-Z^_`a-z|~]+$
                                    type: string
                                required:
                                - maxLength
                                - name
                                type: object
                              nullable: true
                              type: array
                          type: object
                        httpLogFormat:
                          description: "httpLogFormat specifies the format of the
                            log message for an HTTP request. \n If this field is empty,
                            log messages use the implementation's default HTTP log
                            format.  For HAProxy's default HTTP log format, see the
                            HAProxy documentation: http://cbonte.github.io/haproxy-dconv/2.0/configuration.html#8.2.3
                            \n Note that this format only applies to cleartext HTTP
                            connections and to secure HTTP connections for which the
                            ingress controller terminates encryption (that is, edge-terminated
                            or reencrypt connections).  It does not affect the log
                            format for TLS passthrough connections."
                          type: string
                      required:
                      - destination
                      type: object
                  type: object
                namespaceSelector:
                  description: "namespaceSelector is used to filter the set of namespaces
                    serviced by the ingress controller. This is useful for implementing
                    shards. \n If unset, the default is no filtering."
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                nodePlacement:
                  description: "nodePlacement enables explicit control over the scheduling
                    of the ingress controller. \n If unset, defaults are used. See
                    NodePlacement for more details."
                  properties:
                    nodeSelector:
                      description: "nodeSelector is the node selector applied to ingress
                        controller deployments. \n If unset, the default is: \n   beta.kubernetes.io/os:
                        linux   node-role.kubernetes.io/worker: '' \n If set, the
                        specified selector is used and replaces the default."
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                    tolerations:
                      description: "tolerations is a list of tolerations applied to
                        ingress controller deployments. \n The default is an empty
                        list. \n See https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/"
                      items:
                        description: The pod this Toleration is attached to tolerates
                          any taint that matches the triple <key,value,effect> using
                          the matching operator <operator>.
                        properties:
                          effect:
                            description: Effect indicates the taint effect to match.
                              Empty means match all taint effects. When specified,
                              allowed values are NoSchedule, PreferNoSchedule and
                              NoExecute.
                            type: string
                          key:
                            description: Key is the taint key that the toleration
                              applies to. Empty means match all taint keys. If the
                              key is empty, operator must be Exists; this combination
                              means to match all values and all keys.
                            type: string
                          operator:
                            description: Operator represents a key's relationship
                              to the value. Valid operators are Exists and Equal.
                              Defaults to Equal. Exists is equivalent to wildcard
                              for value, so that a pod can tolerate all taints of
                              a particular category.
                            type: string
                          tolerationSeconds:
                            description: TolerationSeconds represents the period of
                              time the toleration (which must be of effect NoExecute,
                              otherwise this field is ignored) tolerates the taint.
                              By default, it is not set, which means tolerate the
                              taint forever (do not evict). Zero and negative values
                              will be treated as 0 (evict immediately) by the system.
                            format: int64
                            type: integer
                          value:
                            description: Value is the taint value the toleration matches
                              to. If the operator is Exists, the value should be empty,
                              otherwise just a regular string.
                            type: string
                        type: object
                      type: array
                  type: object
                replicas:
                  description: replicas is the desired number of ingress controller
                    replicas. If unset, defaults to 2.
                  format: int32
                  type: integer
                routeAdmission:
                  description: "routeAdmission defines a policy for handling new route
                    claims (for example, to allow or deny claims across namespaces).
                    \n If empty, defaults will be applied. See specific routeAdmission
                    fields for details about their defaults."
                  properties:
                    namespaceOwnership:
                      description: "namespaceOwnership describes how host name claims
                        across namespaces should be handled. \n Value must be one
                        of: \n - Strict: Do not allow routes in different namespaces
                        to claim the same host. \n - InterNamespaceAllowed: Allow
                        routes to claim different paths of the same   host name across
                        namespaces. \n If empty, the default is Strict."
                      enum:
                      - InterNamespaceAllowed
                      - Strict
                      type: string
                    wildcardPolicy:
                      description: "wildcardPolicy describes how routes with wildcard
                        policies should be handled for the ingress controller. WildcardPolicy
                        controls use of routes [1] exposed by the ingress controller
                        based on the route's wildcard policy. \n [1] https://github.com/openshift/api/blob/master/route/v1/types.go
                        \n Note: Updating WildcardPolicy from WildcardsAllowed to
                        WildcardsDisallowed will cause admitted routes with a wildcard
                        policy of Subdomain to stop working. These routes must be
                        updated to a wildcard policy of None to be readmitted by the
                        ingress controller. \n WildcardPolicy supports WildcardsAllowed
                        and WildcardsDisallowed values. \n If empty, defaults to \"WildcardsDisallowed\"."
                      enum:
                      - WildcardsAllowed
                      - WildcardsDisallowed
                      type: string
                  type: object
                routeSelector:
                  description: "routeSelector is used to filter the set of Routes
                    serviced by the ingress controller. This is useful for implementing
                    shards. \n If unset, the default is no filtering."
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                tlsSecurityProfile:
                  description: "tlsSecurityProfile specifies settings for TLS connections
                    for ingresscontrollers. \n If unset, the default is based on the
                    apiservers.config.openshift.io/cluster resource. \n Note that
                    when using the Old, Intermediate, and Modern profile types, the
                    effective profile configuration is subject to change between releases.
                    For example, given a specification to use the Intermediate profile
                    deployed on release X.Y.Z, an upgrade to release X.Y.Z+1 may cause
                    a new profile configuration to be applied to the ingress controller,
                    resulting in a rollout. \n Note that the minimum TLS version for
                    ingress controllers is 1.1, and the maximum TLS version is 1.2.
                    \ An implication of this restriction is that the Modern TLS profile
                    type cannot be used because it requires TLS 1.3."
                  properties:
                    custom:
                      description: "custom is a user-defined TLS security profile.
                        Be extremely careful using a custom profile as invalid configurations
                        can be catastrophic. An example custom profile looks like
                        this: \n   ciphers:     - ECDHE-ECDSA-CHACHA20-POLY1305     -
                        ECDHE-RSA-CHACHA20-POLY1305     - ECDHE-RSA-AES128-GCM-SHA256
                        \    - ECDHE-ECDSA-AES128-GCM-SHA256   minTLSVersion: TLSv1.1"
                      nullable: true
                      properties:
                        ciphers:
                          description: "ciphers is used to specify the cipher algorithms
                            that are negotiated during the TLS handshake.  Operators
                            may remove entries their operands do not support.  For
                            example, to use DES-CBC3-SHA  (yaml): \n   ciphers:     -
                            DES-CBC3-SHA"
                          items:
                            type: string
                          type: array
                        minTLSVersion:
                          description: "minTLSVersion is used to specify the minimal
                            version of the TLS protocol that is negotiated during
                            the TLS handshake. For example, to use TLS versions 1.1,
                            1.2 and 1.3 (yaml): \n   minTLSVersion: TLSv1.1 \n NOTE:
                            currently the highest minTLSVersion allowed is VersionTLS12"
                          enum:
                          - VersionTLS10
                          - VersionTLS11
                          - VersionTLS12
                          - VersionTLS13
                          type: string
                      type: object
                    intermediate:
                      description: "intermediate is a TLS security profile based on:
                        \n https://wiki.mozilla.org/Security/Server_Side_TLS#Intermediate_compatibility_.28recommended.29
                        \n and looks like this (yaml): \n   ciphers:     - TLS_AES_128_GCM_SHA256
                        \    - TLS_AES_256_GCM_SHA384     - TLS_CHACHA20_POLY1305_SHA256
                        \    - ECDHE-ECDSA-AES128-GCM-SHA256     - ECDHE-RSA-AES128-GCM-SHA256
                        \    - ECDHE-ECDSA-AES256-GCM-SHA384     - ECDHE-RSA-AES256-GCM-SHA384
                        \    - ECDHE-ECDSA-CHACHA20-POLY1305     - ECDHE-RSA-CHACHA20-POLY1305
                        \    - DHE-RSA-AES128-GCM-SHA256     - DHE-RSA-AES256-GCM-SHA384
                        \  minTLSVersion: TLSv1.2"
                      nullable: true
                      type: object
                    modern:
                      description: "modern is a TLS security profile based on: \n
                        https://wiki.mozilla.org/Security/Server_Side_TLS#Modern_compatibility
                        \n and looks like this (yaml): \n   ciphers:     - TLS_AES_128_GCM_SHA256
                        \    - TLS_AES_256_GCM_SHA384     - TLS_CHACHA20_POLY1305_SHA256
                        \  minTLSVersion: TLSv1.3 \n NOTE: Currently unsupported."
                      nullable: true
                      type: object
                    old:
                      description: "old is a TLS security profile based on: \n https://wiki.mozilla.org/Security/Server_Side_TLS#Old_backward_compatibility
                        \n and looks like this (yaml): \n   ciphers:     - TLS_AES_128_GCM_SHA256
                        \    - TLS_AES_256_GCM_SHA384     - TLS_CHACHA20_POLY1305_SHA256
                        \    - ECDHE-ECDSA-AES128-GCM-SHA256     - ECDHE-RSA-AES128-GCM-SHA256
                        \    - ECDHE-ECDSA-AES256-GCM-SHA384     - ECDHE-RSA-AES256-GCM-SHA384
                        \    - ECDHE-ECDSA-CHACHA20-POLY1305     - ECDHE-RSA-CHACHA20-POLY1305
                        \    - DHE-RSA-AES128-GCM-SHA256     - DHE-RSA-AES256-GCM-SHA384
                        \    - DHE-RSA-CHACHA20-POLY1305     - ECDHE-ECDSA-AES128-SHA256
                        \    - ECDHE-RSA-AES128-SHA256     - ECDHE-ECDSA-AES128-SHA
                        \    - ECDHE-RSA-AES128-SHA     - ECDHE-ECDSA-AES256-SHA384
                        \    - ECDHE-RSA-AES256-SHA384     - ECDHE-ECDSA-AES256-SHA
                        \    - ECDHE-RSA-AES256-SHA     - DHE-RSA-AES128-SHA256     -
                        DHE-RSA-AES256-SHA256     - AES128-GCM-SHA256     - AES256-GCM-SHA384
                        \    - AES128-SHA256     - AES256-SHA256     - AES128-SHA
                        \    - AES256-SHA     - DES-CBC3-SHA   minTLSVersion: TLSv1.0"
                      nullable: true
                      type: object
                    type:
                      description: "type is one of Old, Intermediate, Modern or Custom.
                        Custom provides the ability to specify individual TLS security
                        profile parameters. Old, Intermediate and Modern are TLS security
                        profiles based on: \n https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations
                        \n The profiles are intent based, so they may change over
                        time as new ciphers are developed and existing ciphers are
                        found to be insecure.  Depending on precisely which ciphers
                        are available to a process, the list may be reduced. \n Note
                        that the Modern profile is currently not supported because
                        it is not yet well adopted by common software libraries."
                      enum:
                      - Old
                      - Intermediate
                      - Modern
                      - Custom
                      type: string
                  type: object
              type: object
            status:
              description: status is the most recently observed status of the IngressController.
              properties:
                availableReplicas:
                  description: availableReplicas is number of observed available replicas
                    according to the ingress controller deployment.
                  format: int32
                  type: integer
                conditions:
                  description: "conditions is a list of conditions and their status.
                    \n Available means the ingress controller deployment is available
                    and servicing route and ingress resources (i.e, .status.availableReplicas
                    equals .spec.replicas) \n There are additional conditions which
                    indicate the status of other ingress controller features and capabilities.
                    \n   * LoadBalancerManaged   - True if the following conditions
                    are met:     * The endpoint publishing strategy requires a service
                    load balancer.   - False if any of those conditions are unsatisfied.
                    \n   * LoadBalancerReady   - True if the following conditions
                    are met:     * A load balancer is managed.     * The load balancer
                    is ready.   - False if any of those conditions are unsatisfied.
                    \n   * DNSManaged   - True if the following conditions are met:
                    \    * The endpoint publishing strategy and platform support DNS.
                    \    * The ingress controller domain is set.     * dns.config.openshift.io/cluster
                    configures DNS zones.   - False if any of those conditions are
                    unsatisfied. \n   * DNSReady   - True if the following conditions
                    are met:     * DNS is managed.     * DNS records have been successfully
                    created.   - False if any of those conditions are unsatisfied."
                  items:
                    description: OperatorCondition is just the standard condition
                      fields.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
                domain:
                  description: domain is the actual domain in use.
                  type: string
                endpointPublishingStrategy:
                  description: endpointPublishingStrategy is the actual strategy in
                    use.
                  properties:
                    hostNetwork:
                      description: hostNetwork holds parameters for the HostNetwork
                        endpoint publishing strategy. Present only if type is HostNetwork.
                      type: object
                    loadBalancer:
                      description: loadBalancer holds parameters for the load balancer.
                        Present only if type is LoadBalancerService.
                      properties:
                        providerParameters:
                          description: "providerParameters holds desired load balancer
                            information specific to the underlying infrastructure
                            provider. \n If empty, defaults will be applied. See specific
                            providerParameters fields for details about their defaults."
                          properties:
                            aws:
                              description: "aws provides configuration settings that
                                are specific to AWS load balancers. \n If empty, defaults
                                will be applied. See specific aws fields for details
                                about their defaults."
                              properties:
                                classicLoadBalancer:
                                  description: classicLoadBalancerParameters holds
                                    configuration parameters for an AWS classic load
                                    balancer. Present only if type is Classic.
                                  type: object
                                networkLoadBalancer:
                                  description: networkLoadBalancerParameters holds
                                    configuration parameters for an AWS network load
                                    balancer. Present only if type is NLB.
                                  type: object
                                type:
                                  description: "type is the type of AWS load balancer
                                    to instantiate for an ingresscontroller. \n Valid
                                    values are: \n * \"Classic\": A Classic Load Balancer
                                    that makes routing decisions at either   the transport
                                    layer (TCP/SSL) or the application layer (HTTP/HTTPS).
                                    See   the following for additional details: \n
                                    \    https://docs.aws.amazon.com/AmazonECS/latest/developerguide/load-balancer-types.html#clb
                                    \n * \"NLB\": A Network Load Balancer that makes
                                    routing decisions at the   transport layer (TCP/SSL).
                                    See the following for additional details: \n     https://docs.aws.amazon.com/AmazonECS/latest/developerguide/load-balancer-types.html#nlb"
                                  enum:
                                  - Classic
                                  - NLB
                                  type: string
                              required:
                              - type
                              type: object
                            type:
                              description: type is the underlying infrastructure provider
                                for the load balancer. Allowed values are "AWS", "Azure",
                                "BareMetal", "GCP", "OpenStack", and "VSphere".
                              enum:
                              - AWS
                              - Azure
                              - BareMetal
                              - GCP
                              - OpenStack
                              - VSphere
                              - IBM
                              type: string
                          required:
                          - type
                          type: object
                        scope:
                          description: scope indicates the scope at which the load
                            balancer is exposed. Possible values are "External" and
                            "Internal".
                          enum:
                          - Internal
                          - External
                          type: string
                      required:
                      - scope
                      type: object
                    nodePort:
                      description: nodePort holds parameters for the NodePortService
                        endpoint publishing strategy. Present only if type is NodePortService.
                      type: object
                    private:
                      description: private holds parameters for the Private endpoint
                        publishing strategy. Present only if type is Private.
                      type: object
                    type:
                      description: "type is the publishing strategy to use. Valid
                        values are: \n * LoadBalancerService \n Publishes the ingress
                        controller using a Kubernetes LoadBalancer Service. \n In
                        this configuration, the ingress controller deployment uses
                        container networking. A LoadBalancer Service is created to
                        publish the deployment. \n See: https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
                        \n If domain is set, a wildcard DNS record will be managed
                        to point at the LoadBalancer Service's external name. DNS
                        records are managed only in DNS zones defined by dns.config.openshift.io/cluster
                        .spec.publicZone and .spec.privateZone. \n Wildcard DNS management
                        is currently supported only on the AWS, Azure, and GCP platforms.
                        \n * HostNetwork \n Publishes the ingress controller on node
                        ports where the ingress controller is deployed. \n In this
                        configuration, the ingress controller deployment uses host
                        networking, bound to node ports 80 and 443. The user is responsible
                        for configuring an external load balancer to publish the ingress
                        controller via the node ports. \n * Private \n Does not publish
                        the ingress controller. \n In this configuration, the ingress
                        controller deployment uses container networking, and is not
                        explicitly published. The user must manually publish the ingress
                        controller. \n * NodePortService \n Publishes the ingress
                        controller using a Kubernetes NodePort Service. \n In this
                        configuration, the ingress controller deployment uses container
                        networking. A NodePort Service is created to publish the deployment.
                        The specific node ports are dynamically allocated by OpenShift;
                        however, to support static port allocations, user changes
                        to the node port field of the managed NodePort Service will
                        preserved."
                      enum:
                      - LoadBalancerService
                      - HostNetwork
                      - Private
                      - NodePortService
                      type: string
                  required:
                  - type
                  type: object
                observedGeneration:
                  description: observedGeneration is the most recent generation observed.
                  format: int64
                  type: integer
                selector:
                  description: selector is a label selector, in string format, for
                    ingress controller pods corresponding to the IngressController.
                    The number of matching pods should equal the value of availableReplicas.
                  type: string
                tlsProfile:
                  description: tlsProfile is the TLS connection configuration that
                    is in effect.
                  properties:
                    ciphers:
                      description: "ciphers is used to specify the cipher algorithms
                        that are negotiated during the TLS handshake.  Operators may
                        remove entries their operands do not support.  For example,
                        to use DES-CBC3-SHA  (yaml): \n   ciphers:     - DES-CBC3-SHA"
                      items:
                        type: string
                      type: array
                    minTLSVersion:
                      description: "minTLSVersion is used to specify the minimal version
                        of the TLS protocol that is negotiated during the TLS handshake.
                        For example, to use TLS versions 1.1, 1.2 and 1.3 (yaml):
                        \n   minTLSVersion: TLSv1.1 \n NOTE: currently the highest
                        minTLSVersion allowed is VersionTLS12"
                      enum:
                      - VersionTLS10
                      - VersionTLS11
                      - VersionTLS12
                      - VersionTLS13
                      type: string
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: .status.selector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.availableReplicas
        status: {}
  status:
    acceptedNames:
      kind: IngressController
      listKind: IngressControllerList
      plural: ingresscontrollers
      singular: ingresscontroller
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:35Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:36Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:32Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:domain:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:32Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:32Z"
    name: ingresses.config.openshift.io
    resourceVersion: "339"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/ingresses.config.openshift.io
    uid: 84416c12-fb63-4ff1-be54-9df6a44f5b31
  spec:
    conversion:
      strategy: None
    group: config.openshift.io
    names:
      kind: Ingress
      listKind: IngressList
      plural: ingresses
      singular: ingress
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Ingress holds cluster-wide information about ingress, including
            the default ingress domain used for routes. The canonical name is `cluster`.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec holds user settable values for configuration
              properties:
                domain:
                  description: "domain is used to generate a default host name for
                    a route when the route's host name is empty. The generated host
                    name will follow this pattern: \"<route-name>.<route-namespace>.<domain>\".
                    \n It is also used as the default wildcard domain suffix for ingress.
                    The default ingresscontroller domain will follow this pattern:
                    \"*.<domain>\". \n Once set, changing domain is not currently
                    supported."
                  type: string
              type: object
            status:
              description: status holds observed values from the cluster. They may
                not be overridden.
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Ingress
      listKind: IngressList
      plural: ingresses
      singular: ingress
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:32Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:32Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.3.0
    creationTimestamp: "2020-11-18T12:58:54Z"
    generation: 55
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
      manager: register.test
      operation: Update
      time: "2020-11-20T22:16:09Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:controller-gen.kubebuilder.io/version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-20T22:18:53Z"
    name: installplans.operators.coreos.com
    resourceVersion: "1040780"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/installplans.operators.coreos.com
    uid: 6ab70502-a587-4193-852b-0ff253e2c205
  spec:
    conversion:
      strategy: None
    group: operators.coreos.com
    names:
      categories:
      - olm
      kind: InstallPlan
      listKind: InstallPlanList
      plural: installplans
      shortNames:
      - ip
      singular: installplan
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: The first CSV in the list of clusterServiceVersionNames
        jsonPath: .spec.clusterServiceVersionNames[0]
        name: CSV
        type: string
      - description: The approval mode
        jsonPath: .spec.approval
        name: Approval
        type: string
      - jsonPath: .spec.approved
        name: Approved
        type: boolean
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: InstallPlan defines the installation of a set of operators.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: InstallPlanSpec defines a set of Application resources
                to be installed
              properties:
                approval:
                  description: Approval is the user approval policy for an InstallPlan.
                    It must be one of "Automatic" or "Manual".
                  type: string
                approved:
                  type: boolean
                clusterServiceVersionNames:
                  items:
                    type: string
                  type: array
                generation:
                  type: integer
                source:
                  type: string
                sourceNamespace:
                  type: string
              required:
              - approval
              - approved
              - clusterServiceVersionNames
              type: object
            status:
              description: "InstallPlanStatus represents the information about the
                status of steps required to complete installation. \n Status may trail
                the actual state of a system."
              properties:
                attenuatedServiceAccountRef:
                  description: AttenuatedServiceAccountRef references the service
                    account that is used to do scoped operator install.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                bundleLookups:
                  description: BundleLookups is the set of in-progress requests to
                    pull and unpackage bundle content to the cluster.
                  items:
                    description: BundleLookup is a request to pull and unpackage the
                      content of a bundle to the cluster.
                    properties:
                      catalogSourceRef:
                        description: CatalogSourceRef is a reference to the CatalogSource
                          the bundle path was resolved from.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      conditions:
                        description: Conditions represents the overall state of a
                          BundleLookup.
                        items:
                          properties:
                            lastTransitionTime:
                              description: Last time the condition transitioned from
                                one status to another.
                              format: date-time
                              type: string
                            lastUpdateTime:
                              description: Last time the condition was probed.
                              format: date-time
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      identifier:
                        description: Identifier is the catalog-unique name of the
                          operator (the name of the CSV for bundles that contain CSVs)
                        type: string
                      path:
                        description: Path refers to the location of a bundle to pull.
                          It's typically an image reference.
                        type: string
                      properties:
                        description: The effective properties of the unpacked bundle.
                        type: string
                      replaces:
                        description: Replaces is the name of the bundle to replace
                          with the one found at Path.
                        type: string
                    required:
                    - catalogSourceRef
                    - identifier
                    - path
                    - replaces
                    type: object
                  type: array
                catalogSources:
                  items:
                    type: string
                  type: array
                conditions:
                  items:
                    description: InstallPlanCondition represents the overall status
                      of the execution of an InstallPlan.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      lastUpdateTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        description: ConditionReason is a camelcased reason for the
                          state transition.
                        type: string
                      status:
                        type: string
                      type:
                        description: InstallPlanConditionType describes the state
                          of an InstallPlan at a certain point as a whole.
                        type: string
                    type: object
                  type: array
                phase:
                  description: InstallPlanPhase is the current status of a InstallPlan
                    as a whole.
                  type: string
                plan:
                  items:
                    description: Step represents the status of an individual step
                      in an InstallPlan.
                    properties:
                      resolving:
                        type: string
                      resource:
                        description: StepResource represents the status of a resource
                          to be tracked by an InstallPlan.
                        properties:
                          group:
                            type: string
                          kind:
                            type: string
                          manifest:
                            type: string
                          name:
                            type: string
                          sourceName:
                            type: string
                          sourceNamespace:
                            type: string
                          version:
                            type: string
                        required:
                        - group
                        - kind
                        - name
                        - sourceName
                        - sourceNamespace
                        - version
                        type: object
                      status:
                        description: StepStatus is the current status of a particular
                          resource an in InstallPlan
                        type: string
                    required:
                    - resolving
                    - resource
                    - status
                    type: object
                  type: array
              required:
              - catalogSources
              - phase
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - olm
      kind: InstallPlan
      listKind: InstallPlanList
      plural: installplans
      shortNames:
      - ip
      singular: installplan
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:55Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:55Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T13:05:10Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:ownerReferences:
            .: {}
            k:{"uid":"629378f9-4b6d-445e-8764-cbfb5eda542e"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:allocations:
                      .: {}
                      f:additionalProperties: {}
                      f:description: {}
                      f:type: {}
                    f:range:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
          f:storedVersions: {}
      manager: cluster-network-operator
      operation: Update
      time: "2021-01-13T04:16:17Z"
    name: ippools.whereabouts.cni.cncf.io
    ownerReferences:
    - apiVersion: operator.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Network
      name: cluster
      uid: 629378f9-4b6d-445e-8764-cbfb5eda542e
    resourceVersion: "36921677"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/ippools.whereabouts.cni.cncf.io
    uid: 7c68a334-f439-4caa-9aa0-a403df5a0829
  spec:
    conversion:
      strategy: None
    group: whereabouts.cni.cncf.io
    names:
      kind: IPPool
      listKind: IPPoolList
      plural: ippools
      singular: ippool
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: IPPool is the Schema for Whereabouts for IP address allocation
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: IPPoolSpec defines the desired state of IPPool
              properties:
                allocations:
                  additionalProperties:
                    description: IPAllocation represents metadata about the pod/container
                      owner of a specific IP
                    properties:
                      id:
                        type: string
                    required:
                    - id
                    type: object
                  description: Allocations is the set of allocated IPs for the given
                    range. Its indices are a direct mapping to the IP with the same
                    index/offset for the pool's range.
                  type: object
                range:
                  description: Range is a RFC 4632/4291-style string that represents
                    an IP address and prefix length in CIDR notation
                  type: string
              required:
              - allocations
              - range
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: IPPool
      listKind: IPPoolList
      plural: ippools
      singular: ippool
    conditions:
    - lastTransitionTime: "2020-11-18T13:05:10Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T13:05:10Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:59:20Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:59:20Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:59:20Z"
    name: kubeapiservers.operator.openshift.io
    resourceVersion: "1743"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/kubeapiservers.operator.openshift.io
    uid: c7b749be-517b-4121-9ec5-5666c856b1e8
  spec:
    conversion:
      strategy: None
    group: operator.openshift.io
    names:
      kind: KubeAPIServer
      listKind: KubeAPIServerList
      plural: kubeapiservers
      singular: kubeapiserver
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: KubeAPIServer provides information to configure an operator
            to manage kube-apiserver.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec is the specification of the desired behavior of the
                Kubernetes API Server
              properties:
                failedRevisionLimit:
                  description: failedRevisionLimit is the number of failed static
                    pod installer revisions to keep on disk and in the api -1 = unlimited,
                    0 or unset = 5 (default)
                  format: int32
                  type: integer
                forceRedeploymentReason:
                  description: forceRedeploymentReason can be used to force the redeployment
                    of the operand by providing a unique string. This provides a mechanism
                    to kick a previously failed deployment and provide a reason why
                    you think it will work this time instead of failing again on the
                    same config.
                  type: string
                logLevel:
                  default: Normal
                  description: "logLevel is an intent based logging for an overall
                    component.  It does not give fine grained control, but it is a
                    simple way to manage coarse grained logging choices that operators
                    have to interpret for their operands. \n Valid values are: \"Normal\",
                    \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                managementState:
                  description: managementState indicates whether and how the operator
                    should manage the component
                  pattern: ^(Managed|Force)$
                  type: string
                observedConfig:
                  description: observedConfig holds a sparse config that controller
                    has observed from the cluster state.  It exists in spec because
                    it is an input to the level for the operator
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                operatorLogLevel:
                  default: Normal
                  description: "operatorLogLevel is an intent based logging for the
                    operator itself.  It does not give fine grained control, but it
                    is a simple way to manage coarse grained logging choices that
                    operators have to interpret for themselves. \n Valid values are:
                    \"Normal\", \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                succeededRevisionLimit:
                  description: succeededRevisionLimit is the number of successful
                    static pod installer revisions to keep on disk and in the api
                    -1 = unlimited, 0 or unset = 5 (default)
                  format: int32
                  type: integer
                unsupportedConfigOverrides:
                  description: 'unsupportedConfigOverrides holds a sparse config that
                    will override any previously set options.  It only needs to be
                    the fields to override it will end up overlaying in the following
                    order: 1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides'
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              type: object
            status:
              description: status is the most recently observed status of the Kubernetes
                API Server
              properties:
                conditions:
                  description: conditions is a list of conditions and their status
                  items:
                    description: OperatorCondition is just the standard condition
                      fields.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
                generations:
                  description: generations are used to determine when an item needs
                    to be reconciled or has changed in a way that needs a reaction.
                  items:
                    description: GenerationStatus keeps track of the generation for
                      a given resource so that decisions about forced updates can
                      be made.
                    properties:
                      group:
                        description: group is the group of the thing you're tracking
                        type: string
                      hash:
                        description: hash is an optional field set for resources without
                          generation that are content sensitive like secrets and configmaps
                        type: string
                      lastGeneration:
                        description: lastGeneration is the last generation of the
                          workload controller involved
                        format: int64
                        type: integer
                      name:
                        description: name is the name of the thing you're tracking
                        type: string
                      namespace:
                        description: namespace is where the thing you're tracking
                          is
                        type: string
                      resource:
                        description: resource is the resource type of the thing you're
                          tracking
                        type: string
                    type: object
                  type: array
                latestAvailableRevision:
                  description: latestAvailableRevision is the deploymentID of the
                    most recent deployment
                  format: int32
                  type: integer
                latestAvailableRevisionReason:
                  description: latestAvailableRevisionReason describe the detailed
                    reason for the most recent deployment
                  type: string
                nodeStatuses:
                  description: nodeStatuses track the deployment values and errors
                    across individual nodes
                  items:
                    description: NodeStatus provides information about the current
                      state of a particular node managed by this operator.
                    properties:
                      currentRevision:
                        description: currentRevision is the generation of the most
                          recently successful deployment
                        format: int32
                        type: integer
                      lastFailedRevision:
                        description: lastFailedRevision is the generation of the deployment
                          we tried and failed to deploy.
                        format: int32
                        type: integer
                      lastFailedRevisionErrors:
                        description: lastFailedRevisionErrors is a list of the errors
                          during the failed deployment referenced in lastFailedRevision
                        items:
                          type: string
                        type: array
                      nodeName:
                        description: nodeName is the name of the node
                        type: string
                      targetRevision:
                        description: targetRevision is the generation of the deployment
                          we're trying to apply
                        format: int32
                        type: integer
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration is the last generation change you've
                    dealt with
                  format: int64
                  type: integer
                readyReplicas:
                  description: readyReplicas indicates how many replicas are ready
                    and at the desired state
                  format: int32
                  type: integer
                version:
                  description: version is the level this availability applies to
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: KubeAPIServer
      listKind: KubeAPIServerList
      plural: kubeapiservers
      singular: kubeapiserver
    conditions:
    - lastTransitionTime: "2020-11-18T12:59:20Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:59:20Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:51Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:51Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:51Z"
    name: kubecontrollermanagers.operator.openshift.io
    resourceVersion: "815"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/kubecontrollermanagers.operator.openshift.io
    uid: c59ae4ff-98e3-4c12-8982-30008d540d4e
  spec:
    conversion:
      strategy: None
    group: operator.openshift.io
    names:
      categories:
      - coreoperators
      kind: KubeControllerManager
      listKind: KubeControllerManagerList
      plural: kubecontrollermanagers
      singular: kubecontrollermanager
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: KubeControllerManager provides information to configure an
            operator to manage kube-controller-manager.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec is the specification of the desired behavior of the
                Kubernetes Controller Manager
              properties:
                failedRevisionLimit:
                  description: failedRevisionLimit is the number of failed static
                    pod installer revisions to keep on disk and in the api -1 = unlimited,
                    0 or unset = 5 (default)
                  format: int32
                  type: integer
                forceRedeploymentReason:
                  description: forceRedeploymentReason can be used to force the redeployment
                    of the operand by providing a unique string. This provides a mechanism
                    to kick a previously failed deployment and provide a reason why
                    you think it will work this time instead of failing again on the
                    same config.
                  type: string
                logLevel:
                  default: Normal
                  description: "logLevel is an intent based logging for an overall
                    component.  It does not give fine grained control, but it is a
                    simple way to manage coarse grained logging choices that operators
                    have to interpret for their operands. \n Valid values are: \"Normal\",
                    \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                managementState:
                  description: managementState indicates whether and how the operator
                    should manage the component
                  pattern: ^(Managed|Force)$
                  type: string
                observedConfig:
                  description: observedConfig holds a sparse config that controller
                    has observed from the cluster state.  It exists in spec because
                    it is an input to the level for the operator
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                operatorLogLevel:
                  default: Normal
                  description: "operatorLogLevel is an intent based logging for the
                    operator itself.  It does not give fine grained control, but it
                    is a simple way to manage coarse grained logging choices that
                    operators have to interpret for themselves. \n Valid values are:
                    \"Normal\", \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                succeededRevisionLimit:
                  description: succeededRevisionLimit is the number of successful
                    static pod installer revisions to keep on disk and in the api
                    -1 = unlimited, 0 or unset = 5 (default)
                  format: int32
                  type: integer
                unsupportedConfigOverrides:
                  description: 'unsupportedConfigOverrides holds a sparse config that
                    will override any previously set options.  It only needs to be
                    the fields to override it will end up overlaying in the following
                    order: 1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides'
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              type: object
            status:
              description: status is the most recently observed status of the Kubernetes
                Controller Manager
              properties:
                conditions:
                  description: conditions is a list of conditions and their status
                  items:
                    description: OperatorCondition is just the standard condition
                      fields.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
                generations:
                  description: generations are used to determine when an item needs
                    to be reconciled or has changed in a way that needs a reaction.
                  items:
                    description: GenerationStatus keeps track of the generation for
                      a given resource so that decisions about forced updates can
                      be made.
                    properties:
                      group:
                        description: group is the group of the thing you're tracking
                        type: string
                      hash:
                        description: hash is an optional field set for resources without
                          generation that are content sensitive like secrets and configmaps
                        type: string
                      lastGeneration:
                        description: lastGeneration is the last generation of the
                          workload controller involved
                        format: int64
                        type: integer
                      name:
                        description: name is the name of the thing you're tracking
                        type: string
                      namespace:
                        description: namespace is where the thing you're tracking
                          is
                        type: string
                      resource:
                        description: resource is the resource type of the thing you're
                          tracking
                        type: string
                    type: object
                  type: array
                latestAvailableRevision:
                  description: latestAvailableRevision is the deploymentID of the
                    most recent deployment
                  format: int32
                  type: integer
                latestAvailableRevisionReason:
                  description: latestAvailableRevisionReason describe the detailed
                    reason for the most recent deployment
                  type: string
                nodeStatuses:
                  description: nodeStatuses track the deployment values and errors
                    across individual nodes
                  items:
                    description: NodeStatus provides information about the current
                      state of a particular node managed by this operator.
                    properties:
                      currentRevision:
                        description: currentRevision is the generation of the most
                          recently successful deployment
                        format: int32
                        type: integer
                      lastFailedRevision:
                        description: lastFailedRevision is the generation of the deployment
                          we tried and failed to deploy.
                        format: int32
                        type: integer
                      lastFailedRevisionErrors:
                        description: lastFailedRevisionErrors is a list of the errors
                          during the failed deployment referenced in lastFailedRevision
                        items:
                          type: string
                        type: array
                      nodeName:
                        description: nodeName is the name of the node
                        type: string
                      targetRevision:
                        description: targetRevision is the generation of the deployment
                          we're trying to apply
                        format: int32
                        type: integer
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration is the last generation change you've
                    dealt with
                  format: int64
                  type: integer
                readyReplicas:
                  description: readyReplicas indicates how many replicas are ready
                    and at the desired state
                  format: int32
                  type: integer
                version:
                  description: version is the level this availability applies to
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - coreoperators
      kind: KubeControllerManager
      listKind: KubeControllerManagerList
      plural: kubecontrollermanagers
      singular: kubecontrollermanager
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T12:59:07Z"
    generation: 1
    labels:
      openshift.io/operator-managed: ""
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:openshift.io/operator-managed: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:kubeletConfig:
                      .: {}
                      f:type: {}
                      f:x-kubernetes-preserve-unknown-fields: {}
                    f:machineConfigPoolSelector:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:matchExpressions:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                        f:matchLabels:
                          .: {}
                          f:additionalProperties: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:conditions:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:observedGeneration:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                  f:type: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:59:07Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:59:09Z"
    name: kubeletconfigs.machineconfiguration.openshift.io
    resourceVersion: "1333"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/kubeletconfigs.machineconfiguration.openshift.io
    uid: fd404d84-f992-4fd5-a037-71a284a86e93
  spec:
    conversion:
      strategy: None
    group: machineconfiguration.openshift.io
    names:
      kind: KubeletConfig
      listKind: KubeletConfigList
      plural: kubeletconfigs
      singular: kubeletconfig
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: KubeletConfig describes a customized Kubelet configuration.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KubeletConfigSpec defines the desired state of KubeletConfig
              properties:
                kubeletConfig:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                machineConfigPoolSelector:
                  description: A label selector is a label query over a set of resources.
                    The result of matchLabels and matchExpressions are ANDed. An empty
                    label selector matches all objects. A null label selector matches
                    no objects.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
              type: object
            status:
              description: KubeletConfigStatus defines the observed state of a KubeletConfig
              properties:
                conditions:
                  description: conditions represents the latest available observations
                    of current state.
                  items:
                    description: KubeletConfigCondition defines the state of the KubeletConfig
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the time of the last update
                          to the current status object.
                        format: date-time
                        nullable: true
                        type: string
                      message:
                        description: message provides additional information about
                          the current condition. This is only to be consumed by humans.
                        type: string
                      reason:
                        description: reason is the reason for the condition's last
                          transition.  Reasons are PascalCase
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: type specifies the state of the operator's reconciliation
                          functionality.
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration represents the generation observed
                    by the controller.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: KubeletConfig
      listKind: KubeletConfigList
      plural: kubeletconfigs
      singular: kubeletconfig
    conditions:
    - lastTransitionTime: "2020-11-18T12:59:07Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:59:09Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:51Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:51Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:51Z"
    name: kubeschedulers.operator.openshift.io
    resourceVersion: "808"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/kubeschedulers.operator.openshift.io
    uid: b88ba3e6-70e2-41f3-a15c-5373efe64c62
  spec:
    conversion:
      strategy: None
    group: operator.openshift.io
    names:
      categories:
      - coreoperators
      kind: KubeScheduler
      listKind: KubeSchedulerList
      plural: kubeschedulers
      singular: kubescheduler
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: KubeScheduler provides information to configure an operator
            to manage scheduler.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec is the specification of the desired behavior of the
                Kubernetes Scheduler
              properties:
                failedRevisionLimit:
                  description: failedRevisionLimit is the number of failed static
                    pod installer revisions to keep on disk and in the api -1 = unlimited,
                    0 or unset = 5 (default)
                  format: int32
                  type: integer
                forceRedeploymentReason:
                  description: forceRedeploymentReason can be used to force the redeployment
                    of the operand by providing a unique string. This provides a mechanism
                    to kick a previously failed deployment and provide a reason why
                    you think it will work this time instead of failing again on the
                    same config.
                  type: string
                logLevel:
                  default: Normal
                  description: "logLevel is an intent based logging for an overall
                    component.  It does not give fine grained control, but it is a
                    simple way to manage coarse grained logging choices that operators
                    have to interpret for their operands. \n Valid values are: \"Normal\",
                    \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                managementState:
                  description: managementState indicates whether and how the operator
                    should manage the component
                  pattern: ^(Managed|Force)$
                  type: string
                observedConfig:
                  description: observedConfig holds a sparse config that controller
                    has observed from the cluster state.  It exists in spec because
                    it is an input to the level for the operator
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                operatorLogLevel:
                  default: Normal
                  description: "operatorLogLevel is an intent based logging for the
                    operator itself.  It does not give fine grained control, but it
                    is a simple way to manage coarse grained logging choices that
                    operators have to interpret for themselves. \n Valid values are:
                    \"Normal\", \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                succeededRevisionLimit:
                  description: succeededRevisionLimit is the number of successful
                    static pod installer revisions to keep on disk and in the api
                    -1 = unlimited, 0 or unset = 5 (default)
                  format: int32
                  type: integer
                unsupportedConfigOverrides:
                  description: 'unsupportedConfigOverrides holds a sparse config that
                    will override any previously set options.  It only needs to be
                    the fields to override it will end up overlaying in the following
                    order: 1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides'
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              type: object
            status:
              description: status is the most recently observed status of the Kubernetes
                Scheduler
              properties:
                conditions:
                  description: conditions is a list of conditions and their status
                  items:
                    description: OperatorCondition is just the standard condition
                      fields.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
                generations:
                  description: generations are used to determine when an item needs
                    to be reconciled or has changed in a way that needs a reaction.
                  items:
                    description: GenerationStatus keeps track of the generation for
                      a given resource so that decisions about forced updates can
                      be made.
                    properties:
                      group:
                        description: group is the group of the thing you're tracking
                        type: string
                      hash:
                        description: hash is an optional field set for resources without
                          generation that are content sensitive like secrets and configmaps
                        type: string
                      lastGeneration:
                        description: lastGeneration is the last generation of the
                          workload controller involved
                        format: int64
                        type: integer
                      name:
                        description: name is the name of the thing you're tracking
                        type: string
                      namespace:
                        description: namespace is where the thing you're tracking
                          is
                        type: string
                      resource:
                        description: resource is the resource type of the thing you're
                          tracking
                        type: string
                    type: object
                  type: array
                latestAvailableRevision:
                  description: latestAvailableRevision is the deploymentID of the
                    most recent deployment
                  format: int32
                  type: integer
                latestAvailableRevisionReason:
                  description: latestAvailableRevisionReason describe the detailed
                    reason for the most recent deployment
                  type: string
                nodeStatuses:
                  description: nodeStatuses track the deployment values and errors
                    across individual nodes
                  items:
                    description: NodeStatus provides information about the current
                      state of a particular node managed by this operator.
                    properties:
                      currentRevision:
                        description: currentRevision is the generation of the most
                          recently successful deployment
                        format: int32
                        type: integer
                      lastFailedRevision:
                        description: lastFailedRevision is the generation of the deployment
                          we tried and failed to deploy.
                        format: int32
                        type: integer
                      lastFailedRevisionErrors:
                        description: lastFailedRevisionErrors is a list of the errors
                          during the failed deployment referenced in lastFailedRevision
                        items:
                          type: string
                        type: array
                      nodeName:
                        description: nodeName is the name of the node
                        type: string
                      targetRevision:
                        description: targetRevision is the generation of the deployment
                          we're trying to apply
                        format: int32
                        type: integer
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration is the last generation change you've
                    dealt with
                  format: int64
                  type: integer
                readyReplicas:
                  description: readyReplicas indicates how many replicas are ready
                    and at the desired state
                  format: int32
                  type: integer
                version:
                  description: version is the level this availability applies to
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - coreoperators
      kind: KubeScheduler
      listKind: KubeSchedulerList
      plural: kubeschedulers
      singular: kubescheduler
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:48Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:48Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:48Z"
    name: kubestorageversionmigrators.operator.openshift.io
    resourceVersion: "659"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/kubestorageversionmigrators.operator.openshift.io
    uid: f8b0ccec-739b-461a-af44-430c8e20cd00
  spec:
    conversion:
      strategy: None
    group: operator.openshift.io
    names:
      kind: KubeStorageVersionMigrator
      listKind: KubeStorageVersionMigratorList
      plural: kubestorageversionmigrators
      singular: kubestorageversionmigrator
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: KubeStorageVersionMigrator provides information to configure
            an operator to manage kube-storage-version-migrator.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                logLevel:
                  default: Normal
                  description: "logLevel is an intent based logging for an overall
                    component.  It does not give fine grained control, but it is a
                    simple way to manage coarse grained logging choices that operators
                    have to interpret for their operands. \n Valid values are: \"Normal\",
                    \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                managementState:
                  description: managementState indicates whether and how the operator
                    should manage the component
                  pattern: ^(Managed|Unmanaged|Force|Removed)$
                  type: string
                observedConfig:
                  description: observedConfig holds a sparse config that controller
                    has observed from the cluster state.  It exists in spec because
                    it is an input to the level for the operator
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                operatorLogLevel:
                  default: Normal
                  description: "operatorLogLevel is an intent based logging for the
                    operator itself.  It does not give fine grained control, but it
                    is a simple way to manage coarse grained logging choices that
                    operators have to interpret for themselves. \n Valid values are:
                    \"Normal\", \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                unsupportedConfigOverrides:
                  description: 'unsupportedConfigOverrides holds a sparse config that
                    will override any previously set options.  It only needs to be
                    the fields to override it will end up overlaying in the following
                    order: 1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides'
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              type: object
            status:
              properties:
                conditions:
                  description: conditions is a list of conditions and their status
                  items:
                    description: OperatorCondition is just the standard condition
                      fields.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
                generations:
                  description: generations are used to determine when an item needs
                    to be reconciled or has changed in a way that needs a reaction.
                  items:
                    description: GenerationStatus keeps track of the generation for
                      a given resource so that decisions about forced updates can
                      be made.
                    properties:
                      group:
                        description: group is the group of the thing you're tracking
                        type: string
                      hash:
                        description: hash is an optional field set for resources without
                          generation that are content sensitive like secrets and configmaps
                        type: string
                      lastGeneration:
                        description: lastGeneration is the last generation of the
                          workload controller involved
                        format: int64
                        type: integer
                      name:
                        description: name is the name of the thing you're tracking
                        type: string
                      namespace:
                        description: namespace is where the thing you're tracking
                          is
                        type: string
                      resource:
                        description: resource is the resource type of the thing you're
                          tracking
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration is the last generation change you've
                    dealt with
                  format: int64
                  type: integer
                readyReplicas:
                  description: readyReplicas indicates how many replicas are ready
                    and at the desired state
                  format: int32
                  type: integer
                version:
                  description: version is the level this availability applies to
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: KubeStorageVersionMigrator
      listKind: KubeStorageVersionMigratorList
      plural: kubestorageversionmigrators
      singular: kubestorageversionmigrator
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:48Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:48Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      exclude.release.openshift.io/internal-openshift-hosted: "true"
    creationTimestamp: "2020-11-18T12:58:53Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:exclude.release.openshift.io/internal-openshift-hosted: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:53Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:54Z"
    name: machineautoscalers.autoscaling.openshift.io
    resourceVersion: "880"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/machineautoscalers.autoscaling.openshift.io
    uid: 2b7ed35f-9ba3-4893-bd9d-30f3358b9a97
  spec:
    conversion:
      strategy: None
    group: autoscaling.openshift.io
    names:
      kind: MachineAutoscaler
      listKind: MachineAutoscalerList
      plural: machineautoscalers
      shortNames:
      - ma
      singular: machineautoscaler
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Kind of object scaled
        jsonPath: .spec.scaleTargetRef.kind
        name: Ref Kind
        type: string
      - description: Name of object scaled
        jsonPath: .spec.scaleTargetRef.name
        name: Ref Name
        type: string
      - description: Min number of replicas
        jsonPath: .spec.minReplicas
        name: Min
        type: integer
      - description: Max number of replicas
        jsonPath: .spec.maxReplicas
        name: Max
        type: integer
      - description: MachineAutoscaler resoruce age
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: MachineAutoscaler is the Schema for the machineautoscalers
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of constraints of a scalable resource
              properties:
                maxReplicas:
                  description: MaxReplicas constrains the maximal number of replicas
                    of a scalable resource
                  format: int32
                  minimum: 1
                  type: integer
                minReplicas:
                  description: MinReplicas constrains the minimal number of replicas
                    of a scalable resource
                  format: int32
                  minimum: 0
                  type: integer
                scaleTargetRef:
                  description: ScaleTargetRef holds reference to a scalable resource
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources'
                      type: string
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds'
                      minLength: 1
                      type: string
                    name:
                      description: Name specifies a name of an object, e.g. worker-us-east-1a.
                        Scalable resources are expected to exist under a single namespace.
                      minLength: 1
                      type: string
                  required:
                  - kind
                  - name
                  type: object
              required:
              - maxReplicas
              - minReplicas
              - scaleTargetRef
              type: object
            status:
              description: Most recently observed status of a scalable resource
              properties:
                lastTargetRef:
                  description: LastTargetRef holds reference to the recently observed
                    scalable resource
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources'
                      type: string
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds'
                      minLength: 1
                      type: string
                    name:
                      description: Name specifies a name of an object, e.g. worker-us-east-1a.
                        Scalable resources are expected to exist under a single namespace.
                      minLength: 1
                      type: string
                  required:
                  - kind
                  - name
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: MachineAutoscaler
      listKind: MachineAutoscalerList
      plural: machineautoscalers
      shortNames:
      - ma
      singular: machineautoscaler
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:54Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:54Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T12:59:12Z"
    generation: 1
    labels:
      openshift.io/operator-managed: ""
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:openshift.io/operator-managed: {}
        f:spec:
          f:additionalPrinterColumns: {}
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:configuration:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:apiVersion:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:fieldPath:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:kind:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:name:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:namespace:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:resourceVersion:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:source:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                        f:uid:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                    f:machineConfigSelector:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:matchExpressions:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                        f:matchLabels:
                          .: {}
                          f:additionalProperties: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                    f:maxUnavailable:
                      .: {}
                      f:anyOf: {}
                      f:description: {}
                      f:x-kubernetes-int-or-string: {}
                    f:nodeSelector:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:matchExpressions:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                        f:matchLabels:
                          .: {}
                          f:additionalProperties: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                    f:paused:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:conditions:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:configuration:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:apiVersion:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:fieldPath:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:kind:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:name:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:namespace:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:resourceVersion:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:source:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                        f:uid:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                    f:degradedMachineCount:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                    f:machineCount:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                    f:observedGeneration:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                    f:readyMachineCount:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                    f:unavailableMachineCount:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                    f:updatedMachineCount:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                  f:type: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:59:12Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:59:12Z"
    name: machineconfigpools.machineconfiguration.openshift.io
    resourceVersion: "1441"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/machineconfigpools.machineconfiguration.openshift.io
    uid: d6de3e20-a315-43a4-92f8-501c183f7ae7
  spec:
    conversion:
      strategy: None
    group: machineconfiguration.openshift.io
    names:
      kind: MachineConfigPool
      listKind: MachineConfigPoolList
      plural: machineconfigpools
      shortNames:
      - mcp
      singular: machineconfigpool
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.configuration.name
        name: Config
        type: string
      - description: When all the machines in the pool are updated to the correct
          machine config.
        jsonPath: .status.conditions[?(@.type=="Updated")].status
        name: Updated
        type: string
      - description: When at least one of machine is not either not updated or is
          in the process of updating to the desired machine config.
        jsonPath: .status.conditions[?(@.type=="Updating")].status
        name: Updating
        type: string
      - description: When progress is blocked on updating one or more nodes, or the
          pool configuration is failing.
        jsonPath: .status.conditions[?(@.type=="Degraded")].status
        name: Degraded
        type: string
      - description: Total number of machines in the machine config pool
        jsonPath: .status.machineCount
        name: MachineCount
        type: number
      - description: Total number of ready machines targeted by the pool
        jsonPath: .status.readyMachineCount
        name: ReadyMachineCount
        type: number
      - description: Total number of machines targeted by the pool that have the CurrentMachineConfig
          as their config
        jsonPath: .status.updatedMachineCount
        name: UpdatedMachineCount
        type: number
      - description: Total number of machines marked degraded (or unreconcilable)
        jsonPath: .status.degradedMachineCount
        name: DegradedMachineCount
        type: number
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: MachineConfigPool describes a pool of MachineConfigs.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MachineConfigPoolSpec is the spec for MachineConfigPool
                resource.
              properties:
                configuration:
                  description: The targeted MachineConfig object for the machine config
                    pool.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    source:
                      description: source is the list of MachineConfig objects that
                        were used to generate the single MachineConfig object specified
                        in `content`.
                      items:
                        description: ObjectReference contains enough information to
                          let you inspect or modify the referred object.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      type: array
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                machineConfigSelector:
                  description: machineConfigSelector specifies a label selector for
                    MachineConfigs. Refer https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                    on how label and selectors work.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                maxUnavailable:
                  anyOf:
                  - type: integer
                  - type: string
                  description: maxUnavailable specifies the percentage or constant
                    number of machines that can be updating at any given time. default
                    is 1.
                  x-kubernetes-int-or-string: true
                nodeSelector:
                  description: nodeSelector specifies a label selector for Machines
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                paused:
                  description: paused specifies whether or not changes to this machine
                    config pool should be stopped. This includes generating new desiredMachineConfig
                    and update of machines.
                  type: boolean
              type: object
            status:
              description: MachineConfigPoolStatus is the status for MachineConfigPool
                resource.
              properties:
                conditions:
                  description: conditions represents the latest available observations
                    of current state.
                  items:
                    description: MachineConfigPoolCondition contains condition information
                      for an MachineConfigPool.
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        nullable: true
                        type: string
                      message:
                        description: message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      reason:
                        description: reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: status of the condition, one of ('True', 'False',
                          'Unknown').
                        type: string
                      type:
                        description: type of the condition, currently ('Done', 'Updating',
                          'Failed').
                        type: string
                    type: object
                  type: array
                configuration:
                  description: configuration represents the current MachineConfig
                    object for the machine config pool.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    source:
                      description: source is the list of MachineConfig objects that
                        were used to generate the single MachineConfig object specified
                        in `content`.
                      items:
                        description: ObjectReference contains enough information to
                          let you inspect or modify the referred object.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      type: array
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                degradedMachineCount:
                  description: degradedMachineCount represents the total number of
                    machines marked degraded (or unreconcilable). A node is marked
                    degraded if applying a configuration failed..
                  format: int32
                  type: integer
                machineCount:
                  description: machineCount represents the total number of machines
                    in the machine config pool.
                  format: int32
                  type: integer
                observedGeneration:
                  description: observedGeneration represents the generation observed
                    by the controller.
                  format: int64
                  type: integer
                readyMachineCount:
                  description: readyMachineCount represents the total number of ready
                    machines targeted by the pool.
                  format: int32
                  type: integer
                unavailableMachineCount:
                  description: unavailableMachineCount represents the total number
                    of unavailable (non-ready) machines targeted by the pool. A node
                    is marked unavailable if it is in updating state or NodeReady
                    condition is false.
                  format: int32
                  type: integer
                updatedMachineCount:
                  description: updatedMachineCount represents the total number of
                    machines targeted by the pool that have the CurrentMachineConfig
                    as their config.
                  format: int32
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: MachineConfigPool
      listKind: MachineConfigPoolList
      plural: machineconfigpools
      shortNames:
      - mcp
      singular: machineconfigpool
    conditions:
    - lastTransitionTime: "2020-11-18T12:59:12Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:59:12Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T12:59:10Z"
    generation: 1
    labels:
      openshift.io/operator-managed: ""
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:openshift.io/operator-managed: {}
        f:spec:
          f:additionalPrinterColumns: {}
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:config:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:ignition:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:config:
                              .: {}
                              f:properties:
                                .: {}
                                f:append:
                                  .: {}
                                  f:items: {}
                                  f:type: {}
                                f:replace:
                                  .: {}
                                  f:properties:
                                    .: {}
                                    f:source:
                                      .: {}
                                      f:type: {}
                                    f:verification:
                                      .: {}
                                      f:properties:
                                        .: {}
                                        f:hash:
                                          .: {}
                                          f:type: {}
                                      f:type: {}
                                  f:type: {}
                              f:type: {}
                            f:security:
                              .: {}
                              f:properties:
                                .: {}
                                f:tls:
                                  .: {}
                                  f:properties:
                                    .: {}
                                    f:certificateAuthorities:
                                      .: {}
                                      f:items: {}
                                      f:type: {}
                                  f:type: {}
                              f:type: {}
                            f:timeouts:
                              .: {}
                              f:properties:
                                .: {}
                                f:httpResponseHeaders:
                                  .: {}
                                  f:type: {}
                                f:httpTotal:
                                  .: {}
                                  f:type: {}
                              f:type: {}
                            f:version:
                              .: {}
                              f:description: {}
                              f:type: {}
                          f:type: {}
                          f:x-kubernetes-preserve-unknown-fields: {}
                        f:passwd:
                          .: {}
                          f:properties:
                            .: {}
                            f:users:
                              .: {}
                              f:items: {}
                              f:type: {}
                          f:type: {}
                        f:storage:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:directories:
                              .: {}
                              f:description: {}
                              f:items: {}
                              f:type: {}
                            f:files:
                              .: {}
                              f:description: {}
                              f:items: {}
                              f:type: {}
                          f:type: {}
                          f:x-kubernetes-preserve-unknown-fields: {}
                        f:systemd:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:units:
                              .: {}
                              f:description: {}
                              f:items: {}
                              f:type: {}
                          f:type: {}
                      f:required: {}
                      f:type: {}
                      f:x-kubernetes-preserve-unknown-fields: {}
                    f:extensions:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:nullable: {}
                      f:type: {}
                    f:fips:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:kernelArguments:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:nullable: {}
                      f:type: {}
                    f:kernelType:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:osImageURL:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:type: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:59:10Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:59:10Z"
    name: machineconfigs.machineconfiguration.openshift.io
    resourceVersion: "1372"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/machineconfigs.machineconfiguration.openshift.io
    uid: 0f56da17-8667-4860-8e34-c74c895f9c2c
  spec:
    conversion:
      strategy: None
    group: machineconfiguration.openshift.io
    names:
      kind: MachineConfig
      listKind: MachineConfigList
      plural: machineconfigs
      shortNames:
      - mc
      singular: machineconfig
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - description: Version of the controller that generated the machineconfig. This
          will be empty if the machineconfig is not managed by a controller.
        jsonPath: .metadata.annotations.machineconfiguration\.openshift\.io/generated-by-controller-version
        name: GeneratedByController
        type: string
      - description: Version of the Ignition Config defined in the machineconfig.
        jsonPath: .spec.config.ignition.version
        name: IgnitionVersion
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: MachineConfig defines the configuration for a machine
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MachineConfigSpec is the spec for MachineConfig
              properties:
                config:
                  description: Config is a Ignition Config object.
                  properties:
                    ignition:
                      description: Ignition section contains metadata about the configuration
                        itself. We only permit a subsection of ignition fields for
                        MachineConfigs.
                      properties:
                        config:
                          properties:
                            append:
                              items:
                                properties:
                                  source:
                                    type: string
                                  verification:
                                    properties:
                                      hash:
                                        type: string
                                    type: object
                                type: object
                              type: array
                            replace:
                              properties:
                                source:
                                  type: string
                                verification:
                                  properties:
                                    hash:
                                      type: string
                                  type: object
                              type: object
                          type: object
                        security:
                          properties:
                            tls:
                              properties:
                                certificateAuthorities:
                                  items:
                                    properties:
                                      source:
                                        type: string
                                      verification:
                                        properties:
                                          hash:
                                            type: string
                                        type: object
                                    type: object
                                  type: array
                              type: object
                          type: object
                        timeouts:
                          properties:
                            httpResponseHeaders:
                              type: integer
                            httpTotal:
                              type: integer
                          type: object
                        version:
                          description: Version string is the semantic version number
                            of the spec
                          type: string
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    passwd:
                      properties:
                        users:
                          items:
                            properties:
                              name:
                                description: Name of user. Must be \"core\" user.
                                type: string
                              sshAuthorizedKeys:
                                description: Public keys to be assigned to user core.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    storage:
                      description: Storage describes the desired state of the system's
                        storage devices.
                      properties:
                        directories:
                          description: Directories is the list of directories to be
                            created
                          items:
                            description: Items is list of directories to be written
                            properties:
                              filesystem:
                                description: Filesystem is the internal identifier
                                  of the filesystem in which to write the file. This
                                  matches the last filesystem with the given identifier.
                                type: string
                              group:
                                description: Group object specifies group of the owner
                                properties:
                                  id:
                                    description: ID is the user ID of the owner
                                    type: integer
                                  name:
                                    description: Name is the user name of the owner
                                    type: string
                                type: object
                              mode:
                                description: Mode is the file's permission mode. Note
                                  that the mode must be properly specified as a decimal
                                  value (i.e. 0644 -> 420)
                                type: integer
                              overwrite:
                                description: Overwrite specifies whether to delete
                                  preexisting nodes at the path
                                type: boolean
                              path:
                                description: Path is the absolute path to the file
                                type: string
                              user:
                                description: User object specifies the file's owner
                                properties:
                                  id:
                                    description: ID is the user ID of the owner
                                    type: integer
                                  name:
                                    description: Name is the user name of the owner
                                    type: string
                                type: object
                            type: object
                          type: array
                        files:
                          description: Files is the list of files to be created/modified
                          items:
                            description: Items is list of files to be written
                            properties:
                              append:
                                description: Append specifies whether to append to
                                  the specified file. Creates a new file if nothing
                                  exists at the path. Cannot be set if overwrite is
                                  set to true.
                                type: boolean
                              contents:
                                description: Contents specifies options related to
                                  the contents of the file
                                properties:
                                  compression:
                                    description: The type of compression used on the
                                      contents (null or gzip). Compression cannot
                                      be used with S3.
                                    type: string
                                  source:
                                    description: Source is the URL of the file contents.
                                      Supported schemes are http, https, tftp, s3,
                                      and data. When using http, it is advisable to
                                      use the verification option to ensure the contents
                                      haven't been modified.
                                    type: string
                                  verification:
                                    description: Verification specifies options related
                                      to the verification of the file contents
                                    properties:
                                      hash:
                                        description: Hash is the hash of the config,
                                          in the form <type>-<value> where type is
                                          sha512
                                        type: string
                                    type: object
                                type: object
                              filesystem:
                                description: Filesystem is the internal identifier
                                  of the filesystem in which to write the file. This
                                  matches the last filesystem with the given identifier
                                type: string
                              group:
                                description: Group object specifies group of the owner
                                properties:
                                  id:
                                    description: ID specifies group ID of the owner
                                    type: integer
                                  name:
                                    description: Name is the group name of the owner
                                    type: string
                                type: object
                              mode:
                                description: Mode specifies the file's permission
                                  mode. Note that the mode must be properly specified
                                  as a decimal value (i.e. 0644 -> 420)
                                type: integer
                              overwrite:
                                description: Overwrite specifies whether to delete
                                  preexisting nodes at the path
                                type: boolean
                              path:
                                description: Path is the absolute path to the file
                                type: string
                              user:
                                description: User object specifies the file's owner
                                properties:
                                  id:
                                    description: ID is the user ID of the owner
                                    type: integer
                                  name:
                                    description: Name is the user name of the owner
                                    type: string
                                type: object
                            type: object
                          type: array
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    systemd:
                      description: systemd describes the desired state of the systemd
                        units
                      properties:
                        units:
                          description: Units is a list of units to be configured
                          items:
                            description: Items describes unit configuration
                            properties:
                              contents:
                                description: Contents is the contents of the unit
                                type: string
                              dropins:
                                description: Dropins is the list of drop-ins for the
                                  unit
                                items:
                                  description: Items describes unit dropin
                                  properties:
                                    contents:
                                      description: Contents is the contents of the
                                        drop-in
                                      type: string
                                    name:
                                      description: Name is the name of the drop-in.
                                        This must be suffixed with '.conf'
                                      type: string
                                  type: object
                                type: array
                              enabled:
                                description: Enabled describes whether or not the
                                  service shall be enabled. When true, the service
                                  is enabled. When false, the service is disabled.
                                  When omitted, the service is unmodified. In order
                                  for this to have any effect, the unit must have
                                  an install section
                                type: boolean
                              mask:
                                description: Mask describes whether or not the service
                                  shall be masked. When true, the service is masked
                                  by symlinking it to /dev/null"
                                type: boolean
                              name:
                                description: Name is the name of the unit. This must
                                  be suffixed with a valid unit type (e.g. 'thing.service')
                                type: string
                            type: object
                          type: array
                      type: object
                  required:
                  - ignition
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                extensions:
                  description: List of additional features that can be enabled on
                    host
                  items:
                    type: string
                  nullable: true
                  type: array
                fips:
                  description: FIPS controls FIPS mode
                  type: boolean
                kernelArguments:
                  description: KernelArguments contains a list of kernel arguments
                    to be added
                  items:
                    type: string
                  nullable: true
                  type: array
                kernelType:
                  description: Contains which kernel we want to be running like default
                    (traditional), realtime
                  type: string
                osImageURL:
                  description: OSImageURL specifies the remote location that will
                    be used to fetch the OS to fetch the OS.
                  type: string
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: MachineConfig
      listKind: MachineConfigList
      plural: machineconfigs
      shortNames:
      - mc
      singular: machineconfig
    conditions:
    - lastTransitionTime: "2020-11-18T12:59:10Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:59:10Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      exclude.release.openshift.io/internal-openshift-hosted: "true"
    creationTimestamp: "2020-11-18T12:59:25Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:exclude.release.openshift.io/internal-openshift-hosted: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:59:25Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:59:25Z"
    name: machinehealthchecks.machine.openshift.io
    resourceVersion: "1889"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/machinehealthchecks.machine.openshift.io
    uid: 7ef32105-2f41-4d7f-8f89-c96ae24c975e
  spec:
    conversion:
      strategy: None
    group: machine.openshift.io
    names:
      kind: MachineHealthCheck
      listKind: MachineHealthCheckList
      plural: machinehealthchecks
      shortNames:
      - mhc
      - mhcs
      singular: machinehealthcheck
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Maximum number of unhealthy machines allowed
        jsonPath: .spec.maxUnhealthy
        name: MaxUnhealthy
        type: string
      - description: Number of machines currently monitored
        jsonPath: .status.expectedMachines
        name: ExpectedMachines
        type: integer
      - description: Current observed healthy machines
        jsonPath: .status.currentHealthy
        name: CurrentHealthy
        type: integer
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: MachineHealthCheck is the Schema for the machinehealthchecks
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of machine health check policy
              properties:
                maxUnhealthy:
                  anyOf:
                  - type: integer
                  - type: string
                  default: 100%
                  description: Any farther remediation is only allowed if at most
                    "MaxUnhealthy" machines selected by "selector" are not healthy.
                    Expects either a postive integer value or a percentage value.
                    Percentage values must be positive whole numbers and are capped
                    at 100%. Both 0 and 0% are valid and will block all remediation.
                  pattern: ^((100|[0-9]{1,2})%|[0-9]+)$
                  type: string
                  x-kubernetes-int-or-string: true
                nodeStartupTimeout:
                  default: 10m
                  description: Machines older than this duration without a node will
                    be considered to have failed and will be remediated. Expects an
                    unsigned duration string of decimal numbers each with optional
                    fraction and a unit suffix, eg "300ms", "1.5h" or "2h45m". Valid
                    time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
                  pattern: ^([0-9]+(\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$
                  type: string
                selector:
                  description: 'Label selector to match machines whose health will
                    be exercised. Note: An empty selector will match all machines.'
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                unhealthyConditions:
                  description: UnhealthyConditions contains a list of the conditions
                    that determine whether a node is considered unhealthy.  The conditions
                    are combined in a logical OR, i.e. if any of the conditions is
                    met, the node is unhealthy.
                  items:
                    description: UnhealthyCondition represents a Node condition type
                      and value with a timeout specified as a duration.  When the
                      named condition has been in the given status for at least the
                      timeout value, a node is considered unhealthy.
                    properties:
                      status:
                        minLength: 1
                        type: string
                      timeout:
                        description: Expects an unsigned duration string of decimal
                          numbers each with optional fraction and a unit suffix, eg
                          "300ms", "1.5h" or "2h45m". Valid time units are "ns", "us"
                          (or "µs"), "ms", "s", "m", "h".
                        pattern: ^([0-9]+(\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$
                        type: string
                      type:
                        minLength: 1
                        type: string
                    required:
                    - status
                    - timeout
                    - type
                    type: object
                  minItems: 1
                  type: array
              required:
              - selector
              - unhealthyConditions
              type: object
            status:
              description: Most recently observed status of MachineHealthCheck resource
              properties:
                currentHealthy:
                  description: total number of machines counted by this machine health
                    check
                  minimum: 0
                  type: integer
                expectedMachines:
                  description: total number of machines counted by this machine health
                    check
                  minimum: 0
                  type: integer
              required:
              - currentHealthy
              - expectedMachines
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: MachineHealthCheck
      listKind: MachineHealthCheckList
      plural: machinehealthchecks
      shortNames:
      - mhc
      - mhcs
      singular: machinehealthcheck
    conditions:
    - lastTransitionTime: "2020-11-18T12:59:25Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:59:25Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      exclude.release.openshift.io/internal-openshift-hosted: "true"
    creationTimestamp: "2020-11-18T12:59:20Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:exclude.release.openshift.io/internal-openshift-hosted: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:59:20Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:59:21Z"
    name: machines.machine.openshift.io
    resourceVersion: "1784"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/machines.machine.openshift.io
    uid: e2530e2b-6b6f-4195-a633-8cfb2ddf6727
  spec:
    conversion:
      strategy: None
    group: machine.openshift.io
    names:
      kind: Machine
      listKind: MachineList
      plural: machines
      singular: machine
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Phase of machine
        jsonPath: .status.phase
        name: Phase
        type: string
      - description: Type of instance
        jsonPath: .metadata.labels['machine\.openshift\.io/instance-type']
        name: Type
        type: string
      - description: Region associated with machine
        jsonPath: .metadata.labels['machine\.openshift\.io/region']
        name: Region
        type: string
      - description: Zone associated with machine
        jsonPath: .metadata.labels['machine\.openshift\.io/zone']
        name: Zone
        type: string
      - description: Machine age
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - description: Node associated with machine
        jsonPath: .status.nodeRef.name
        name: Node
        priority: 1
        type: string
      - description: Provider ID of machine created in cloud provider
        jsonPath: .spec.providerID
        name: ProviderID
        priority: 1
        type: string
      - description: State of instance
        jsonPath: .metadata.annotations['machine\.openshift\.io/instance-state']
        name: State
        priority: 1
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: / [Machine] Machine is the Schema for the machines API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: / [MachineSpec] MachineSpec defines the desired state of
                Machine
              properties:
                metadata:
                  description: ObjectMeta will autopopulate the Node created. Use
                    this to indicate what labels, annotations, name prefix, etc.,
                    should be used when creating the Node.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: 'Annotations is an unstructured key value map stored
                        with a resource that may be set by external tools to store
                        and retrieve arbitrary metadata. They are not queryable and
                        should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                      type: object
                    generateName:
                      description: "GenerateName is an optional prefix, used by the
                        server, to generate a unique name ONLY IF the Name field has
                        not been provided. If this field is used, the name returned
                        to the client will be different than the name passed. This
                        value will also be combined with a unique suffix. The provided
                        value has the same validation rules as the Name field, and
                        may be truncated by the length of the suffix required to make
                        the value unique on the server. \n If this field is specified
                        and the generated name exists, the server will NOT return
                        a 409 - instead, it will either return 201 Created or 500
                        with Reason ServerTimeout indicating a unique name could not
                        be found in the time allotted, and the client should retry
                        (optionally after the time indicated in the Retry-After header).
                        \n Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: 'Map of string keys and values that can be used
                        to organize and categorize (scope and select) objects. May
                        match selectors of replication controllers and services. More
                        info: http://kubernetes.io/docs/user-guide/labels'
                      type: object
                    name:
                      description: 'Name must be unique within a namespace. Is required
                        when creating resources, although some resources may allow
                        a client to request the generation of an appropriate name
                        automatically. Name is primarily intended for creation idempotence
                        and configuration definition. Cannot be updated. More info:
                        http://kubernetes.io/docs/user-guide/identifiers#names'
                      type: string
                    namespace:
                      description: "Namespace defines the space within each name must
                        be unique. An empty namespace is equivalent to the \"default\"
                        namespace, but \"default\" is the canonical representation.
                        Not all objects are required to be scoped to a namespace -
                        the value of this field for those objects will be empty. \n
                        Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
                      type: string
                    ownerReferences:
                      description: List of objects depended by this object. If ALL
                        objects in the list have been deleted, this object will be
                        garbage collected. If this object is managed by a controller,
                        then an entry in this list will point to this controller,
                        with the controller field set to true. There cannot be more
                        than one managing controller.
                      items:
                        description: OwnerReference contains enough information to
                          let you identify an owning object. An owning object must
                          be in the same namespace as the dependent, or be cluster-scoped,
                          so there is no namespace field.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          blockOwnerDeletion:
                            description: If true, AND if the owner has the "foregroundDeletion"
                              finalizer, then the owner cannot be deleted from the
                              key-value store until this reference is removed. Defaults
                              to false. To set this field, a user needs "delete" permission
                              of the owner, otherwise 422 (Unprocessable Entity) will
                              be returned.
                            type: boolean
                          controller:
                            description: If true, this reference points to the managing
                              controller.
                            type: boolean
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                            type: string
                        required:
                        - apiVersion
                        - kind
                        - name
                        - uid
                        type: object
                      type: array
                  type: object
                providerID:
                  description: ProviderID is the identification ID of the machine
                    provided by the provider. This field must match the provider ID
                    as seen on the node object corresponding to this machine. This
                    field is required by higher level consumers of cluster-api. Example
                    use case is cluster autoscaler with cluster-api as provider. Clean-up
                    logic in the autoscaler compares machines to nodes to find out
                    machines at provider which could not get registered as Kubernetes
                    nodes. With cluster-api as a generic out-of-tree provider for
                    autoscaler, this field is required by autoscaler to be able to
                    have a provider view of the list of machines. Another list of
                    nodes is queried from the k8s apiserver and then a comparison
                    is done to find out unregistered machines and are marked for delete.
                    This field will be set by the actuators and consumed by higher
                    level entities like autoscaler that will be interfacing with cluster-api
                    as generic provider.
                  type: string
                providerSpec:
                  description: ProviderSpec details Provider-specific configuration
                    to use during node creation.
                  properties:
                    value:
                      description: Value is an inlined, serialized representation
                        of the resource configuration. It is recommended that providers
                        maintain their own versioned API types that should be serialized/deserialized
                        from this field, akin to component config.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                taints:
                  description: The list of the taints to be applied to the corresponding
                    Node in additive manner. This list will not overwrite any other
                    taints added to the Node on an ongoing basis by other entities.
                    These taints should be actively reconciled e.g. if you ask the
                    machine controller to apply a taint and then manually remove the
                    taint the machine controller will put it back) but not have the
                    machine controller remove any taints
                  items:
                    description: The node this Taint is attached to has the "effect"
                      on any pod that does not tolerate the Taint.
                    properties:
                      effect:
                        description: Required. The effect of the taint on pods that
                          do not tolerate the taint. Valid effects are NoSchedule,
                          PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Required. The taint key to be applied to a node.
                        type: string
                      timeAdded:
                        description: TimeAdded represents the time at which the taint
                          was added. It is only written for NoExecute taints.
                        format: date-time
                        type: string
                      value:
                        description: The taint value corresponding to the taint key.
                        type: string
                    required:
                    - effect
                    - key
                    type: object
                  type: array
              type: object
            status:
              description: / [MachineStatus] MachineStatus defines the observed state
                of Machine
              properties:
                addresses:
                  description: Addresses is a list of addresses assigned to the machine.
                    Queried from cloud provider, if available.
                  items:
                    description: NodeAddress contains information for the node's address.
                    properties:
                      address:
                        description: The node address.
                        type: string
                      type:
                        description: Node address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                    - address
                    - type
                    type: object
                  type: array
                errorMessage:
                  description: "ErrorMessage will be set in the event that there is
                    a terminal problem reconciling the Machine and will contain a
                    more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                errorReason:
                  description: "ErrorReason will be set in the event that there is
                    a terminal problem reconciling the Machine and will contain a
                    succinct value suitable for machine interpretation. \n This field
                    should not be set for transitive errors that a controller faces
                    that are expected to be fixed automatically over time (like service
                    outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                lastOperation:
                  description: LastOperation describes the last-operation performed
                    by the machine-controller. This API should be useful as a history
                    in terms of the latest operation performed on the specific machine.
                    It should also convey the state of the latest-operation for example
                    if it is still on-going, failed or completed successfully.
                  properties:
                    description:
                      description: Description is the human-readable description of
                        the last operation.
                      type: string
                    lastUpdated:
                      description: LastUpdated is the timestamp at which LastOperation
                        API was last-updated.
                      format: date-time
                      type: string
                    state:
                      description: State is the current status of the last performed
                        operation. E.g. Processing, Failed, Successful etc
                      type: string
                    type:
                      description: Type is the type of operation which was last performed.
                        E.g. Create, Delete, Update etc
                      type: string
                  type: object
                lastUpdated:
                  description: LastUpdated identifies when this status was last observed.
                  format: date-time
                  type: string
                nodeRef:
                  description: NodeRef will point to the corresponding Node if it
                    exists.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                phase:
                  description: 'Phase represents the current phase of machine actuation.
                    One of: Failed, Provisioning, Provisioned, Running, Deleting'
                  type: string
                providerStatus:
                  description: ProviderStatus details a Provider-specific status.
                    It is recommended that providers maintain their own versioned
                    API types that should be serialized/deserialized from this field.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Machine
      listKind: MachineList
      plural: machines
      singular: machine
    conditions:
    - lastTransitionTime: "2020-11-18T12:59:20Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:59:21Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      exclude.release.openshift.io/internal-openshift-hosted: "true"
    creationTimestamp: "2020-11-18T12:59:22Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:exclude.release.openshift.io/internal-openshift-hosted: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:59:22Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:59:23Z"
    name: machinesets.machine.openshift.io
    resourceVersion: "1815"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/machinesets.machine.openshift.io
    uid: 731bd5e4-e166-436d-9761-2f5eaa242642
  spec:
    conversion:
      strategy: None
    group: machine.openshift.io
    names:
      kind: MachineSet
      listKind: MachineSetList
      plural: machinesets
      singular: machineset
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Desired Replicas
        jsonPath: .spec.replicas
        name: Desired
        type: integer
      - description: Current Replicas
        jsonPath: .status.replicas
        name: Current
        type: integer
      - description: Ready Replicas
        jsonPath: .status.readyReplicas
        name: Ready
        type: integer
      - description: Observed number of available replicas
        jsonPath: .status.availableReplicas
        name: Available
        type: string
      - description: Machineset age
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: / [MachineSet] MachineSet ensures that a specified number of
            machines replicas are running at any given time.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: / [MachineSetSpec] MachineSetSpec defines the desired state
                of MachineSet
              properties:
                deletePolicy:
                  description: DeletePolicy defines the policy used to identify nodes
                    to delete when downscaling. Defaults to "Random".  Valid values
                    are "Random, "Newest", "Oldest"
                  enum:
                  - Random
                  - Newest
                  - Oldest
                  type: string
                minReadySeconds:
                  description: MinReadySeconds is the minimum number of seconds for
                    which a newly created machine should be ready. Defaults to 0 (machine
                    will be considered available as soon as it is ready)
                  format: int32
                  type: integer
                replicas:
                  default: 1
                  description: Replicas is the number of desired replicas. This is
                    a pointer to distinguish between explicit zero and unspecified.
                    Defaults to 1.
                  format: int32
                  type: integer
                selector:
                  description: 'Selector is a label query over machines that should
                    match the replica count. Label keys and values that must match
                    in order to be controlled by this MachineSet. It must match the
                    machine template''s labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors'
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                template:
                  description: Template is the object that describes the machine that
                    will be created if insufficient replicas are detected.
                  properties:
                    metadata:
                      description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        generateName:
                          description: "GenerateName is an optional prefix, used by
                            the server, to generate a unique name ONLY IF the Name
                            field has not been provided. If this field is used, the
                            name returned to the client will be different than the
                            name passed. This value will also be combined with a unique
                            suffix. The provided value has the same validation rules
                            as the Name field, and may be truncated by the length
                            of the suffix required to make the value unique on the
                            server. \n If this field is specified and the generated
                            name exists, the server will NOT return a 409 - instead,
                            it will either return 201 Created or 500 with Reason ServerTimeout
                            indicating a unique name could not be found in the time
                            allotted, and the client should retry (optionally after
                            the time indicated in the Retry-After header). \n Applied
                            only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                        name:
                          description: 'Name must be unique within a namespace. Is
                            required when creating resources, although some resources
                            may allow a client to request the generation of an appropriate
                            name automatically. Name is primarily intended for creation
                            idempotence and configuration definition. Cannot be updated.
                            More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                          type: string
                        namespace:
                          description: "Namespace defines the space within each name
                            must be unique. An empty namespace is equivalent to the
                            \"default\" namespace, but \"default\" is the canonical
                            representation. Not all objects are required to be scoped
                            to a namespace - the value of this field for those objects
                            will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                            More info: http://kubernetes.io/docs/user-guide/namespaces"
                          type: string
                        ownerReferences:
                          description: List of objects depended by this object. If
                            ALL objects in the list have been deleted, this object
                            will be garbage collected. If this object is managed by
                            a controller, then an entry in this list will point to
                            this controller, with the controller field set to true.
                            There cannot be more than one managing controller.
                          items:
                            description: OwnerReference contains enough information
                              to let you identify an owning object. An owning object
                              must be in the same namespace as the dependent, or be
                              cluster-scoped, so there is no namespace field.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              blockOwnerDeletion:
                                description: If true, AND if the owner has the "foregroundDeletion"
                                  finalizer, then the owner cannot be deleted from
                                  the key-value store until this reference is removed.
                                  Defaults to false. To set this field, a user needs
                                  "delete" permission of the owner, otherwise 422
                                  (Unprocessable Entity) will be returned.
                                type: boolean
                              controller:
                                description: If true, this reference points to the
                                  managing controller.
                                type: boolean
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                type: string
                            required:
                            - apiVersion
                            - kind
                            - name
                            - uid
                            type: object
                          type: array
                      type: object
                    spec:
                      description: 'Specification of the desired behavior of the machine.
                        More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                      properties:
                        metadata:
                          description: ObjectMeta will autopopulate the Node created.
                            Use this to indicate what labels, annotations, name prefix,
                            etc., should be used when creating the Node.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: 'Annotations is an unstructured key value
                                map stored with a resource that may be set by external
                                tools to store and retrieve arbitrary metadata. They
                                are not queryable and should be preserved when modifying
                                objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                              type: object
                            generateName:
                              description: "GenerateName is an optional prefix, used
                                by the server, to generate a unique name ONLY IF the
                                Name field has not been provided. If this field is
                                used, the name returned to the client will be different
                                than the name passed. This value will also be combined
                                with a unique suffix. The provided value has the same
                                validation rules as the Name field, and may be truncated
                                by the length of the suffix required to make the value
                                unique on the server. \n If this field is specified
                                and the generated name exists, the server will NOT
                                return a 409 - instead, it will either return 201
                                Created or 500 with Reason ServerTimeout indicating
                                a unique name could not be found in the time allotted,
                                and the client should retry (optionally after the
                                time indicated in the Retry-After header). \n Applied
                                only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: 'Map of string keys and values that can
                                be used to organize and categorize (scope and select)
                                objects. May match selectors of replication controllers
                                and services. More info: http://kubernetes.io/docs/user-guide/labels'
                              type: object
                            name:
                              description: 'Name must be unique within a namespace.
                                Is required when creating resources, although some
                                resources may allow a client to request the generation
                                of an appropriate name automatically. Name is primarily
                                intended for creation idempotence and configuration
                                definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                              type: string
                            namespace:
                              description: "Namespace defines the space within each
                                name must be unique. An empty namespace is equivalent
                                to the \"default\" namespace, but \"default\" is the
                                canonical representation. Not all objects are required
                                to be scoped to a namespace - the value of this field
                                for those objects will be empty. \n Must be a DNS_LABEL.
                                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
                              type: string
                            ownerReferences:
                              description: List of objects depended by this object.
                                If ALL objects in the list have been deleted, this
                                object will be garbage collected. If this object is
                                managed by a controller, then an entry in this list
                                will point to this controller, with the controller
                                field set to true. There cannot be more than one managing
                                controller.
                              items:
                                description: OwnerReference contains enough information
                                  to let you identify an owning object. An owning
                                  object must be in the same namespace as the dependent,
                                  or be cluster-scoped, so there is no namespace field.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  blockOwnerDeletion:
                                    description: If true, AND if the owner has the
                                      "foregroundDeletion" finalizer, then the owner
                                      cannot be deleted from the key-value store until
                                      this reference is removed. Defaults to false.
                                      To set this field, a user needs "delete" permission
                                      of the owner, otherwise 422 (Unprocessable Entity)
                                      will be returned.
                                    type: boolean
                                  controller:
                                    description: If true, this reference points to
                                      the managing controller.
                                    type: boolean
                                  kind:
                                    description: 'Kind of the referent. More info:
                                      https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      http://kubernetes.io/docs/user-guide/identifiers#names'
                                    type: string
                                  uid:
                                    description: 'UID of the referent. More info:
                                      http://kubernetes.io/docs/user-guide/identifiers#uids'
                                    type: string
                                required:
                                - apiVersion
                                - kind
                                - name
                                - uid
                                type: object
                              type: array
                          type: object
                        providerID:
                          description: ProviderID is the identification ID of the
                            machine provided by the provider. This field must match
                            the provider ID as seen on the node object corresponding
                            to this machine. This field is required by higher level
                            consumers of cluster-api. Example use case is cluster
                            autoscaler with cluster-api as provider. Clean-up logic
                            in the autoscaler compares machines to nodes to find out
                            machines at provider which could not get registered as
                            Kubernetes nodes. With cluster-api as a generic out-of-tree
                            provider for autoscaler, this field is required by autoscaler
                            to be able to have a provider view of the list of machines.
                            Another list of nodes is queried from the k8s apiserver
                            and then a comparison is done to find out unregistered
                            machines and are marked for delete. This field will be
                            set by the actuators and consumed by higher level entities
                            like autoscaler that will be interfacing with cluster-api
                            as generic provider.
                          type: string
                        providerSpec:
                          description: ProviderSpec details Provider-specific configuration
                            to use during node creation.
                          properties:
                            value:
                              description: Value is an inlined, serialized representation
                                of the resource configuration. It is recommended that
                                providers maintain their own versioned API types that
                                should be serialized/deserialized from this field,
                                akin to component config.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                        taints:
                          description: The list of the taints to be applied to the
                            corresponding Node in additive manner. This list will
                            not overwrite any other taints added to the Node on an
                            ongoing basis by other entities. These taints should be
                            actively reconciled e.g. if you ask the machine controller
                            to apply a taint and then manually remove the taint the
                            machine controller will put it back) but not have the
                            machine controller remove any taints
                          items:
                            description: The node this Taint is attached to has the
                              "effect" on any pod that does not tolerate the Taint.
                            properties:
                              effect:
                                description: Required. The effect of the taint on
                                  pods that do not tolerate the taint. Valid effects
                                  are NoSchedule, PreferNoSchedule and NoExecute.
                                type: string
                              key:
                                description: Required. The taint key to be applied
                                  to a node.
                                type: string
                              timeAdded:
                                description: TimeAdded represents the time at which
                                  the taint was added. It is only written for NoExecute
                                  taints.
                                format: date-time
                                type: string
                              value:
                                description: The taint value corresponding to the
                                  taint key.
                                type: string
                            required:
                            - effect
                            - key
                            type: object
                          type: array
                      type: object
                  type: object
              required:
              - selector
              type: object
            status:
              description: / [MachineSetStatus] MachineSetStatus defines the observed
                state of MachineSet
              properties:
                availableReplicas:
                  description: The number of available replicas (ready for at least
                    minReadySeconds) for this MachineSet.
                  format: int32
                  type: integer
                errorMessage:
                  type: string
                errorReason:
                  description: "In the event that there is a terminal problem reconciling
                    the replicas, both ErrorReason and ErrorMessage will be set. ErrorReason
                    will be populated with a succinct value suitable for machine interpretation,
                    while ErrorMessage will contain a more verbose string suitable
                    for logging and human consumption. \n These fields should not
                    be set for transitive errors that a controller faces that are
                    expected to be fixed automatically over time (like service outages),
                    but instead indicate that something is fundamentally wrong with
                    the MachineTemplate's spec or the configuration of the machine
                    controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in
                    the spec, values that are unsupported by the machine controller,
                    or the responsible machine controller itself being critically
                    misconfigured. \n Any transient errors that occur during the reconciliation
                    of Machines can be added as events to the MachineSet object and/or
                    logged in the controller's output."
                  type: string
                fullyLabeledReplicas:
                  description: The number of replicas that have labels matching the
                    labels of the machine template of the MachineSet.
                  format: int32
                  type: integer
                observedGeneration:
                  description: ObservedGeneration reflects the generation of the most
                    recently observed MachineSet.
                  format: int64
                  type: integer
                readyReplicas:
                  description: The number of ready replicas for this MachineSet. A
                    machine is considered ready when the node has been created and
                    is "Ready".
                  format: int32
                  type: integer
                replicas:
                  description: Replicas is the most recently observed number of replicas.
                  format: int32
                  type: integer
              required:
              - replicas
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: .status.labelSelector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}
  status:
    acceptedNames:
      kind: MachineSet
      listKind: MachineSetList
      plural: machinesets
      singular: machineset
    conditions:
    - lastTransitionTime: "2020-11-18T12:59:22Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:59:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.3.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.3.0","meta.helm.sh/release-name":"rhm-operator","meta.helm.sh/release-namespace":"openshift-redhat-marketplace"},"creationTimestamp":null,"labels":{"app.kubernetes.io/managed-by":"Helm","redhat.marketplace.com/name":"redhat-marketplace-operator"},"name":"marketplaceconfigs.marketplace.redhat.com"},"spec":{"additionalPrinterColumns":[{"JSONPath":".status.conditions[?(@.type == \"Installing\")].status","name":"INSTALLING","type":"string"},{"JSONPath":".status.conditions[?(@.type == \"Installing\")].reason","name":"STEP","type":"string"},{"JSONPath":".status.conditions[?(@.type == \"Registered\")].status","name":"REGISTERED","type":"string"},{"JSONPath":".status.conditions[?(@.type == \"Registered\")].message","name":"REGISTERED_MSG","type":"string"}],"group":"marketplace.redhat.com","names":{"kind":"MarketplaceConfig","listKind":"MarketplaceConfigList","plural":"marketplaceconfigs","singular":"marketplaceconfig"},"preserveUnknownFields":false,"scope":"Namespaced","subresources":{"status":{}},"validation":{"openAPIV3Schema":{"description":"MarketplaceConfig is configuration manager for our Red Hat Marketplace controllers","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"MarketplaceConfigSpec defines the desired state of MarketplaceConfig","properties":{"clusterName":{"description":"ClusterName is the name that will be assigned to your cluster in the Red Hat Marketplace UI. If you have set the name in the UI first, this name will be ignored.","type":"string"},"clusterUUID":{"description":"ClusterUUID is the Red Hat Marketplace cluster identifier","type":"string"},"deploySecretName":{"description":"DeploySecretName is the secret name that contains the deployment information","type":"string"},"enableMetering":{"description":"EnableMetering enables the Marketplace Metering components","type":"boolean"},"features":{"description":"The features that can be enabled or disabled","properties":{"deployment":{"description":"Deployment represents the enablement of the razee deployment, defaults to true when not set","type":"boolean"},"registration":{"description":"Registration represents the enablement of the registration watchkeeper deployment, defaults to true when not set","type":"boolean"}},"type":"object"},"installIBMCatalogSource":{"description":"InstallIBMCatalogSource is the flag that indicates if the IBM Catalog Source is installed","type":"boolean"},"rhmAccountID":{"description":"RhmAccountID is the Red Hat Marketplace Account identifier","type":"string"}},"required":["clusterUUID","rhmAccountID"],"type":"object"},"status":{"description":"MarketplaceConfigStatus defines the observed state of MarketplaceConfig","properties":{"conditions":{"description":"Conditions represent the latest available observations of an object's stateonfig","items":{"description":"Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.","properties":{"lastTransitionTime":{"format":"date-time","type":"string"},"message":{"type":"string"},"reason":{"description":"ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.","type":"string"},"status":{"type":"string"},"type":{"description":"ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\".","type":"string"}},"required":["status","type"],"type":"object"},"type":"array"},"meterBaseSubConditions":{"description":"MeterBaseSubConditions represent the latest available observations of the meterbase object's state","items":{"description":"Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.","properties":{"lastTransitionTime":{"format":"date-time","type":"string"},"message":{"type":"string"},"reason":{"description":"ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.","type":"string"},"status":{"type":"string"},"type":{"description":"ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\".","type":"string"}},"required":["status","type"],"type":"object"},"type":"array"},"razeeSubConditions":{"description":"RazeeSubConditions represent the latest available observations of the razee object's state","items":{"description":"Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.","properties":{"lastTransitionTime":{"format":"date-time","type":"string"},"message":{"type":"string"},"reason":{"description":"ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.","type":"string"},"status":{"type":"string"},"type":{"description":"ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\".","type":"string"}},"required":["status","type"],"type":"object"},"type":"array"}},"type":"object"}},"type":"object"}},"version":"v1alpha1","versions":[{"name":"v1alpha1","served":true,"storage":true}]},"status":{"acceptedNames":{"kind":"","plural":""},"conditions":[],"storedVersions":[]}}
      meta.helm.sh/release-name: rhm-operator
      meta.helm.sh/release-namespace: openshift-redhat-marketplace
    creationTimestamp: "2021-01-12T17:45:18Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      redhat.marketplace.com/name: redhat-marketplace-operator
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:listKind: {}
            f:singular: {}
      manager: kube-apiserver
      operation: Update
      time: "2021-01-12T17:45:18Z"
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:controller-gen.kubebuilder.io/version: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
            f:redhat.marketplace.com/name: {}
        f:spec:
          f:additionalPrinterColumns: {}
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:clusterName:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:clusterUUID:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:deploySecretName:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:enableMetering:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:features:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:deployment:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:registration:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                    f:installIBMCatalogSource:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:rhmAccountID:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:conditions:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:meterBaseSubConditions:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:razeeSubConditions:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                  f:type: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
          f:storedVersions: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2021-01-12T17:47:24Z"
    name: marketplaceconfigs.marketplace.redhat.com
    resourceVersion: "36610212"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/marketplaceconfigs.marketplace.redhat.com
    uid: 764df2e6-2d52-4787-9004-b14bc04ea321
  spec:
    conversion:
      strategy: None
    group: marketplace.redhat.com
    names:
      kind: MarketplaceConfig
      listKind: MarketplaceConfigList
      plural: marketplaceconfigs
      singular: marketplaceconfig
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type == "Installing")].status
        name: INSTALLING
        type: string
      - jsonPath: .status.conditions[?(@.type == "Installing")].reason
        name: STEP
        type: string
      - jsonPath: .status.conditions[?(@.type == "Registered")].status
        name: REGISTERED
        type: string
      - jsonPath: .status.conditions[?(@.type == "Registered")].message
        name: REGISTERED_MSG
        type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: MarketplaceConfig is configuration manager for our Red Hat
            Marketplace controllers
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MarketplaceConfigSpec defines the desired state of MarketplaceConfig
              properties:
                clusterName:
                  description: ClusterName is the name that will be assigned to your
                    cluster in the Red Hat Marketplace UI. If you have set the name
                    in the UI first, this name will be ignored.
                  type: string
                clusterUUID:
                  description: ClusterUUID is the Red Hat Marketplace cluster identifier
                  type: string
                deploySecretName:
                  description: DeploySecretName is the secret name that contains the
                    deployment information
                  type: string
                enableMetering:
                  description: EnableMetering enables the Marketplace Metering components
                  type: boolean
                features:
                  description: The features that can be enabled or disabled
                  properties:
                    deployment:
                      description: Deployment represents the enablement of the razee
                        deployment, defaults to true when not set
                      type: boolean
                    registration:
                      description: Registration represents the enablement of the registration
                        watchkeeper deployment, defaults to true when not set
                      type: boolean
                  type: object
                installIBMCatalogSource:
                  description: InstallIBMCatalogSource is the flag that indicates
                    if the IBM Catalog Source is installed
                  type: boolean
                rhmAccountID:
                  description: RhmAccountID is the Red Hat Marketplace Account identifier
                  type: string
              required:
              - clusterUUID
              - rhmAccountID
              type: object
            status:
              description: MarketplaceConfigStatus defines the observed state of MarketplaceConfig
              properties:
                conditions:
                  description: Conditions represent the latest available observations
                    of an object's stateonfig
                  items:
                    description: "Condition represents an observation of an object's
                      state. Conditions are an extension mechanism intended to be
                      used when the details of an observation are not a priori known
                      or would not apply to all instances of a given Kind. \n Conditions
                      should be added to explicitly convey properties that users and
                      components care about rather than requiring those properties
                      to be inferred from other observations. Once defined, the meaning
                      of a Condition can not be changed arbitrarily - it becomes part
                      of the API, and has the same backwards- and forwards-compatibility
                      concerns of any other part of the API."
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        description: ConditionReason is intended to be a one-word,
                          CamelCase representation of the category of cause of the
                          current status. It is intended to be used in concise output,
                          such as one-line kubectl get output, and in summarizing
                          occurrences of causes.
                        type: string
                      status:
                        type: string
                      type:
                        description: "ConditionType is the type of the condition and
                          is typically a CamelCased word or short phrase. \n Condition
                          types should indicate state in the \"abnormal-true\" polarity.
                          For example, if the condition indicates when a policy is
                          invalid, the \"is valid\" case is probably the norm, so
                          the condition should be called \"Invalid\"."
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                meterBaseSubConditions:
                  description: MeterBaseSubConditions represent the latest available
                    observations of the meterbase object's state
                  items:
                    description: "Condition represents an observation of an object's
                      state. Conditions are an extension mechanism intended to be
                      used when the details of an observation are not a priori known
                      or would not apply to all instances of a given Kind. \n Conditions
                      should be added to explicitly convey properties that users and
                      components care about rather than requiring those properties
                      to be inferred from other observations. Once defined, the meaning
                      of a Condition can not be changed arbitrarily - it becomes part
                      of the API, and has the same backwards- and forwards-compatibility
                      concerns of any other part of the API."
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        description: ConditionReason is intended to be a one-word,
                          CamelCase representation of the category of cause of the
                          current status. It is intended to be used in concise output,
                          such as one-line kubectl get output, and in summarizing
                          occurrences of causes.
                        type: string
                      status:
                        type: string
                      type:
                        description: "ConditionType is the type of the condition and
                          is typically a CamelCased word or short phrase. \n Condition
                          types should indicate state in the \"abnormal-true\" polarity.
                          For example, if the condition indicates when a policy is
                          invalid, the \"is valid\" case is probably the norm, so
                          the condition should be called \"Invalid\"."
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                razeeSubConditions:
                  description: RazeeSubConditions represent the latest available observations
                    of the razee object's state
                  items:
                    description: "Condition represents an observation of an object's
                      state. Conditions are an extension mechanism intended to be
                      used when the details of an observation are not a priori known
                      or would not apply to all instances of a given Kind. \n Conditions
                      should be added to explicitly convey properties that users and
                      components care about rather than requiring those properties
                      to be inferred from other observations. Once defined, the meaning
                      of a Condition can not be changed arbitrarily - it becomes part
                      of the API, and has the same backwards- and forwards-compatibility
                      concerns of any other part of the API."
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        description: ConditionReason is intended to be a one-word,
                          CamelCase representation of the category of cause of the
                          current status. It is intended to be used in concise output,
                          such as one-line kubectl get output, and in summarizing
                          occurrences of causes.
                        type: string
                      status:
                        type: string
                      type:
                        description: "ConditionType is the type of the condition and
                          is typically a CamelCased word or short phrase. \n Condition
                          types should indicate state in the \"abnormal-true\" polarity.
                          For example, if the condition indicates when a policy is
                          invalid, the \"is valid\" case is probably the norm, so
                          the condition should be called \"Invalid\"."
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: MarketplaceConfig
      listKind: MarketplaceConfigList
      plural: marketplaceconfigs
      singular: marketplaceconfig
    conditions:
    - lastTransitionTime: "2021-01-12T17:45:18Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-01-12T17:45:18Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.3.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.3.0","meta.helm.sh/release-name":"rhm-operator","meta.helm.sh/release-namespace":"openshift-redhat-marketplace"},"creationTimestamp":null,"labels":{"app.kubernetes.io/managed-by":"Helm","redhat.marketplace.com/name":"redhat-marketplace-operator"},"name":"meterbases.marketplace.redhat.com"},"spec":{"additionalPrinterColumns":[{"JSONPath":".status.conditions[?(@.type == \"Installing\")].status","name":"INSTALLING","type":"string"},{"JSONPath":".status.conditions[?(@.type == \"Installing\")].reason","name":"STEP","type":"string"},{"JSONPath":".status.availableReplicas","name":"AvailableReplicas","type":"integer"},{"JSONPath":".status.replicas","name":"Replicas","type":"integer"},{"JSONPath":".status.updatedReplicas","name":"UpdatedReplicas","type":"integer"},{"JSONPath":".status.unavailableReplicas","name":"UnavailableReplicas","type":"integer"}],"group":"marketplace.redhat.com","names":{"kind":"MeterBase","listKind":"MeterBaseList","plural":"meterbases","singular":"meterbase"},"preserveUnknownFields":false,"scope":"Namespaced","subresources":{"status":{}},"validation":{"openAPIV3Schema":{"description":"MeterBase is the resource that sets up Metering for Red Hat Marketplace. This is an internal resource not meant to be modified directly.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"MeterBaseSpec defines the desired state of MeterBase","properties":{"additionalScrapeConfigs":{"description":"AdditionalConfigs are set by meter definitions and meterbase to what is available on the system.","properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"required":["key"],"type":"object"},"enabled":{"description":"Enabled is the flag that controls if the controller does work. Setting enabled to \"true\" will install metering components. False will suspend controller operations for metering components.","type":"boolean"},"prometheus":{"description":"Prometheus deployment configuration.","properties":{"replicas":{"description":"Replicas defines the number of desired replicas for the prometheus deployment. Used primarily when running metering on CRC","format":"int32","type":"integer"},"resources":{"description":"Resource requirements for the deployment. Default is not defined.","properties":{"limits":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/","type":"object"},"requests":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/","type":"object"}},"type":"object"},"selector":{"additionalProperties":{"type":"string"},"description":"Selector for the pods in the Prometheus deployment","type":"object"},"storage":{"description":"Storage for the deployment.","properties":{"class":{"description":"Storage class for the prometheus stateful set. Default is \"\" i.e. default.","type":"string"},"emptyDir":{"description":"EmptyDir is a temporary storage type that gets created on the prometheus pod. When this is defined metering will run on CRC.","properties":{"medium":{"description":"What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir","type":"string"},"sizeLimit":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir","pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true}},"type":"object"},"size":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"Storage size for the prometheus deployment. Default is 40Gi.","format":"quantity","pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","type":"string","x-kubernetes-int-or-string":true}},"type":"object"}},"required":["storage"],"type":"object"}},"required":["enabled"],"type":"object"},"status":{"description":"MeterBaseStatus defines the observed state of MeterBase.","properties":{"availableReplicas":{"description":"Total number of available pods (ready for at least minReadySeconds) targeted by this Prometheus deployment.","format":"int32","type":"integer"},"conditions":{"description":"MeterBaseConditions represent the latest available observations of an object's stateonfig","items":{"description":"Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.","properties":{"lastTransitionTime":{"format":"date-time","type":"string"},"message":{"type":"string"},"reason":{"description":"ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.","type":"string"},"status":{"type":"string"},"type":{"description":"ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\".","type":"string"}},"required":["status","type"],"type":"object"},"type":"array"},"prometheusStatus":{"description":"PrometheusStatus is the most recent observed status of the Prometheus cluster. Read-only. Not included when requesting from the apiserver, only from the Prometheus","properties":{"availableReplicas":{"description":"Total number of available pods (ready for at least minReadySeconds) targeted by this Prometheus deployment.","format":"int32","type":"integer"},"paused":{"description":"Represents whether any actions on the underlying managed objects are being performed. Only delete actions will be performed.","type":"boolean"},"replicas":{"description":"Total number of non-terminated pods targeted by this Prometheus deployment (their labels match the selector).","format":"int32","type":"integer"},"unavailableReplicas":{"description":"Total number of unavailable pods targeted by this Prometheus deployment.","format":"int32","type":"integer"},"updatedReplicas":{"description":"Total number of non-terminated pods targeted by this Prometheus deployment that have the desired version spec.","format":"int32","type":"integer"}},"required":["availableReplicas","paused","replicas","unavailableReplicas","updatedReplicas"],"type":"object"},"replicas":{"description":"Total number of non-terminated pods targeted by this Prometheus deployment (their labels match the selector).","format":"int32","type":"integer"},"unavailableReplicas":{"description":"Total number of unavailable pods targeted by this Prometheus deployment.","format":"int32","type":"integer"},"updatedReplicas":{"description":"Total number of non-terminated pods targeted by this Prometheus deployment that have the desired version spec.","format":"int32","type":"integer"}},"type":"object"}},"type":"object"}},"version":"v1alpha1","versions":[{"name":"v1alpha1","served":true,"storage":true}]},"status":{"acceptedNames":{"kind":"","plural":""},"conditions":[],"storedVersions":[]}}
      meta.helm.sh/release-name: rhm-operator
      meta.helm.sh/release-namespace: openshift-redhat-marketplace
    creationTimestamp: "2021-01-12T17:45:18Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      redhat.marketplace.com/name: redhat-marketplace-operator
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:listKind: {}
            f:singular: {}
      manager: kube-apiserver
      operation: Update
      time: "2021-01-12T17:45:18Z"
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:controller-gen.kubebuilder.io/version: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
            f:redhat.marketplace.com/name: {}
        f:spec:
          f:additionalPrinterColumns: {}
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:additionalScrapeConfigs:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:key:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:name:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:optional:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:required: {}
                      f:type: {}
                    f:enabled:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:prometheus:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:replicas:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                        f:resources:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:limits:
                              .: {}
                              f:additionalProperties: {}
                              f:description: {}
                              f:type: {}
                            f:requests:
                              .: {}
                              f:additionalProperties: {}
                              f:description: {}
                              f:type: {}
                          f:type: {}
                        f:selector:
                          .: {}
                          f:additionalProperties: {}
                          f:description: {}
                          f:type: {}
                        f:storage:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:class:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:emptyDir:
                              .: {}
                              f:description: {}
                              f:properties:
                                .: {}
                                f:medium:
                                  .: {}
                                  f:description: {}
                                  f:type: {}
                                f:sizeLimit:
                                  .: {}
                                  f:anyOf: {}
                                  f:description: {}
                                  f:pattern: {}
                                  f:x-kubernetes-int-or-string: {}
                              f:type: {}
                            f:size:
                              .: {}
                              f:anyOf: {}
                              f:description: {}
                              f:format: {}
                              f:pattern: {}
                              f:type: {}
                              f:x-kubernetes-int-or-string: {}
                          f:type: {}
                      f:required: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:availableReplicas:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                    f:conditions:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:prometheusStatus:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:availableReplicas:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                        f:paused:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:replicas:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                        f:unavailableReplicas:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                        f:updatedReplicas:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                      f:required: {}
                      f:type: {}
                    f:replicas:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                    f:unavailableReplicas:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                    f:updatedReplicas:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                  f:type: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
          f:storedVersions: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2021-01-12T17:47:24Z"
    name: meterbases.marketplace.redhat.com
    resourceVersion: "36610213"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/meterbases.marketplace.redhat.com
    uid: 7e9e0e60-ea48-44c5-a681-80596affe6bd
  spec:
    conversion:
      strategy: None
    group: marketplace.redhat.com
    names:
      kind: MeterBase
      listKind: MeterBaseList
      plural: meterbases
      singular: meterbase
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type == "Installing")].status
        name: INSTALLING
        type: string
      - jsonPath: .status.conditions[?(@.type == "Installing")].reason
        name: STEP
        type: string
      - jsonPath: .status.availableReplicas
        name: AvailableReplicas
        type: integer
      - jsonPath: .status.replicas
        name: Replicas
        type: integer
      - jsonPath: .status.updatedReplicas
        name: UpdatedReplicas
        type: integer
      - jsonPath: .status.unavailableReplicas
        name: UnavailableReplicas
        type: integer
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: MeterBase is the resource that sets up Metering for Red Hat
            Marketplace. This is an internal resource not meant to be modified directly.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MeterBaseSpec defines the desired state of MeterBase
              properties:
                additionalScrapeConfigs:
                  description: AdditionalConfigs are set by meter definitions and
                    meterbase to what is available on the system.
                  properties:
                    key:
                      description: The key of the secret to select from.  Must be
                        a valid secret key.
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                    optional:
                      description: Specify whether the Secret or its key must be defined
                      type: boolean
                  required:
                  - key
                  type: object
                enabled:
                  description: Enabled is the flag that controls if the controller
                    does work. Setting enabled to "true" will install metering components.
                    False will suspend controller operations for metering components.
                  type: boolean
                prometheus:
                  description: Prometheus deployment configuration.
                  properties:
                    replicas:
                      description: Replicas defines the number of desired replicas
                        for the prometheus deployment. Used primarily when running
                        metering on CRC
                      format: int32
                      type: integer
                    resources:
                      description: Resource requirements for the deployment. Default
                        is not defined.
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                      type: object
                    selector:
                      additionalProperties:
                        type: string
                      description: Selector for the pods in the Prometheus deployment
                      type: object
                    storage:
                      description: Storage for the deployment.
                      properties:
                        class:
                          description: Storage class for the prometheus stateful set.
                            Default is "" i.e. default.
                          type: string
                        emptyDir:
                          description: EmptyDir is a temporary storage type that gets
                            created on the prometheus pod. When this is defined metering
                            will run on CRC.
                          properties:
                            medium:
                              description: 'What type of storage medium should back
                                this directory. The default is "" which means to use
                                the node''s default medium. Must be an empty string
                                (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                              type: string
                            sizeLimit:
                              anyOf:
                              - type: integer
                              - type: string
                              description: 'Total amount of local storage required
                                for this EmptyDir volume. The size limit is also applicable
                                for memory medium. The maximum usage on memory medium
                                EmptyDir would be the minimum value between the SizeLimit
                                specified here and the sum of memory limits of all
                                containers in a pod. The default is nil which means
                                that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        size:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Storage size for the prometheus deployment.
                            Default is 40Gi.
                          format: quantity
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          type: string
                          x-kubernetes-int-or-string: true
                      type: object
                  required:
                  - storage
                  type: object
              required:
              - enabled
              type: object
            status:
              description: MeterBaseStatus defines the observed state of MeterBase.
              properties:
                availableReplicas:
                  description: Total number of available pods (ready for at least
                    minReadySeconds) targeted by this Prometheus deployment.
                  format: int32
                  type: integer
                conditions:
                  description: MeterBaseConditions represent the latest available
                    observations of an object's stateonfig
                  items:
                    description: "Condition represents an observation of an object's
                      state. Conditions are an extension mechanism intended to be
                      used when the details of an observation are not a priori known
                      or would not apply to all instances of a given Kind. \n Conditions
                      should be added to explicitly convey properties that users and
                      components care about rather than requiring those properties
                      to be inferred from other observations. Once defined, the meaning
                      of a Condition can not be changed arbitrarily - it becomes part
                      of the API, and has the same backwards- and forwards-compatibility
                      concerns of any other part of the API."
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        description: ConditionReason is intended to be a one-word,
                          CamelCase representation of the category of cause of the
                          current status. It is intended to be used in concise output,
                          such as one-line kubectl get output, and in summarizing
                          occurrences of causes.
                        type: string
                      status:
                        type: string
                      type:
                        description: "ConditionType is the type of the condition and
                          is typically a CamelCased word or short phrase. \n Condition
                          types should indicate state in the \"abnormal-true\" polarity.
                          For example, if the condition indicates when a policy is
                          invalid, the \"is valid\" case is probably the norm, so
                          the condition should be called \"Invalid\"."
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                prometheusStatus:
                  description: PrometheusStatus is the most recent observed status
                    of the Prometheus cluster. Read-only. Not included when requesting
                    from the apiserver, only from the Prometheus
                  properties:
                    availableReplicas:
                      description: Total number of available pods (ready for at least
                        minReadySeconds) targeted by this Prometheus deployment.
                      format: int32
                      type: integer
                    paused:
                      description: Represents whether any actions on the underlying
                        managed objects are being performed. Only delete actions will
                        be performed.
                      type: boolean
                    replicas:
                      description: Total number of non-terminated pods targeted by
                        this Prometheus deployment (their labels match the selector).
                      format: int32
                      type: integer
                    unavailableReplicas:
                      description: Total number of unavailable pods targeted by this
                        Prometheus deployment.
                      format: int32
                      type: integer
                    updatedReplicas:
                      description: Total number of non-terminated pods targeted by
                        this Prometheus deployment that have the desired version spec.
                      format: int32
                      type: integer
                  required:
                  - availableReplicas
                  - paused
                  - replicas
                  - unavailableReplicas
                  - updatedReplicas
                  type: object
                replicas:
                  description: Total number of non-terminated pods targeted by this
                    Prometheus deployment (their labels match the selector).
                  format: int32
                  type: integer
                unavailableReplicas:
                  description: Total number of unavailable pods targeted by this Prometheus
                    deployment.
                  format: int32
                  type: integer
                updatedReplicas:
                  description: Total number of non-terminated pods targeted by this
                    Prometheus deployment that have the desired version spec.
                  format: int32
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: MeterBase
      listKind: MeterBaseList
      plural: meterbases
      singular: meterbase
    conditions:
    - lastTransitionTime: "2021-01-12T17:45:18Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-01-12T17:45:18Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.3.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.3.0","meta.helm.sh/release-name":"rhm-operator","meta.helm.sh/release-namespace":"openshift-redhat-marketplace","service.beta.openshift.io/inject-cabundle":"true"},"labels":{"app.kubernetes.io/managed-by":"Helm","redhat.marketplace.com/name":"redhat-marketplace-operator"},"name":"meterdefinitions.marketplace.redhat.com"},"spec":{"conversion":{"strategy":"Webhook","webhookClientConfig":{"caBundle":"Cg==","service":{"name":"redhat-marketplace-webhook-service","namespace":"openshift-redhat-marketplace","path":"/convert","port":443}}},"group":"marketplace.redhat.com","names":{"kind":"MeterDefinition","listKind":"MeterDefinitionList","plural":"meterdefinitions","singular":"meterdefinition"},"preserveUnknownFields":false,"scope":"Namespaced","subresources":{"status":{}},"version":"v1alpha1","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"MeterDefinition defines the meter workloads used to enable pay for use billing.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"MeterDefinitionSpec defines the desired metering spec","properties":{"installedBy":{"description":"InstalledBy is a reference to the CSV that install the meter definition. This is used to determine an operator group.","properties":{"groupVersionKind":{"description":"GroupVersionKind of the resource","properties":{"apiVersion":{"description":"APIVersion of the CRD","type":"string"},"kind":{"description":"Kind of the CRD","type":"string"}},"required":["apiVersion","kind"],"type":"object"},"name":{"description":"Name of the resource Required","type":"string"},"namespace":{"description":"Namespace of the resource Required","type":"string"},"uid":{"description":"Namespace of the resource","type":"string"}},"required":["name","namespace"],"type":"object"},"meterGroup":{"description":"Group defines the operator group of the meter","type":"string"},"meterKind":{"description":"Kind defines the primary CRD kind of the meter","type":"string"},"meterVersion":{"description":"Version defines the primary CRD version of the meter. This field is no longer used.","type":"string"},"podMeterLabels":{"description":"PodMeterLabels name of the prometheus metrics you want to track. User workloads instead.","items":{"type":"string"},"type":"array"},"serviceMeterLabels":{"description":"ServiceMeterLabels name of the meterics you want to track. Use workloads instead.","items":{"type":"string"},"type":"array"},"workloadVertexLabelSelectors":{"description":"VertexFilters are used when Namespace is selected. Can be omitted if you select OperatorGroup","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"workloadVertexType":{"description":"WorkloadVertexType is the top most object of a workload. It allows you to identify the upper bounds of your workloads.","enum":["Namespace","OperatorGroup"],"type":"string"},"workloads":{"description":"Workloads identify the workloads to meter.","items":{"description":"Workload helps identify what to target for metering.","properties":{"annotationSelector":{"description":"AnnotationSelector are used to filter to the correct workload.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"labelSelector":{"description":"LabelSelector are used to filter to the correct workload.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"metricLabels":{"description":"MetricLabels are the labels to collect","items":{"description":"MeterLabelQuery helps define a meter label to build and search for","properties":{"aggregation":{"description":"Aggregation to use with the query","enum":["sum","min","max","avg"],"type":"string"},"label":{"description":"Label is the name of the meter","type":"string"},"query":{"description":"Query to use for the label","type":"string"}},"required":["label"],"type":"object"},"minItems":1,"type":"array"},"name":{"description":"Name of the workload, must be unique in a meter definition.","type":"string"},"ownerCRD":{"description":"OwnerCRD is the name of the GVK to look for as the owner of all the meterable assets. If omitted, the labels and annotations are used instead.","properties":{"apiVersion":{"description":"APIVersion of the CRD","type":"string"},"kind":{"description":"Kind of the CRD","type":"string"}},"required":["apiVersion","kind"],"type":"object"},"type":{"description":"WorkloadType identifies the type of workload to look for. This can be pod or service right now.","enum":["Pod","Service","PersistentVolumeClaim"],"type":"string"}},"required":["name","type"],"type":"object"},"minItems":1,"type":"array"}},"required":["meterGroup","meterKind"],"type":"object"},"status":{"description":"MeterDefinitionStatus defines the observed state of MeterDefinition","properties":{"conditions":{"description":"Conditions represent the latest available observations of an object's state","items":{"description":"Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.","properties":{"lastTransitionTime":{"format":"date-time","type":"string"},"message":{"type":"string"},"reason":{"description":"ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.","type":"string"},"status":{"type":"string"},"type":{"description":"ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\".","type":"string"}},"required":["status","type"],"type":"object"},"type":"array"},"workloadResource":{"description":"WorkloadResources is the list of resoruces discovered by this meter definition","items":{"description":"WorkloadResource represents the resources associated to a workload","properties":{"groupVersionKind":{"description":"GroupVersionKind of the resource","properties":{"apiVersion":{"description":"APIVersion of the CRD","type":"string"},"kind":{"description":"Kind of the CRD","type":"string"}},"required":["apiVersion","kind"],"type":"object"},"name":{"description":"Name of the resource Required","type":"string"},"namespace":{"description":"Namespace of the resource Required","type":"string"},"referencedWorkloadName":{"description":"ReferencedWorkloadName is the name of the workload","type":"string"},"uid":{"description":"Namespace of the resource","type":"string"}},"required":["name","namespace"],"type":"object"},"type":"array"}},"type":"object"}},"type":"object"}},"served":true,"storage":false},{"name":"v1beta1","schema":{"openAPIV3Schema":{"description":"MeterDefinition defines the meter workloads used to enable pay for use billing.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"MeterDefinitionSpec defines the desired metering spec","properties":{"group":{"description":"Group defines the operator group of the meter","type":"string"},"installedBy":{"description":"InstalledBy is a reference to the CSV that install the meter definition. This is used to determine an operator group.","properties":{"groupVersionKind":{"description":"GroupVersionKind of the resource","properties":{"apiVersion":{"description":"APIVersion of the CRD","type":"string"},"kind":{"description":"Kind of the CRD","type":"string"}},"required":["apiVersion","kind"],"type":"object"},"name":{"description":"Name of the resource Required","type":"string"},"namespace":{"description":"Namespace of the resource Required","type":"string"},"uid":{"description":"Namespace of the resource","type":"string"}},"required":["name","namespace"],"type":"object"},"kind":{"description":"Kind defines the primary CRD kind of the meter","type":"string"},"meters":{"description":"Meters are the definitions related to the metrics that you would like to monitor.","items":{"properties":{"aggregation":{"description":"Aggregation to use with the query","enum":["sum","min","max","avg"],"type":"string"},"dateLabelOverride":{"description":"DateLabelOverride provides a means of overriding the date returned for the metric using a label. This is to handle cases where the metric is a constant that is calculated.","type":"string"},"description":{"description":"Description is the overview of what the metric is providing for humans to read.","type":"string"},"groupBy":{"description":"Group is the set of label fields returned by query to aggregate on.","items":{"type":"string"},"type":"array"},"metric":{"description":"Metric is the name of the meter","type":"string"},"name":{"description":"Name of the metric for humans to read.","type":"string"},"period":{"description":"Period is the amount of time to segment the data into. Default is 1h.","type":"string"},"query":{"description":"Query to use for prometheus to find the metrics","type":"string"},"valueLabelOverride":{"description":"ValueLabelOverride provides a means of overriding the value returned for the metric using a label. This is to handle cases where the metric is a constant that is calculated.","type":"string"},"without":{"description":"Labels to filter out automatically.","items":{"type":"string"},"type":"array"},"workloadType":{"description":"WorkloadType identifies the type of workload to look for. This can be pod or service right now.","type":"string"}},"required":["aggregation","metric","query","workloadType"],"type":"object"},"type":"array"},"resourceFilters":{"description":"ResourceFilters provide filters that will be used to find the workload objects. This is to find the exact resources the query is interested in. At least one must be provided.","items":{"properties":{"annotation":{"description":"Annotation uses the resource annotations to find resources to monitor.","properties":{"annotationSelector":{"description":"AnnotationSelector are used to filter to the correct workload.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"}},"type":"object"},"label":{"description":"Label uses the resource annotations to find resources to monitor.","properties":{"labelSelector":{"description":"LabelSelector are used to filter to the correct workload.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"}},"type":"object"},"namespace":{"description":"Namespace is the filter to control which namespaces to look for your resources. Default is always Operator Group (supported by OLM)","properties":{"labelSelector":{"description":"LabelSelector are used to filter to the correct workload.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"useOperatorGroup":{"description":"UseOperatorGroup use your operator group for namespace filtering","type":"boolean"}},"required":["useOperatorGroup"],"type":"object"},"ownerCRD":{"description":"OwnerCRD uses the owning CRD to filter resources.","properties":{"apiVersion":{"description":"APIVersion of the CRD","type":"string"},"kind":{"description":"Kind of the CRD","type":"string"}},"required":["apiVersion","kind"],"type":"object"},"workloadType":{"description":"WorkloadType identifies the type of workload to look for. This can be pod or service right now.","type":"string"}},"required":["workloadType"],"type":"object"},"minItems":1,"type":"array"}},"required":["group","kind","meters","resourceFilters"],"type":"object"},"status":{"description":"MeterDefinitionStatus defines the observed state of MeterDefinition","properties":{"conditions":{"description":"Conditions represent the latest available observations of an object's state","items":{"description":"Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.","properties":{"lastTransitionTime":{"format":"date-time","type":"string"},"message":{"type":"string"},"reason":{"description":"ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.","type":"string"},"status":{"type":"string"},"type":{"description":"ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\".","type":"string"}},"required":["status","type"],"type":"object"},"type":"array"},"workloadResource":{"description":"WorkloadResources is the list of resources discovered by this meter definition","items":{"description":"WorkloadResource represents the resources associated to a workload","properties":{"groupVersionKind":{"description":"GroupVersionKind of the resource","properties":{"apiVersion":{"description":"APIVersion of the CRD","type":"string"},"kind":{"description":"Kind of the CRD","type":"string"}},"required":["apiVersion","kind"],"type":"object"},"name":{"description":"Name of the resource Required","type":"string"},"namespace":{"description":"Namespace of the resource Required","type":"string"},"referencedWorkloadName":{"description":"ReferencedWorkloadName is the name of the workload","type":"string"},"uid":{"description":"Namespace of the resource","type":"string"}},"required":["name","namespace"],"type":"object"},"type":"array"}},"type":"object"}},"type":"object"}},"served":true,"storage":true}]},"status":{"acceptedNames":{"kind":"","plural":""},"conditions":[],"storedVersions":[]}}
      meta.helm.sh/release-name: rhm-operator
      meta.helm.sh/release-namespace: openshift-redhat-marketplace
      service.beta.openshift.io/inject-cabundle: "true"
    creationTimestamp: "2021-01-12T17:45:18Z"
    generation: 4
    labels:
      app.kubernetes.io/managed-by: Helm
      redhat.marketplace.com/name: redhat-marketplace-operator
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:listKind: {}
            f:singular: {}
      manager: kube-apiserver
      operation: Update
      time: "2021-01-12T17:45:19Z"
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:controller-gen.kubebuilder.io/version: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
            f:service.beta.openshift.io/inject-cabundle: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
            f:redhat.marketplace.com/name: {}
        f:spec:
          f:conversion:
            .: {}
            f:conversionReviewVersions: {}
            f:strategy: {}
            f:webhookClientConfig:
              .: {}
              f:service:
                .: {}
                f:name: {}
                f:namespace: {}
                f:path: {}
                f:port: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
          f:storedVersions: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2021-01-12T17:47:25Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:conversion:
            f:webhook:
              f:clientConfig:
                f:caBundle: {}
      manager: service-ca-operator
      operation: Update
      time: "2021-01-12T17:47:25Z"
    name: meterdefinitions.marketplace.redhat.com
    resourceVersion: "36610215"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/meterdefinitions.marketplace.redhat.com
    uid: 06cd3395-f36e-4e99-bfce-67950c9540e8
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVVENDQWptZ0F3SUJBZ0lJT1RxRGlRSTFzaHN3RFFZSktvWklodmNOQVFFTEJRQXdOakUwTURJR0ExVUUKQXd3cmIzQmxibk5vYVdaMExYTmxjblpwWTJVdGMyVnlkbWx1WnkxemFXZHVaWEpBTVRZd05UY3dORGMyTlRBZQpGdzB5TURFeE1UZ3hNekEyTURSYUZ3MHlNekF4TVRjeE16QTJNRFZhTURZeE5EQXlCZ05WQkFNTUsyOXdaVzV6CmFHbG1kQzF6WlhKMmFXTmxMWE5sY25acGJtY3RjMmxuYm1WeVFERTJNRFUzTURRM05qVXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ25NK3hPcHU5clhtZ1hsZ3VHOXlrTVhCd1pNWjJVSG5CMQpWdDROU3BkK29SbTlXR3dHM0xYcVAwblhXMVNPd1VwcVhBeER2eHdmTGljN2FDSXpLd05NdG15VTY4clUzWkwyCnlIdDduRUl4NHpydFhzNFlZT1V2Y2pOT01lQmphMmJiWGttbDR1ME9lRjNZdGQ1Rk10WG1LbitmZUdWYUZrVnkKTVN2MGpGL1lNREpoT3RVdGxqUUpZa1dwQUhyV3VmdWxpK0ZIUW15THcvZElsVTZzNFZqVFBVMVBqeTA3enIwOQpxcHhwZThkNDJkbXRlN3p4YjhTOFdwMEtKcTk2L3FBL2JyUGZVUE9qT2h3bk41M2g0di9DRUhJWDUwVzUyUHZHClkyL1NYTW4xTEhsdmV3bmZUMSs3ejBUSWE2Rlg4WHA4aW9WWTZad2Z1SFVnQkdtUENhUjdBZ01CQUFHall6QmgKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlFPaGdteQo0dnRHdmxWRlgwa1dNdHk5WGNiOWZEQWZCZ05WSFNNRUdEQVdnQlFPaGdteTR2dEd2bFZGWDBrV010eTlYY2I5CmZEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFJL1A3QytaQ3R2UmlRYW9lWG5ia1VxRlpzY3E2Ky9BS1hzcFMKQksyV3kxT01Jd3pyeDJWMDdHUlF1MUtjTUJVRVFNVGFPT3VnMkFNT3ppY0hsbFpUTU5qTlMzUlBzVVU2bkdkUgpuYkxDWWNHWVhrWjJ4YSsxeUd0RG1yQ2wwL0FqOERxQW5IZlZmZTNiK2l5RlBMNko2a3lDWmVkdE85MHgzSVIrClZVY1pGQ0VQdURxQzYwdDE2bXNRcmxvQlNNWlJqdUcrbEFZeUJOam9kOERyc0xwU1BqbFgxb1RuajlMN3psS1IKaE5kSmIxRVNTQkNyWmMvUk5IMHB5VWtGT1dWZHlobTNvS3QyL3UwNzVRZFNoTkdPUnlXRDhyUG00aTZYekhQNworMit3Y01ndmxJZjIySXZ6V2hucmVGeDdYTVkrWFNKZVFGVFV5d1hCc3dlWE5wd01TQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          service:
            name: redhat-marketplace-webhook-service
            namespace: openshift-redhat-marketplace
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1beta1
    group: marketplace.redhat.com
    names:
      kind: MeterDefinition
      listKind: MeterDefinitionList
      plural: meterdefinitions
      singular: meterdefinition
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: MeterDefinition defines the meter workloads used to enable
            pay for use billing.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MeterDefinitionSpec defines the desired metering spec
              properties:
                installedBy:
                  description: InstalledBy is a reference to the CSV that install
                    the meter definition. This is used to determine an operator group.
                  properties:
                    groupVersionKind:
                      description: GroupVersionKind of the resource
                      properties:
                        apiVersion:
                          description: APIVersion of the CRD
                          type: string
                        kind:
                          description: Kind of the CRD
                          type: string
                      required:
                      - apiVersion
                      - kind
                      type: object
                    name:
                      description: Name of the resource Required
                      type: string
                    namespace:
                      description: Namespace of the resource Required
                      type: string
                    uid:
                      description: Namespace of the resource
                      type: string
                  required:
                  - name
                  - namespace
                  type: object
                meterGroup:
                  description: Group defines the operator group of the meter
                  type: string
                meterKind:
                  description: Kind defines the primary CRD kind of the meter
                  type: string
                meterVersion:
                  description: Version defines the primary CRD version of the meter.
                    This field is no longer used.
                  type: string
                podMeterLabels:
                  description: PodMeterLabels name of the prometheus metrics you want
                    to track. User workloads instead.
                  items:
                    type: string
                  type: array
                serviceMeterLabels:
                  description: ServiceMeterLabels name of the meterics you want to
                    track. Use workloads instead.
                  items:
                    type: string
                  type: array
                workloadVertexLabelSelectors:
                  description: VertexFilters are used when Namespace is selected.
                    Can be omitted if you select OperatorGroup
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                workloadVertexType:
                  description: WorkloadVertexType is the top most object of a workload.
                    It allows you to identify the upper bounds of your workloads.
                  enum:
                  - Namespace
                  - OperatorGroup
                  type: string
                workloads:
                  description: Workloads identify the workloads to meter.
                  items:
                    description: Workload helps identify what to target for metering.
                    properties:
                      annotationSelector:
                        description: AnnotationSelector are used to filter to the
                          correct workload.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      labelSelector:
                        description: LabelSelector are used to filter to the correct
                          workload.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      metricLabels:
                        description: MetricLabels are the labels to collect
                        items:
                          description: MeterLabelQuery helps define a meter label
                            to build and search for
                          properties:
                            aggregation:
                              description: Aggregation to use with the query
                              enum:
                              - sum
                              - min
                              - max
                              - avg
                              type: string
                            label:
                              description: Label is the name of the meter
                              type: string
                            query:
                              description: Query to use for the label
                              type: string
                          required:
                          - label
                          type: object
                        minItems: 1
                        type: array
                      name:
                        description: Name of the workload, must be unique in a meter
                          definition.
                        type: string
                      ownerCRD:
                        description: OwnerCRD is the name of the GVK to look for as
                          the owner of all the meterable assets. If omitted, the labels
                          and annotations are used instead.
                        properties:
                          apiVersion:
                            description: APIVersion of the CRD
                            type: string
                          kind:
                            description: Kind of the CRD
                            type: string
                        required:
                        - apiVersion
                        - kind
                        type: object
                      type:
                        description: WorkloadType identifies the type of workload
                          to look for. This can be pod or service right now.
                        enum:
                        - Pod
                        - Service
                        - PersistentVolumeClaim
                        type: string
                    required:
                    - name
                    - type
                    type: object
                  minItems: 1
                  type: array
              required:
              - meterGroup
              - meterKind
              type: object
            status:
              description: MeterDefinitionStatus defines the observed state of MeterDefinition
              properties:
                conditions:
                  description: Conditions represent the latest available observations
                    of an object's state
                  items:
                    description: "Condition represents an observation of an object's
                      state. Conditions are an extension mechanism intended to be
                      used when the details of an observation are not a priori known
                      or would not apply to all instances of a given Kind. \n Conditions
                      should be added to explicitly convey properties that users and
                      components care about rather than requiring those properties
                      to be inferred from other observations. Once defined, the meaning
                      of a Condition can not be changed arbitrarily - it becomes part
                      of the API, and has the same backwards- and forwards-compatibility
                      concerns of any other part of the API."
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        description: ConditionReason is intended to be a one-word,
                          CamelCase representation of the category of cause of the
                          current status. It is intended to be used in concise output,
                          such as one-line kubectl get output, and in summarizing
                          occurrences of causes.
                        type: string
                      status:
                        type: string
                      type:
                        description: "ConditionType is the type of the condition and
                          is typically a CamelCased word or short phrase. \n Condition
                          types should indicate state in the \"abnormal-true\" polarity.
                          For example, if the condition indicates when a policy is
                          invalid, the \"is valid\" case is probably the norm, so
                          the condition should be called \"Invalid\"."
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                workloadResource:
                  description: WorkloadResources is the list of resoruces discovered
                    by this meter definition
                  items:
                    description: WorkloadResource represents the resources associated
                      to a workload
                    properties:
                      groupVersionKind:
                        description: GroupVersionKind of the resource
                        properties:
                          apiVersion:
                            description: APIVersion of the CRD
                            type: string
                          kind:
                            description: Kind of the CRD
                            type: string
                        required:
                        - apiVersion
                        - kind
                        type: object
                      name:
                        description: Name of the resource Required
                        type: string
                      namespace:
                        description: Namespace of the resource Required
                        type: string
                      referencedWorkloadName:
                        description: ReferencedWorkloadName is the name of the workload
                        type: string
                      uid:
                        description: Namespace of the resource
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: MeterDefinition defines the meter workloads used to enable
            pay for use billing.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MeterDefinitionSpec defines the desired metering spec
              properties:
                group:
                  description: Group defines the operator group of the meter
                  type: string
                installedBy:
                  description: InstalledBy is a reference to the CSV that install
                    the meter definition. This is used to determine an operator group.
                  properties:
                    groupVersionKind:
                      description: GroupVersionKind of the resource
                      properties:
                        apiVersion:
                          description: APIVersion of the CRD
                          type: string
                        kind:
                          description: Kind of the CRD
                          type: string
                      required:
                      - apiVersion
                      - kind
                      type: object
                    name:
                      description: Name of the resource Required
                      type: string
                    namespace:
                      description: Namespace of the resource Required
                      type: string
                    uid:
                      description: Namespace of the resource
                      type: string
                  required:
                  - name
                  - namespace
                  type: object
                kind:
                  description: Kind defines the primary CRD kind of the meter
                  type: string
                meters:
                  description: Meters are the definitions related to the metrics that
                    you would like to monitor.
                  items:
                    properties:
                      aggregation:
                        description: Aggregation to use with the query
                        enum:
                        - sum
                        - min
                        - max
                        - avg
                        type: string
                      dateLabelOverride:
                        description: DateLabelOverride provides a means of overriding
                          the date returned for the metric using a label. This is
                          to handle cases where the metric is a constant that is calculated.
                        type: string
                      description:
                        description: Description is the overview of what the metric
                          is providing for humans to read.
                        type: string
                      groupBy:
                        description: Group is the set of label fields returned by
                          query to aggregate on.
                        items:
                          type: string
                        type: array
                      metric:
                        description: Metric is the name of the meter
                        type: string
                      name:
                        description: Name of the metric for humans to read.
                        type: string
                      period:
                        description: Period is the amount of time to segment the data
                          into. Default is 1h.
                        type: string
                      query:
                        description: Query to use for prometheus to find the metrics
                        type: string
                      valueLabelOverride:
                        description: ValueLabelOverride provides a means of overriding
                          the value returned for the metric using a label. This is
                          to handle cases where the metric is a constant that is calculated.
                        type: string
                      without:
                        description: Labels to filter out automatically.
                        items:
                          type: string
                        type: array
                      workloadType:
                        description: WorkloadType identifies the type of workload
                          to look for. This can be pod or service right now.
                        type: string
                    required:
                    - aggregation
                    - metric
                    - query
                    - workloadType
                    type: object
                  type: array
                resourceFilters:
                  description: ResourceFilters provide filters that will be used to
                    find the workload objects. This is to find the exact resources
                    the query is interested in. At least one must be provided.
                  items:
                    properties:
                      annotation:
                        description: Annotation uses the resource annotations to find
                          resources to monitor.
                        properties:
                          annotationSelector:
                            description: AnnotationSelector are used to filter to
                              the correct workload.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                        type: object
                      label:
                        description: Label uses the resource annotations to find resources
                          to monitor.
                        properties:
                          labelSelector:
                            description: LabelSelector are used to filter to the correct
                              workload.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                        type: object
                      namespace:
                        description: Namespace is the filter to control which namespaces
                          to look for your resources. Default is always Operator Group
                          (supported by OLM)
                        properties:
                          labelSelector:
                            description: LabelSelector are used to filter to the correct
                              workload.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          useOperatorGroup:
                            description: UseOperatorGroup use your operator group
                              for namespace filtering
                            type: boolean
                        required:
                        - useOperatorGroup
                        type: object
                      ownerCRD:
                        description: OwnerCRD uses the owning CRD to filter resources.
                        properties:
                          apiVersion:
                            description: APIVersion of the CRD
                            type: string
                          kind:
                            description: Kind of the CRD
                            type: string
                        required:
                        - apiVersion
                        - kind
                        type: object
                      workloadType:
                        description: WorkloadType identifies the type of workload
                          to look for. This can be pod or service right now.
                        type: string
                    required:
                    - workloadType
                    type: object
                  minItems: 1
                  type: array
              required:
              - group
              - kind
              - meters
              - resourceFilters
              type: object
            status:
              description: MeterDefinitionStatus defines the observed state of MeterDefinition
              properties:
                conditions:
                  description: Conditions represent the latest available observations
                    of an object's state
                  items:
                    description: "Condition represents an observation of an object's
                      state. Conditions are an extension mechanism intended to be
                      used when the details of an observation are not a priori known
                      or would not apply to all instances of a given Kind. \n Conditions
                      should be added to explicitly convey properties that users and
                      components care about rather than requiring those properties
                      to be inferred from other observations. Once defined, the meaning
                      of a Condition can not be changed arbitrarily - it becomes part
                      of the API, and has the same backwards- and forwards-compatibility
                      concerns of any other part of the API."
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        description: ConditionReason is intended to be a one-word,
                          CamelCase representation of the category of cause of the
                          current status. It is intended to be used in concise output,
                          such as one-line kubectl get output, and in summarizing
                          occurrences of causes.
                        type: string
                      status:
                        type: string
                      type:
                        description: "ConditionType is the type of the condition and
                          is typically a CamelCased word or short phrase. \n Condition
                          types should indicate state in the \"abnormal-true\" polarity.
                          For example, if the condition indicates when a policy is
                          invalid, the \"is valid\" case is probably the norm, so
                          the condition should be called \"Invalid\"."
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                workloadResource:
                  description: WorkloadResources is the list of resources discovered
                    by this meter definition
                  items:
                    description: WorkloadResource represents the resources associated
                      to a workload
                    properties:
                      groupVersionKind:
                        description: GroupVersionKind of the resource
                        properties:
                          apiVersion:
                            description: APIVersion of the CRD
                            type: string
                          kind:
                            description: Kind of the CRD
                            type: string
                        required:
                        - apiVersion
                        - kind
                        type: object
                      name:
                        description: Name of the resource Required
                        type: string
                      namespace:
                        description: Namespace of the resource Required
                        type: string
                      referencedWorkloadName:
                        description: ReferencedWorkloadName is the name of the workload
                        type: string
                      uid:
                        description: Namespace of the resource
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: MeterDefinition
      listKind: MeterDefinitionList
      plural: meterdefinitions
      singular: meterdefinition
    conditions:
    - lastTransitionTime: "2021-01-12T17:45:19Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-01-12T17:45:19Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.3.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.3.0","meta.helm.sh/release-name":"rhm-operator","meta.helm.sh/release-namespace":"openshift-redhat-marketplace"},"creationTimestamp":null,"labels":{"app.kubernetes.io/managed-by":"Helm","redhat.marketplace.com/name":"redhat-marketplace-operator"},"name":"meterreports.marketplace.redhat.com"},"spec":{"group":"marketplace.redhat.com","names":{"kind":"MeterReport","listKind":"MeterReportList","plural":"meterreports","singular":"meterreport"},"preserveUnknownFields":false,"scope":"Namespaced","subresources":{"status":{}},"validation":{"openAPIV3Schema":{"description":"MeterReport is the Schema for the meterreports API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"MeterReportSpec defines the desired state of MeterReport","properties":{"endTime":{"description":"EndTime of the job","format":"date-time","type":"string"},"extraJobArgs":{"description":"ExtraArgs is a set of arguments to pass to the job","items":{"type":"string"},"type":"array"},"meterDefinitions":{"description":"MeterDefinitions is the list of meterDefinitions included in the report","items":{"description":"MeterDefinition defines the meter workloads used to enable pay for use billing.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"MeterDefinitionSpec defines the desired metering spec","properties":{"installedBy":{"description":"InstalledBy is a reference to the CSV that install the meter definition. This is used to determine an operator group.","properties":{"groupVersionKind":{"description":"GroupVersionKind of the resource","properties":{"apiVersion":{"description":"APIVersion of the CRD","type":"string"},"kind":{"description":"Kind of the CRD","type":"string"}},"required":["apiVersion","kind"],"type":"object"},"name":{"description":"Name of the resource Required","type":"string"},"namespace":{"description":"Namespace of the resource Required","type":"string"},"uid":{"description":"Namespace of the resource","type":"string"}},"required":["name","namespace"],"type":"object"},"meterGroup":{"description":"Group defines the operator group of the meter","type":"string"},"meterKind":{"description":"Kind defines the primary CRD kind of the meter","type":"string"},"meterVersion":{"description":"Version defines the primary CRD version of the meter. This field is no longer used.","type":"string"},"podMeterLabels":{"description":"PodMeterLabels name of the prometheus metrics you want to track. User workloads instead.","items":{"type":"string"},"type":"array"},"serviceMeterLabels":{"description":"ServiceMeterLabels name of the meterics you want to track. Use workloads instead.","items":{"type":"string"},"type":"array"},"workloadVertexLabelSelectors":{"description":"VertexFilters are used when Namespace is selected. Can be omitted if you select OperatorGroup","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"workloadVertexType":{"description":"WorkloadVertexType is the top most object of a workload. It allows you to identify the upper bounds of your workloads.","enum":["Namespace","OperatorGroup"],"type":"string"},"workloads":{"description":"Workloads identify the workloads to meter.","items":{"description":"Workload helps identify what to target for metering.","properties":{"annotationSelector":{"description":"AnnotationSelector are used to filter to the correct workload.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"labelSelector":{"description":"LabelSelector are used to filter to the correct workload.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"metricLabels":{"description":"MetricLabels are the labels to collect","items":{"description":"MeterLabelQuery helps define a meter label to build and search for","properties":{"aggregation":{"description":"Aggregation to use with the query","enum":["sum","min","max","avg"],"type":"string"},"label":{"description":"Label is the name of the meter","type":"string"},"query":{"description":"Query to use for the label","type":"string"}},"required":["label"],"type":"object"},"minItems":1,"type":"array"},"name":{"description":"Name of the workload, must be unique in a meter definition.","type":"string"},"ownerCRD":{"description":"OwnerCRD is the name of the GVK to look for as the owner of all the meterable assets. If omitted, the labels and annotations are used instead.","properties":{"apiVersion":{"description":"APIVersion of the CRD","type":"string"},"kind":{"description":"Kind of the CRD","type":"string"}},"required":["apiVersion","kind"],"type":"object"},"type":{"description":"WorkloadType identifies the type of workload to look for. This can be pod or service right now.","enum":["Pod","Service","PersistentVolumeClaim"],"type":"string"}},"required":["name","type"],"type":"object"},"minItems":1,"type":"array"}},"required":["meterGroup","meterKind"],"type":"object"},"status":{"description":"MeterDefinitionStatus defines the observed state of MeterDefinition","properties":{"conditions":{"description":"Conditions represent the latest available observations of an object's state","items":{"description":"Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.","properties":{"lastTransitionTime":{"format":"date-time","type":"string"},"message":{"type":"string"},"reason":{"description":"ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.","type":"string"},"status":{"type":"string"},"type":{"description":"ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\".","type":"string"}},"required":["status","type"],"type":"object"},"type":"array"},"workloadResource":{"description":"WorkloadResources is the list of resoruces discovered by this meter definition","items":{"description":"WorkloadResource represents the resources associated to a workload","properties":{"groupVersionKind":{"description":"GroupVersionKind of the resource","properties":{"apiVersion":{"description":"APIVersion of the CRD","type":"string"},"kind":{"description":"Kind of the CRD","type":"string"}},"required":["apiVersion","kind"],"type":"object"},"name":{"description":"Name of the resource Required","type":"string"},"namespace":{"description":"Namespace of the resource Required","type":"string"},"referencedWorkloadName":{"description":"ReferencedWorkloadName is the name of the workload","type":"string"},"uid":{"description":"Namespace of the resource","type":"string"}},"required":["name","namespace"],"type":"object"},"type":"array"}},"type":"object"}},"type":"object"},"type":"array"},"prometheusService":{"description":"PrometheusService is the definition for the service labels.","properties":{"basicAuth":{"description":"BasicAuth allow an endpoint to authenticate over basic authentication Optional","properties":{"ca":{"description":"Struct containing the CA cert to use for the targets.","properties":{"configMap":{"description":"ConfigMap containing data to use for the targets.","properties":{"key":{"description":"The key to select.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the ConfigMap or its key must be defined","type":"boolean"}},"required":["key"],"type":"object"},"secret":{"description":"Secret containing data to use for the targets.","properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"required":["key"],"type":"object"}},"type":"object"},"caFile":{"description":"Path to the CA cert in the Prometheus container to use for the targets.","type":"string"},"cert":{"description":"Struct containing the client cert file for the targets.","properties":{"configMap":{"description":"ConfigMap containing data to use for the targets.","properties":{"key":{"description":"The key to select.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the ConfigMap or its key must be defined","type":"boolean"}},"required":["key"],"type":"object"},"secret":{"description":"Secret containing data to use for the targets.","properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"required":["key"],"type":"object"}},"type":"object"},"certFile":{"description":"Path to the client cert file in the Prometheus container for the targets.","type":"string"},"insecureSkipVerify":{"description":"Disable target certificate validation.","type":"boolean"},"keyFile":{"description":"Path to the client key file in the Prometheus container for the targets.","type":"string"},"keySecret":{"description":"Secret containing the client key file for the targets.","properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"required":["key"],"type":"object"},"serverName":{"description":"Used to verify the hostname for the targets.","type":"string"}},"type":"object"},"bearerTokenFile":{"description":"File to read bearer token for scraping targets.","type":"string"},"bearerTokenSecret":{"description":"Secret to mount to read bearer token for scraping targets. The secret needs to be in the same namespace as the service monitor and accessible by the Prometheus Operator.","properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"required":["key"],"type":"object"},"name":{"description":"Name of the job Required","type":"string"},"namespace":{"description":"Namespace of the job Required","type":"string"},"targetPort":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"Port name is the name of the part to select Required","x-kubernetes-int-or-string":true},"tlsConfig":{"description":"TLS configuration to use when scraping the endpoint Optional","properties":{"ca":{"description":"Struct containing the CA cert to use for the targets.","properties":{"configMap":{"description":"ConfigMap containing data to use for the targets.","properties":{"key":{"description":"The key to select.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the ConfigMap or its key must be defined","type":"boolean"}},"required":["key"],"type":"object"},"secret":{"description":"Secret containing data to use for the targets.","properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"required":["key"],"type":"object"}},"type":"object"},"caFile":{"description":"Path to the CA cert in the Prometheus container to use for the targets.","type":"string"},"cert":{"description":"Struct containing the client cert file for the targets.","properties":{"configMap":{"description":"ConfigMap containing data to use for the targets.","properties":{"key":{"description":"The key to select.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the ConfigMap or its key must be defined","type":"boolean"}},"required":["key"],"type":"object"},"secret":{"description":"Secret containing data to use for the targets.","properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"required":["key"],"type":"object"}},"type":"object"},"certFile":{"description":"Path to the client cert file in the Prometheus container for the targets.","type":"string"},"insecureSkipVerify":{"description":"Disable target certificate validation.","type":"boolean"},"keyFile":{"description":"Path to the client key file in the Prometheus container for the targets.","type":"string"},"keySecret":{"description":"Secret containing the client key file for the targets.","properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"required":["key"],"type":"object"},"serverName":{"description":"Used to verify the hostname for the targets.","type":"string"}},"type":"object"}},"required":["name","namespace","targetPort"],"type":"object"},"startTime":{"description":"StartTime of the job","format":"date-time","type":"string"}},"required":["endTime","prometheusService","startTime"],"type":"object"},"status":{"description":"MeterReportStatus defines the observed state of MeterReport","properties":{"conditions":{"description":"Conditions represent the latest available observations of an object's stateonfig","items":{"description":"Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.","properties":{"lastTransitionTime":{"format":"date-time","type":"string"},"message":{"type":"string"},"reason":{"description":"ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.","type":"string"},"status":{"type":"string"},"type":{"description":"ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\".","type":"string"}},"required":["status","type"],"type":"object"},"type":"array"},"jobReference":{"description":"A list of pointers to currently running jobs.","properties":{"active":{"description":"The number of actively running pods.","format":"int32","type":"integer"},"backoffLimit":{"description":"Specifies the number of retries before marking this job failed. Defaults to 6","format":"int32","type":"integer"},"completionTime":{"description":"Represents time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.","format":"date-time","type":"string"},"failed":{"description":"The number of pods which reached phase Failed.","format":"int32","type":"integer"},"name":{"description":"Name of the job Required","type":"string"},"namespace":{"description":"Namespace of the job Required","type":"string"},"startTime":{"description":"Represents time when the job was acknowledged by the job controller. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.","format":"date-time","type":"string"},"succeeded":{"description":"The number of pods which reached phase Succeeded.","format":"int32","type":"integer"}},"required":["name","namespace"],"type":"object"},"metricUploadCount":{"description":"MetricUploadCount is the number of metrics in the report","type":"integer"},"queryErrorList":{"description":"QueryErrorList shows if there were any errors from queries for the report.","items":{"type":"string"},"type":"array"},"uploadUID":{"description":"UploadID is the ID associated with the upload","type":"string"}},"type":"object"}},"type":"object"}},"version":"v1alpha1","versions":[{"name":"v1alpha1","served":true,"storage":true}]},"status":{"acceptedNames":{"kind":"","plural":""},"conditions":[],"storedVersions":[]}}
      meta.helm.sh/release-name: rhm-operator
      meta.helm.sh/release-namespace: openshift-redhat-marketplace
    creationTimestamp: "2021-01-12T17:45:19Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      redhat.marketplace.com/name: redhat-marketplace-operator
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:listKind: {}
            f:singular: {}
      manager: kube-apiserver
      operation: Update
      time: "2021-01-12T17:45:19Z"
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:controller-gen.kubebuilder.io/version: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
            f:redhat.marketplace.com/name: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:endTime:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                    f:extraJobArgs:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:meterDefinitions:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:prometheusService:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:basicAuth:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:ca:
                              .: {}
                              f:description: {}
                              f:properties:
                                .: {}
                                f:configMap:
                                  .: {}
                                  f:description: {}
                                  f:properties:
                                    .: {}
                                    f:key:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:name:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:optional:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                  f:required: {}
                                  f:type: {}
                                f:secret:
                                  .: {}
                                  f:description: {}
                                  f:properties:
                                    .: {}
                                    f:key:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:name:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:optional:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                  f:required: {}
                                  f:type: {}
                              f:type: {}
                            f:caFile:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:cert:
                              .: {}
                              f:description: {}
                              f:properties:
                                .: {}
                                f:configMap:
                                  .: {}
                                  f:description: {}
                                  f:properties:
                                    .: {}
                                    f:key:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:name:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:optional:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                  f:required: {}
                                  f:type: {}
                                f:secret:
                                  .: {}
                                  f:description: {}
                                  f:properties:
                                    .: {}
                                    f:key:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:name:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:optional:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                  f:required: {}
                                  f:type: {}
                              f:type: {}
                            f:certFile:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:insecureSkipVerify:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:keyFile:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:keySecret:
                              .: {}
                              f:description: {}
                              f:properties:
                                .: {}
                                f:key:
                                  .: {}
                                  f:description: {}
                                  f:type: {}
                                f:name:
                                  .: {}
                                  f:description: {}
                                  f:type: {}
                                f:optional:
                                  .: {}
                                  f:description: {}
                                  f:type: {}
                              f:required: {}
                              f:type: {}
                            f:serverName:
                              .: {}
                              f:description: {}
                              f:type: {}
                          f:type: {}
                        f:bearerTokenFile:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:bearerTokenSecret:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:key:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:name:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:optional:
                              .: {}
                              f:description: {}
                              f:type: {}
                          f:required: {}
                          f:type: {}
                        f:name:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:namespace:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:targetPort:
                          .: {}
                          f:anyOf: {}
                          f:description: {}
                          f:x-kubernetes-int-or-string: {}
                        f:tlsConfig:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:ca:
                              .: {}
                              f:description: {}
                              f:properties:
                                .: {}
                                f:configMap:
                                  .: {}
                                  f:description: {}
                                  f:properties:
                                    .: {}
                                    f:key:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:name:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:optional:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                  f:required: {}
                                  f:type: {}
                                f:secret:
                                  .: {}
                                  f:description: {}
                                  f:properties:
                                    .: {}
                                    f:key:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:name:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:optional:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                  f:required: {}
                                  f:type: {}
                              f:type: {}
                            f:caFile:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:cert:
                              .: {}
                              f:description: {}
                              f:properties:
                                .: {}
                                f:configMap:
                                  .: {}
                                  f:description: {}
                                  f:properties:
                                    .: {}
                                    f:key:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:name:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:optional:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                  f:required: {}
                                  f:type: {}
                                f:secret:
                                  .: {}
                                  f:description: {}
                                  f:properties:
                                    .: {}
                                    f:key:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:name:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                    f:optional:
                                      .: {}
                                      f:description: {}
                                      f:type: {}
                                  f:required: {}
                                  f:type: {}
                              f:type: {}
                            f:certFile:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:insecureSkipVerify:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:keyFile:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:keySecret:
                              .: {}
                              f:description: {}
                              f:properties:
                                .: {}
                                f:key:
                                  .: {}
                                  f:description: {}
                                  f:type: {}
                                f:name:
                                  .: {}
                                  f:description: {}
                                  f:type: {}
                                f:optional:
                                  .: {}
                                  f:description: {}
                                  f:type: {}
                              f:required: {}
                              f:type: {}
                            f:serverName:
                              .: {}
                              f:description: {}
                              f:type: {}
                          f:type: {}
                      f:required: {}
                      f:type: {}
                    f:startTime:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:conditions:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:jobReference:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:active:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                        f:backoffLimit:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                        f:completionTime:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                        f:failed:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                        f:name:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:namespace:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:startTime:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                        f:succeeded:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                      f:required: {}
                      f:type: {}
                    f:metricUploadCount:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:queryErrorList:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:uploadUID:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:type: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
          f:storedVersions: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2021-01-12T17:47:25Z"
    name: meterreports.marketplace.redhat.com
    resourceVersion: "36610218"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/meterreports.marketplace.redhat.com
    uid: 766481f6-6ff1-4ca2-b18d-551be6602a0b
  spec:
    conversion:
      strategy: None
    group: marketplace.redhat.com
    names:
      kind: MeterReport
      listKind: MeterReportList
      plural: meterreports
      singular: meterreport
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: MeterReport is the Schema for the meterreports API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MeterReportSpec defines the desired state of MeterReport
              properties:
                endTime:
                  description: EndTime of the job
                  format: date-time
                  type: string
                extraJobArgs:
                  description: ExtraArgs is a set of arguments to pass to the job
                  items:
                    type: string
                  type: array
                meterDefinitions:
                  description: MeterDefinitions is the list of meterDefinitions included
                    in the report
                  items:
                    description: MeterDefinition defines the meter workloads used
                      to enable pay for use billing.
                    properties:
                      apiVersion:
                        description: 'APIVersion defines the versioned schema of this
                          representation of an object. Servers should convert recognized
                          schemas to the latest internal value, and may reject unrecognized
                          values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                        type: string
                      kind:
                        description: 'Kind is a string value representing the REST
                          resource this object represents. Servers may infer this
                          from the endpoint the client submits requests to. Cannot
                          be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      metadata:
                        type: object
                      spec:
                        description: MeterDefinitionSpec defines the desired metering
                          spec
                        properties:
                          installedBy:
                            description: InstalledBy is a reference to the CSV that
                              install the meter definition. This is used to determine
                              an operator group.
                            properties:
                              groupVersionKind:
                                description: GroupVersionKind of the resource
                                properties:
                                  apiVersion:
                                    description: APIVersion of the CRD
                                    type: string
                                  kind:
                                    description: Kind of the CRD
                                    type: string
                                required:
                                - apiVersion
                                - kind
                                type: object
                              name:
                                description: Name of the resource Required
                                type: string
                              namespace:
                                description: Namespace of the resource Required
                                type: string
                              uid:
                                description: Namespace of the resource
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                          meterGroup:
                            description: Group defines the operator group of the meter
                            type: string
                          meterKind:
                            description: Kind defines the primary CRD kind of the
                              meter
                            type: string
                          meterVersion:
                            description: Version defines the primary CRD version of
                              the meter. This field is no longer used.
                            type: string
                          podMeterLabels:
                            description: PodMeterLabels name of the prometheus metrics
                              you want to track. User workloads instead.
                            items:
                              type: string
                            type: array
                          serviceMeterLabels:
                            description: ServiceMeterLabels name of the meterics you
                              want to track. Use workloads instead.
                            items:
                              type: string
                            type: array
                          workloadVertexLabelSelectors:
                            description: VertexFilters are used when Namespace is
                              selected. Can be omitted if you select OperatorGroup
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          workloadVertexType:
                            description: WorkloadVertexType is the top most object
                              of a workload. It allows you to identify the upper bounds
                              of your workloads.
                            enum:
                            - Namespace
                            - OperatorGroup
                            type: string
                          workloads:
                            description: Workloads identify the workloads to meter.
                            items:
                              description: Workload helps identify what to target
                                for metering.
                              properties:
                                annotationSelector:
                                  description: AnnotationSelector are used to filter
                                    to the correct workload.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                labelSelector:
                                  description: LabelSelector are used to filter to
                                    the correct workload.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                metricLabels:
                                  description: MetricLabels are the labels to collect
                                  items:
                                    description: MeterLabelQuery helps define a meter
                                      label to build and search for
                                    properties:
                                      aggregation:
                                        description: Aggregation to use with the query
                                        enum:
                                        - sum
                                        - min
                                        - max
                                        - avg
                                        type: string
                                      label:
                                        description: Label is the name of the meter
                                        type: string
                                      query:
                                        description: Query to use for the label
                                        type: string
                                    required:
                                    - label
                                    type: object
                                  minItems: 1
                                  type: array
                                name:
                                  description: Name of the workload, must be unique
                                    in a meter definition.
                                  type: string
                                ownerCRD:
                                  description: OwnerCRD is the name of the GVK to
                                    look for as the owner of all the meterable assets.
                                    If omitted, the labels and annotations are used
                                    instead.
                                  properties:
                                    apiVersion:
                                      description: APIVersion of the CRD
                                      type: string
                                    kind:
                                      description: Kind of the CRD
                                      type: string
                                  required:
                                  - apiVersion
                                  - kind
                                  type: object
                                type:
                                  description: WorkloadType identifies the type of
                                    workload to look for. This can be pod or service
                                    right now.
                                  enum:
                                  - Pod
                                  - Service
                                  - PersistentVolumeClaim
                                  type: string
                              required:
                              - name
                              - type
                              type: object
                            minItems: 1
                            type: array
                        required:
                        - meterGroup
                        - meterKind
                        type: object
                      status:
                        description: MeterDefinitionStatus defines the observed state
                          of MeterDefinition
                        properties:
                          conditions:
                            description: Conditions represent the latest available
                              observations of an object's state
                            items:
                              description: "Condition represents an observation of
                                an object's state. Conditions are an extension mechanism
                                intended to be used when the details of an observation
                                are not a priori known or would not apply to all instances
                                of a given Kind. \n Conditions should be added to
                                explicitly convey properties that users and components
                                care about rather than requiring those properties
                                to be inferred from other observations. Once defined,
                                the meaning of a Condition can not be changed arbitrarily
                                - it becomes part of the API, and has the same backwards-
                                and forwards-compatibility concerns of any other part
                                of the API."
                              properties:
                                lastTransitionTime:
                                  format: date-time
                                  type: string
                                message:
                                  type: string
                                reason:
                                  description: ConditionReason is intended to be a
                                    one-word, CamelCase representation of the category
                                    of cause of the current status. It is intended
                                    to be used in concise output, such as one-line
                                    kubectl get output, and in summarizing occurrences
                                    of causes.
                                  type: string
                                status:
                                  type: string
                                type:
                                  description: "ConditionType is the type of the condition
                                    and is typically a CamelCased word or short phrase.
                                    \n Condition types should indicate state in the
                                    \"abnormal-true\" polarity. For example, if the
                                    condition indicates when a policy is invalid,
                                    the \"is valid\" case is probably the norm, so
                                    the condition should be called \"Invalid\"."
                                  type: string
                              required:
                              - status
                              - type
                              type: object
                            type: array
                          workloadResource:
                            description: WorkloadResources is the list of resoruces
                              discovered by this meter definition
                            items:
                              description: WorkloadResource represents the resources
                                associated to a workload
                              properties:
                                groupVersionKind:
                                  description: GroupVersionKind of the resource
                                  properties:
                                    apiVersion:
                                      description: APIVersion of the CRD
                                      type: string
                                    kind:
                                      description: Kind of the CRD
                                      type: string
                                  required:
                                  - apiVersion
                                  - kind
                                  type: object
                                name:
                                  description: Name of the resource Required
                                  type: string
                                namespace:
                                  description: Namespace of the resource Required
                                  type: string
                                referencedWorkloadName:
                                  description: ReferencedWorkloadName is the name
                                    of the workload
                                  type: string
                                uid:
                                  description: Namespace of the resource
                                  type: string
                              required:
                              - name
                              - namespace
                              type: object
                            type: array
                        type: object
                    type: object
                  type: array
                prometheusService:
                  description: PrometheusService is the definition for the service
                    labels.
                  properties:
                    basicAuth:
                      description: BasicAuth allow an endpoint to authenticate over
                        basic authentication Optional
                      properties:
                        ca:
                          description: Struct containing the CA cert to use for the
                            targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        caFile:
                          description: Path to the CA cert in the Prometheus container
                            to use for the targets.
                          type: string
                        cert:
                          description: Struct containing the client cert file for
                            the targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        certFile:
                          description: Path to the client cert file in the Prometheus
                            container for the targets.
                          type: string
                        insecureSkipVerify:
                          description: Disable target certificate validation.
                          type: boolean
                        keyFile:
                          description: Path to the client key file in the Prometheus
                            container for the targets.
                          type: string
                        keySecret:
                          description: Secret containing the client key file for the
                            targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        serverName:
                          description: Used to verify the hostname for the targets.
                          type: string
                      type: object
                    bearerTokenFile:
                      description: File to read bearer token for scraping targets.
                      type: string
                    bearerTokenSecret:
                      description: Secret to mount to read bearer token for scraping
                        targets. The secret needs to be in the same namespace as the
                        service monitor and accessible by the Prometheus Operator.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                    name:
                      description: Name of the job Required
                      type: string
                    namespace:
                      description: Namespace of the job Required
                      type: string
                    targetPort:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Port name is the name of the part to select Required
                      x-kubernetes-int-or-string: true
                    tlsConfig:
                      description: TLS configuration to use when scraping the endpoint
                        Optional
                      properties:
                        ca:
                          description: Struct containing the CA cert to use for the
                            targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        caFile:
                          description: Path to the CA cert in the Prometheus container
                            to use for the targets.
                          type: string
                        cert:
                          description: Struct containing the client cert file for
                            the targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        certFile:
                          description: Path to the client cert file in the Prometheus
                            container for the targets.
                          type: string
                        insecureSkipVerify:
                          description: Disable target certificate validation.
                          type: boolean
                        keyFile:
                          description: Path to the client key file in the Prometheus
                            container for the targets.
                          type: string
                        keySecret:
                          description: Secret containing the client key file for the
                            targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        serverName:
                          description: Used to verify the hostname for the targets.
                          type: string
                      type: object
                  required:
                  - name
                  - namespace
                  - targetPort
                  type: object
                startTime:
                  description: StartTime of the job
                  format: date-time
                  type: string
              required:
              - endTime
              - prometheusService
              - startTime
              type: object
            status:
              description: MeterReportStatus defines the observed state of MeterReport
              properties:
                conditions:
                  description: Conditions represent the latest available observations
                    of an object's stateonfig
                  items:
                    description: "Condition represents an observation of an object's
                      state. Conditions are an extension mechanism intended to be
                      used when the details of an observation are not a priori known
                      or would not apply to all instances of a given Kind. \n Conditions
                      should be added to explicitly convey properties that users and
                      components care about rather than requiring those properties
                      to be inferred from other observations. Once defined, the meaning
                      of a Condition can not be changed arbitrarily - it becomes part
                      of the API, and has the same backwards- and forwards-compatibility
                      concerns of any other part of the API."
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        description: ConditionReason is intended to be a one-word,
                          CamelCase representation of the category of cause of the
                          current status. It is intended to be used in concise output,
                          such as one-line kubectl get output, and in summarizing
                          occurrences of causes.
                        type: string
                      status:
                        type: string
                      type:
                        description: "ConditionType is the type of the condition and
                          is typically a CamelCased word or short phrase. \n Condition
                          types should indicate state in the \"abnormal-true\" polarity.
                          For example, if the condition indicates when a policy is
                          invalid, the \"is valid\" case is probably the norm, so
                          the condition should be called \"Invalid\"."
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                jobReference:
                  description: A list of pointers to currently running jobs.
                  properties:
                    active:
                      description: The number of actively running pods.
                      format: int32
                      type: integer
                    backoffLimit:
                      description: Specifies the number of retries before marking
                        this job failed. Defaults to 6
                      format: int32
                      type: integer
                    completionTime:
                      description: Represents time when the job was completed. It
                        is not guaranteed to be set in happens-before order across
                        separate operations. It is represented in RFC3339 form and
                        is in UTC.
                      format: date-time
                      type: string
                    failed:
                      description: The number of pods which reached phase Failed.
                      format: int32
                      type: integer
                    name:
                      description: Name of the job Required
                      type: string
                    namespace:
                      description: Namespace of the job Required
                      type: string
                    startTime:
                      description: Represents time when the job was acknowledged by
                        the job controller. It is not guaranteed to be set in happens-before
                        order across separate operations. It is represented in RFC3339
                        form and is in UTC.
                      format: date-time
                      type: string
                    succeeded:
                      description: The number of pods which reached phase Succeeded.
                      format: int32
                      type: integer
                  required:
                  - name
                  - namespace
                  type: object
                metricUploadCount:
                  description: MetricUploadCount is the number of metrics in the report
                  type: integer
                queryErrorList:
                  description: QueryErrorList shows if there were any errors from
                    queries for the report.
                  items:
                    type: string
                  type: array
                uploadUID:
                  description: UploadID is the ID associated with the upload
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: MeterReport
      listKind: MeterReportList
      plural: meterreports
      singular: meterreport
    conditions:
    - lastTransitionTime: "2021-01-12T17:45:19Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-01-12T17:45:19Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T13:05:11Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:ownerReferences:
            .: {}
            k:{"uid":"629378f9-4b6d-445e-8764-cbfb5eda542e"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:additionalPrinterColumns: {}
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:egressIPs:
                  .: {}
                  f:description: {}
                  f:items: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:netid:
                  .: {}
                  f:description: {}
                  f:format: {}
                  f:maximum: {}
                  f:minimum: {}
                  f:type: {}
                f:netname:
                  .: {}
                  f:description: {}
                  f:pattern: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
          f:storedVersions: {}
      manager: cluster-network-operator
      operation: Update
      time: "2021-01-13T04:16:18Z"
    name: netnamespaces.network.openshift.io
    ownerReferences:
    - apiVersion: operator.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Network
      name: cluster
      uid: 629378f9-4b6d-445e-8764-cbfb5eda542e
    resourceVersion: "36921689"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/netnamespaces.network.openshift.io
    uid: 29c50eba-0704-471b-abb4-3fbbf4c7d259
  spec:
    conversion:
      strategy: None
    group: network.openshift.io
    names:
      kind: NetNamespace
      listKind: NetNamespaceList
      plural: netnamespaces
      singular: netnamespace
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - description: The network identifier of the network namespace
        jsonPath: .netid
        name: NetID
        type: integer
      - description: The network egress IP addresses
        jsonPath: .egressIPs
        name: Egress IPs
        type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: NetNamespace describes a single isolated network. When using
            the redhat/openshift-ovs-multitenant plugin, every Namespace will have
            a corresponding NetNamespace object with the same name. (When using redhat/openshift-ovs-subnet,
            NetNamespaces are not used.)
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            egressIPs:
              description: EgressIPs is a list of reserved IPs that will be used as
                the source for external traffic coming from pods in this namespace.
                (If empty, external traffic will be masqueraded to Node IPs.)
              items:
                pattern: ^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
                type: string
              type: array
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            netid:
              description: NetID is the network identifier of the network namespace
                assigned to each overlay network packet. This can be manipulated with
                the "oc adm pod-network" commands.
              format: int32
              maximum: 16777215
              minimum: 0
              type: integer
            netname:
              description: NetName is the name of the network namespace. (This is
                the same as the object's name, but both fields must be set.)
              pattern: ^[a-z0-9.-]+$
              type: string
          required:
          - netid
          - netname
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: NetNamespace
      listKind: NetNamespaceList
      plural: netnamespaces
      singular: netnamespace
    conditions:
    - lastTransitionTime: "2020-11-18T13:05:11Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T13:05:11Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T13:05:10Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:ownerReferences:
            .: {}
            k:{"uid":"629378f9-4b6d-445e-8764-cbfb5eda542e"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:config:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:type: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
          f:storedVersions: {}
      manager: cluster-network-operator
      operation: Update
      time: "2021-01-13T04:16:17Z"
    name: network-attachment-definitions.k8s.cni.cncf.io
    ownerReferences:
    - apiVersion: operator.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Network
      name: cluster
      uid: 629378f9-4b6d-445e-8764-cbfb5eda542e
    resourceVersion: "36921676"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/network-attachment-definitions.k8s.cni.cncf.io
    uid: 04b2066b-2001-4a5c-b967-88501954c1b3
  spec:
    conversion:
      strategy: None
    group: k8s.cni.cncf.io
    names:
      kind: NetworkAttachmentDefinition
      listKind: NetworkAttachmentDefinitionList
      plural: network-attachment-definitions
      shortNames:
      - net-attach-def
      singular: network-attachment-definition
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: 'NetworkAttachmentDefinition is a CRD schema specified by the
            Network Plumbing Working Group to express the intent for attaching pods
            to one or more logical or physical networks. More information available
            at: https://github.com/k8snetworkplumbingwg/multi-net-spec'
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this represen
                tation of an object. Servers should convert recognized schemas to
                the latest internal value, and may reject unrecognized values. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: NetworkAttachmentDefinition spec defines the desired state
                of a network attachment
              properties:
                config:
                  description: NetworkAttachmentDefinition config is a JSON-formatted
                    CNI configuration
                  type: string
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: NetworkAttachmentDefinition
      listKind: NetworkAttachmentDefinitionList
      plural: network-attachment-definitions
      shortNames:
      - net-attach-def
      singular: network-attachment-definition
    conditions:
    - lastTransitionTime: "2020-11-18T13:05:10Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T13:05:10Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:33Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:clusterNetwork:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:externalIP:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:autoAssignCIDRs:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                        f:policy:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:allowedCIDRs:
                              .: {}
                              f:description: {}
                              f:items: {}
                              f:type: {}
                            f:rejectedCIDRs:
                              .: {}
                              f:description: {}
                              f:items: {}
                              f:type: {}
                          f:type: {}
                      f:type: {}
                    f:networkType:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:serviceNetwork:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:serviceNodePortRange:
                      .: {}
                      f:description: {}
                      f:pattern: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:clusterNetwork:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:clusterNetworkMTU:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:networkType:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:serviceNetwork:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:33Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:33Z"
    name: networks.config.openshift.io
    resourceVersion: "342"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/networks.config.openshift.io
    uid: 9752e920-4650-4c2a-b098-d91dbed27cc6
  spec:
    conversion:
      strategy: None
    group: config.openshift.io
    names:
      kind: Network
      listKind: NetworkList
      plural: networks
      singular: network
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: 'Network holds cluster-wide information about Network. The
            canonical name is `cluster`. It is used to configure the desired network
            configuration, such as: IP address pools for services/pod IPs, network
            plugin, etc. Please view network.spec for an explanation on what applies
            when configuring this resource.'
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec holds user settable values for configuration. As a
                general rule, this SHOULD NOT be read directly. Instead, you should
                consume the NetworkStatus, as it indicates the currently deployed
                configuration. Currently, most spec fields are immutable after installation.
                Please view the individual ones for further details on each.
              properties:
                clusterNetwork:
                  description: IP address pool to use for pod IPs. This field is immutable
                    after installation.
                  items:
                    description: ClusterNetworkEntry is a contiguous block of IP addresses
                      from which pod IPs are allocated.
                    properties:
                      cidr:
                        description: The complete block for pod IPs.
                        type: string
                      hostPrefix:
                        description: The size (prefix) of block to allocate to each
                          node. If this field is not used by the plugin, it can be
                          left unset.
                        format: int32
                        minimum: 0
                        type: integer
                    type: object
                  type: array
                externalIP:
                  description: externalIP defines configuration for controllers that
                    affect Service.ExternalIP. If nil, then ExternalIP is not allowed
                    to be set.
                  properties:
                    autoAssignCIDRs:
                      description: autoAssignCIDRs is a list of CIDRs from which to
                        automatically assign Service.ExternalIP. These are assigned
                        when the service is of type LoadBalancer. In general, this
                        is only useful for bare-metal clusters. In Openshift 3.x,
                        this was misleadingly called "IngressIPs". Automatically assigned
                        External IPs are not affected by any ExternalIPPolicy rules.
                        Currently, only one entry may be provided.
                      items:
                        type: string
                      type: array
                    policy:
                      description: policy is a set of restrictions applied to the
                        ExternalIP field. If nil or empty, then ExternalIP is not
                        allowed to be set.
                      properties:
                        allowedCIDRs:
                          description: allowedCIDRs is the list of allowed CIDRs.
                          items:
                            type: string
                          type: array
                        rejectedCIDRs:
                          description: rejectedCIDRs is the list of disallowed CIDRs.
                            These take precedence over allowedCIDRs.
                          items:
                            type: string
                          type: array
                      type: object
                  type: object
                networkType:
                  description: 'NetworkType is the plugin that is to be deployed (e.g.
                    OpenShiftSDN). This should match a value that the cluster-network-operator
                    understands, or else no networking will be installed. Currently
                    supported values are: - OpenShiftSDN This field is immutable after
                    installation.'
                  type: string
                serviceNetwork:
                  description: IP address pool for services. Currently, we only support
                    a single entry here. This field is immutable after installation.
                  items:
                    type: string
                  type: array
                serviceNodePortRange:
                  description: The port range allowed for Services of type NodePort.
                    If not specified, the default of 30000-32767 will be used. Such
                    Services without a NodePort specified will have one automatically
                    allocated from this range. This parameter can be updated after
                    the cluster is installed.
                  pattern: ^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])-([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$
                  type: string
              type: object
            status:
              description: status holds observed values from the cluster. They may
                not be overridden.
              properties:
                clusterNetwork:
                  description: IP address pool to use for pod IPs.
                  items:
                    description: ClusterNetworkEntry is a contiguous block of IP addresses
                      from which pod IPs are allocated.
                    properties:
                      cidr:
                        description: The complete block for pod IPs.
                        type: string
                      hostPrefix:
                        description: The size (prefix) of block to allocate to each
                          node. If this field is not used by the plugin, it can be
                          left unset.
                        format: int32
                        minimum: 0
                        type: integer
                    type: object
                  type: array
                clusterNetworkMTU:
                  description: ClusterNetworkMTU is the MTU for inter-pod networking.
                  type: integer
                networkType:
                  description: NetworkType is the plugin that is deployed (e.g. OpenShiftSDN).
                  type: string
                serviceNetwork:
                  description: IP address pool for services. Currently, we only support
                    a single entry here.
                  items:
                    type: string
                  type: array
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: Network
      listKind: NetworkList
      plural: networks
      singular: network
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:33Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:33Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T12:58:36Z"
    generation: 2
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:36Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:36Z"
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:preserveUnknownFields: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:additionalNetworks:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:clusterNetwork:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:defaultNetwork:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:kuryrConfig:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:controllerProbesPort:
                              .: {}
                              f:description: {}
                              f:format: {}
                              f:minimum: {}
                              f:type: {}
                            f:daemonProbesPort:
                              .: {}
                              f:description: {}
                              f:format: {}
                              f:minimum: {}
                              f:type: {}
                            f:enablePortPoolsPrepopulation:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:openStackServiceNetwork:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:poolBatchPorts:
                              .: {}
                              f:description: {}
                              f:minimum: {}
                              f:type: {}
                            f:poolMaxPorts:
                              .: {}
                              f:description: {}
                              f:minimum: {}
                              f:type: {}
                            f:poolMinPorts:
                              .: {}
                              f:description: {}
                              f:minimum: {}
                              f:type: {}
                          f:type: {}
                        f:openshiftSDNConfig:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:enableUnidling:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:mode:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:mtu:
                              .: {}
                              f:description: {}
                              f:format: {}
                              f:minimum: {}
                              f:type: {}
                            f:useExternalOpenvswitch:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:vxlanPort:
                              .: {}
                              f:description: {}
                              f:format: {}
                              f:minimum: {}
                              f:type: {}
                          f:type: {}
                        f:ovnKubernetesConfig:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:genevePort:
                              .: {}
                              f:description: {}
                              f:format: {}
                              f:minimum: {}
                              f:type: {}
                            f:hybridOverlayConfig:
                              .: {}
                              f:description: {}
                              f:properties:
                                .: {}
                                f:hybridClusterNetwork:
                                  .: {}
                                  f:description: {}
                                  f:items: {}
                                  f:type: {}
                                f:hybridOverlayVXLANPort:
                                  .: {}
                                  f:description: {}
                                  f:format: {}
                                  f:minimum: {}
                                  f:type: {}
                              f:type: {}
                            f:mtu:
                              .: {}
                              f:description: {}
                              f:format: {}
                              f:minimum: {}
                              f:type: {}
                          f:type: {}
                        f:type:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:required: {}
                      f:type: {}
                    f:deployKubeProxy:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:disableMultiNetwork:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:kubeProxyConfig:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:bindAddress:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:iptablesSyncPeriod:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:proxyArguments:
                          .: {}
                          f:additionalProperties: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                    f:logLevel:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:serviceNetwork:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:type: {}
              f:type: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:51Z"
    name: networks.operator.openshift.io
    resourceVersion: "848"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/networks.operator.openshift.io
    uid: 47935a29-175d-424d-a0e5-88bf7ee4664f
  spec:
    conversion:
      strategy: None
    group: operator.openshift.io
    names:
      kind: Network
      listKind: NetworkList
      plural: networks
      singular: network
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Network describes the cluster's desired network configuration.
            It is consumed by the cluster-network-operator.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: NetworkSpec is the top-level network configuration object.
              properties:
                additionalNetworks:
                  description: additionalNetworks is a list of extra networks to make
                    available to pods when multiple networks are enabled.
                  items:
                    description: AdditionalNetworkDefinition configures an extra network
                      that is available but not created by default. Instead, pods
                      must request them by name. type must be specified, along with
                      exactly one "Config" that matches the type.
                    properties:
                      name:
                        description: name is the name of the network. This will be
                          populated in the resulting CRD This must be unique.
                        type: string
                      namespace:
                        description: namespace is the namespace of the network. This
                          will be populated in the resulting CRD If not given the
                          network will be created in the default namespace.
                        type: string
                      rawCNIConfig:
                        description: rawCNIConfig is the raw CNI configuration json
                          to create in the NetworkAttachmentDefinition CRD
                        type: string
                      simpleMacvlanConfig:
                        description: SimpleMacvlanConfig configures the macvlan interface
                          in case of type:NetworkTypeSimpleMacvlan
                        properties:
                          ipamConfig:
                            description: IPAMConfig configures IPAM module will be
                              used for IP Address Management (IPAM).
                            properties:
                              staticIPAMConfig:
                                description: StaticIPAMConfig configures the static
                                  IP address in case of type:IPAMTypeStatic
                                properties:
                                  addresses:
                                    description: Addresses configures IP address for
                                      the interface
                                    items:
                                      description: StaticIPAMAddresses provides IP
                                        address and Gateway for static IPAM addresses
                                      properties:
                                        address:
                                          description: Address is the IP address in
                                            CIDR format
                                          type: string
                                        gateway:
                                          description: Gateway is IP inside of subnet
                                            to designate as the gateway
                                          type: string
                                      type: object
                                    type: array
                                  dns:
                                    description: DNS configures DNS for the interface
                                    properties:
                                      domain:
                                        description: Domain configures the domainname
                                          the local domain used for short hostname
                                          lookups
                                        type: string
                                      nameservers:
                                        description: Nameservers points DNS servers
                                          for IP lookup
                                        items:
                                          type: string
                                        type: array
                                      search:
                                        description: Search configures priority ordered
                                          search domains for short hostname lookups
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  routes:
                                    description: Routes configures IP routes for the
                                      interface
                                    items:
                                      description: StaticIPAMRoutes provides Destination/Gateway
                                        pairs for static IPAM routes
                                      properties:
                                        destination:
                                          description: Destination points the IP route
                                            destination
                                          type: string
                                        gateway:
                                          description: Gateway is the route's next-hop
                                            IP address If unset, a default gateway
                                            is assumed (as determined by the CNI plugin).
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              type:
                                description: Type is the type of IPAM module will
                                  be used for IP Address Management(IPAM). The supported
                                  values are IPAMTypeDHCP, IPAMTypeStatic
                                type: string
                            type: object
                          master:
                            description: master is the host interface to create the
                              macvlan interface from. If not specified, it will be
                              default route interface
                            type: string
                          mode:
                            description: 'mode is the macvlan mode: bridge, private,
                              vepa, passthru. The default is bridge'
                            type: string
                          mtu:
                            description: mtu is the mtu to use for the macvlan interface.
                              if unset, host's kernel will select the value.
                            format: int32
                            minimum: 0
                            type: integer
                        type: object
                      type:
                        description: type is the type of network The supported values
                          are NetworkTypeRaw, NetworkTypeSimpleMacvlan
                        type: string
                    required:
                    - type
                    - name
                    type: object
                  type: array
                clusterNetwork:
                  description: clusterNetwork is the IP address pool to use for pod
                    IPs. Some network providers, e.g. OpenShift SDN, support multiple
                    ClusterNetworks. Others only support one. This is equivalent to
                    the cluster-cidr.
                  items:
                    description: ClusterNetworkEntry is a subnet from which to allocate
                      PodIPs. A network of size HostPrefix (in CIDR notation) will
                      be allocated when nodes join the cluster. If HostPrefix is not
                      used by the plugin, it can be left unset. Not all network providers
                      support multiple ClusterNetworks
                    properties:
                      cidr:
                        type: string
                      hostPrefix:
                        format: int32
                        minimum: 0
                        type: integer
                    required:
                    - cidr
                    type: object
                  type: array
                defaultNetwork:
                  description: defaultNetwork is the "default" network that all pods
                    will receive
                  properties:
                    kuryrConfig:
                      description: KuryrConfig configures the kuryr plugin
                      properties:
                        controllerProbesPort:
                          description: The port kuryr-controller will listen for readiness
                            and liveness requests.
                          format: int32
                          minimum: 0
                          type: integer
                        daemonProbesPort:
                          description: The port kuryr-daemon will listen for readiness
                            and liveness requests.
                          format: int32
                          minimum: 0
                          type: integer
                        enablePortPoolsPrepopulation:
                          description: enablePortPoolsPrepopulation when true will
                            make Kuryr prepopulate each newly created port pool with
                            a minimum number of ports. Kuryr uses Neutron port pooling
                            to fight the fact that it takes a significant amount of
                            time to create one. Instead of creating it when pod is
                            being deployed, Kuryr keeps a number of ports ready to
                            be attached to pods. By default port prepopulation is
                            disabled.
                          type: boolean
                        openStackServiceNetwork:
                          description: openStackServiceNetwork contains the CIDR of
                            network from which to allocate IPs for OpenStack Octavia's
                            Amphora VMs. Please note that with Amphora driver Octavia
                            uses two IPs from that network for each loadbalancer -
                            one given by OpenShift and second for VRRP connections.
                            As the first one is managed by OpenShift's and second
                            by Neutron's IPAMs, those need to come from different
                            pools. Therefore `openStackServiceNetwork` needs to be
                            at least twice the size of `serviceNetwork`, and whole
                            `serviceNetwork` must be overlapping with `openStackServiceNetwork`.
                            cluster-network-operator will then make sure VRRP IPs
                            are taken from the ranges inside `openStackServiceNetwork`
                            that are not overlapping with `serviceNetwork`, effectivly
                            preventing conflicts. If not set cluster-network-operator
                            will use `serviceNetwork` expanded by decrementing the
                            prefix size by 1.
                          type: string
                        poolBatchPorts:
                          description: poolBatchPorts sets a number of ports that
                            should be created in a single batch request to extend
                            the port pool. The default is 3. For more information
                            about port pools see enablePortPoolsPrepopulation setting.
                          minimum: 0
                          type: integer
                        poolMaxPorts:
                          description: poolMaxPorts sets a maximum number of free
                            ports that are being kept in a port pool. If the number
                            of ports exceeds this setting, free ports will get deleted.
                            Setting 0 will disable this upper bound, effectively preventing
                            pools from shrinking and this is the default value. For
                            more information about port pools see enablePortPoolsPrepopulation
                            setting.
                          minimum: 0
                          type: integer
                        poolMinPorts:
                          description: poolMinPorts sets a minimum number of free
                            ports that should be kept in a port pool. If the number
                            of ports is lower than this setting, new ports will get
                            created and added to pool. The default is 1. For more
                            information about port pools see enablePortPoolsPrepopulation
                            setting.
                          minimum: 1
                          type: integer
                      type: object
                    openshiftSDNConfig:
                      description: openShiftSDNConfig configures the openshift-sdn
                        plugin
                      properties:
                        enableUnidling:
                          description: enableUnidling controls whether or not the
                            service proxy will support idling and unidling of services.
                            By default, unidling is enabled.
                          type: boolean
                        mode:
                          description: mode is one of "Multitenant", "Subnet", or
                            "NetworkPolicy"
                          type: string
                        mtu:
                          description: mtu is the mtu to use for the tunnel interface.
                            Defaults to 1450 if unset. This must be 50 bytes smaller
                            than the machine's uplink.
                          format: int32
                          minimum: 0
                          type: integer
                        useExternalOpenvswitch:
                          description: useExternalOpenvswitch tells the operator not
                            to install openvswitch, because it will be provided separately.
                            If set, you must provide it yourself.
                          type: boolean
                        vxlanPort:
                          description: vxlanPort is the port to use for all vxlan
                            packets. The default is 4789.
                          format: int32
                          minimum: 0
                          type: integer
                      type: object
                    ovnKubernetesConfig:
                      description: ovnKubernetesConfig configures the ovn-kubernetes
                        plugin.
                      properties:
                        genevePort:
                          description: geneve port is the UDP port to be used by geneve
                            encapulation. Default is 6081
                          format: int32
                          minimum: 1
                          type: integer
                        hybridOverlayConfig:
                          description: HybridOverlayConfig configures an additional
                            overlay network for peers that are not using OVN.
                          properties:
                            hybridClusterNetwork:
                              description: HybridClusterNetwork defines a network
                                space given to nodes on an additional overlay network.
                              items:
                                description: ClusterNetworkEntry is a subnet from
                                  which to allocate PodIPs. A network of size HostPrefix
                                  (in CIDR notation) will be allocated when nodes
                                  join the cluster. Not all network providers support
                                  multiple ClusterNetworks
                                properties:
                                  cidr:
                                    type: string
                                  hostPrefix:
                                    format: int32
                                    minimum: 0
                                    type: integer
                                type: object
                              type: array
                            hybridOverlayVXLANPort:
                              description: defines the VXLAN port number to be used
                                by the additional overlay network. Default is 4789
                              format: int32
                              minimum: 1
                              type: integer
                          type: object
                        mtu:
                          description: mtu is the MTU to use for the tunnel interface.
                            This must be 100 bytes smaller than the uplink mtu. Default
                            is 1400
                          format: int32
                          minimum: 0
                          type: integer
                      type: object
                    type:
                      description: type is the type of network All NetworkTypes are
                        supported except for NetworkTypeRaw
                      type: string
                  required:
                  - type
                  type: object
                deployKubeProxy:
                  description: deployKubeProxy specifies whether or not a standalone
                    kube-proxy should be deployed by the operator. Some network providers
                    include kube-proxy or similar functionality. If unset, the plugin
                    will attempt to select the correct value, which is false when
                    OpenShift SDN and ovn-kubernetes are used and true otherwise.
                  type: boolean
                disableMultiNetwork:
                  description: disableMultiNetwork specifies whether or not multiple
                    pod network support should be disabled. If unset, this property
                    defaults to 'false' and multiple network support is enabled.
                  type: boolean
                kubeProxyConfig:
                  description: kubeProxyConfig lets us configure desired proxy configuration.
                    If not specified, sensible defaults will be chosen by OpenShift
                    directly. Not consumed by all network providers - currently only
                    openshift-sdn.
                  properties:
                    bindAddress:
                      description: The address to "bind" on Defaults to 0.0.0.0
                      type: string
                    iptablesSyncPeriod:
                      description: 'The period that iptables rules are refreshed.
                        Default: 30s'
                      type: string
                    proxyArguments:
                      additionalProperties:
                        description: ProxyArgumentList is a list of arguments to pass
                          to the kubeproxy process
                        items:
                          type: string
                        type: array
                      description: Any additional arguments to pass to the kubeproxy
                        process
                      type: object
                  type: object
                logLevel:
                  description: logLevel allows configuring the logging level of the
                    components deployed by the operator. Currently only Kuryr SDN
                    is affected by this setting. Please note that turning on extensive
                    logging may affect performance. The default value is "Normal".
                  type: string
                serviceNetwork:
                  description: serviceNetwork is the ip address pool to use for Service
                    IPs Currently, all existing network providers only support a single
                    value here, but this is an array to allow for growth.
                  items:
                    type: string
                  type: array
              required:
              - defaultNetwork
              type: object
            status:
              description: NetworkStatus is currently unused. Instead, status is reported
                in the Network.config.openshift.io object.
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: Network
      listKind: NetworkList
      plural: networks
      singular: network
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:36Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:36Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:33Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:identityProviders:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:templates:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:error:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:name:
                              .: {}
                              f:description: {}
                              f:type: {}
                          f:required: {}
                          f:type: {}
                        f:login:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:name:
                              .: {}
                              f:description: {}
                              f:type: {}
                          f:required: {}
                          f:type: {}
                        f:providerSelection:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:name:
                              .: {}
                              f:description: {}
                              f:type: {}
                          f:required: {}
                          f:type: {}
                      f:type: {}
                    f:tokenConfig:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:accessTokenInactivityTimeout:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:accessTokenInactivityTimeoutSeconds:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                        f:accessTokenMaxAgeSeconds:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:33Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:33Z"
    name: oauths.config.openshift.io
    resourceVersion: "346"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/oauths.config.openshift.io
    uid: 0df3e408-9316-4e26-ab08-cb6c41bba49d
  spec:
    conversion:
      strategy: None
    group: config.openshift.io
    names:
      kind: OAuth
      listKind: OAuthList
      plural: oauths
      singular: oauth
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: OAuth holds cluster-wide information about OAuth.  The canonical
            name is `cluster`. It is used to configure the integrated OAuth server.
            This configuration is only honored when the top level Authentication config
            has type set to IntegratedOAuth.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec holds user settable values for configuration
              properties:
                identityProviders:
                  description: identityProviders is an ordered list of ways for a
                    user to identify themselves. When this list is empty, no identities
                    are provisioned for users.
                  items:
                    description: IdentityProvider provides identities for users authenticating
                      using credentials
                    properties:
                      basicAuth:
                        description: basicAuth contains configuration options for
                          the BasicAuth IdP
                        properties:
                          ca:
                            description: ca is an optional reference to a config map
                              by name containing the PEM-encoded CA bundle. It is
                              used as a trust anchor to validate the TLS certificate
                              presented by the remote server. The key "ca.crt" is
                              used to locate the data. If specified and the config
                              map or expected key is not found, the identity provider
                              is not honored. If the specified ca data is not valid,
                              the identity provider is not honored. If empty, the
                              default system roots are used. The namespace for this
                              config map is openshift-config.
                            properties:
                              name:
                                description: name is the metadata.name of the referenced
                                  config map
                                type: string
                            required:
                            - name
                            type: object
                          tlsClientCert:
                            description: tlsClientCert is an optional reference to
                              a secret by name that contains the PEM-encoded TLS client
                              certificate to present when connecting to the server.
                              The key "tls.crt" is used to locate the data. If specified
                              and the secret or expected key is not found, the identity
                              provider is not honored. If the specified certificate
                              data is not valid, the identity provider is not honored.
                              The namespace for this secret is openshift-config.
                            properties:
                              name:
                                description: name is the metadata.name of the referenced
                                  secret
                                type: string
                            required:
                            - name
                            type: object
                          tlsClientKey:
                            description: tlsClientKey is an optional reference to
                              a secret by name that contains the PEM-encoded TLS private
                              key for the client certificate referenced in tlsClientCert.
                              The key "tls.key" is used to locate the data. If specified
                              and the secret or expected key is not found, the identity
                              provider is not honored. If the specified certificate
                              data is not valid, the identity provider is not honored.
                              The namespace for this secret is openshift-config.
                            properties:
                              name:
                                description: name is the metadata.name of the referenced
                                  secret
                                type: string
                            required:
                            - name
                            type: object
                          url:
                            description: url is the remote URL to connect to
                            type: string
                        type: object
                      github:
                        description: github enables user authentication using GitHub
                          credentials
                        properties:
                          ca:
                            description: ca is an optional reference to a config map
                              by name containing the PEM-encoded CA bundle. It is
                              used as a trust anchor to validate the TLS certificate
                              presented by the remote server. The key "ca.crt" is
                              used to locate the data. If specified and the config
                              map or expected key is not found, the identity provider
                              is not honored. If the specified ca data is not valid,
                              the identity provider is not honored. If empty, the
                              default system roots are used. This can only be configured
                              when hostname is set to a non-empty value. The namespace
                              for this config map is openshift-config.
                            properties:
                              name:
                                description: name is the metadata.name of the referenced
                                  config map
                                type: string
                            required:
                            - name
                            type: object
                          clientID:
                            description: clientID is the oauth client ID
                            type: string
                          clientSecret:
                            description: clientSecret is a required reference to the
                              secret by name containing the oauth client secret. The
                              key "clientSecret" is used to locate the data. If the
                              secret or expected key is not found, the identity provider
                              is not honored. The namespace for this secret is openshift-config.
                            properties:
                              name:
                                description: name is the metadata.name of the referenced
                                  secret
                                type: string
                            required:
                            - name
                            type: object
                          hostname:
                            description: hostname is the optional domain (e.g. "mycompany.com")
                              for use with a hosted instance of GitHub Enterprise.
                              It must match the GitHub Enterprise settings value configured
                              at /setup/settings#hostname.
                            type: string
                          organizations:
                            description: organizations optionally restricts which
                              organizations are allowed to log in
                            items:
                              type: string
                            type: array
                          teams:
                            description: teams optionally restricts which teams are
                              allowed to log in. Format is <org>/<team>.
                            items:
                              type: string
                            type: array
                        type: object
                      gitlab:
                        description: gitlab enables user authentication using GitLab
                          credentials
                        properties:
                          ca:
                            description: ca is an optional reference to a config map
                              by name containing the PEM-encoded CA bundle. It is
                              used as a trust anchor to validate the TLS certificate
                              presented by the remote server. The key "ca.crt" is
                              used to locate the data. If specified and the config
                              map or expected key is not found, the identity provider
                              is not honored. If the specified ca data is not valid,
                              the identity provider is not honored. If empty, the
                              default system roots are used. The namespace for this
                              config map is openshift-config.
                            properties:
                              name:
                                description: name is the metadata.name of the referenced
                                  config map
                                type: string
                            required:
                            - name
                            type: object
                          clientID:
                            description: clientID is the oauth client ID
                            type: string
                          clientSecret:
                            description: clientSecret is a required reference to the
                              secret by name containing the oauth client secret. The
                              key "clientSecret" is used to locate the data. If the
                              secret or expected key is not found, the identity provider
                              is not honored. The namespace for this secret is openshift-config.
                            properties:
                              name:
                                description: name is the metadata.name of the referenced
                                  secret
                                type: string
                            required:
                            - name
                            type: object
                          url:
                            description: url is the oauth server base URL
                            type: string
                        type: object
                      google:
                        description: google enables user authentication using Google
                          credentials
                        properties:
                          clientID:
                            description: clientID is the oauth client ID
                            type: string
                          clientSecret:
                            description: clientSecret is a required reference to the
                              secret by name containing the oauth client secret. The
                              key "clientSecret" is used to locate the data. If the
                              secret or expected key is not found, the identity provider
                              is not honored. The namespace for this secret is openshift-config.
                            properties:
                              name:
                                description: name is the metadata.name of the referenced
                                  secret
                                type: string
                            required:
                            - name
                            type: object
                          hostedDomain:
                            description: hostedDomain is the optional Google App domain
                              (e.g. "mycompany.com") to restrict logins to
                            type: string
                        type: object
                      htpasswd:
                        description: htpasswd enables user authentication using an
                          HTPasswd file to validate credentials
                        properties:
                          fileData:
                            description: fileData is a required reference to a secret
                              by name containing the data to use as the htpasswd file.
                              The key "htpasswd" is used to locate the data. If the
                              secret or expected key is not found, the identity provider
                              is not honored. If the specified htpasswd data is not
                              valid, the identity provider is not honored. The namespace
                              for this secret is openshift-config.
                            properties:
                              name:
                                description: name is the metadata.name of the referenced
                                  secret
                                type: string
                            required:
                            - name
                            type: object
                        type: object
                      keystone:
                        description: keystone enables user authentication using keystone
                          password credentials
                        properties:
                          ca:
                            description: ca is an optional reference to a config map
                              by name containing the PEM-encoded CA bundle. It is
                              used as a trust anchor to validate the TLS certificate
                              presented by the remote server. The key "ca.crt" is
                              used to locate the data. If specified and the config
                              map or expected key is not found, the identity provider
                              is not honored. If the specified ca data is not valid,
                              the identity provider is not honored. If empty, the
                              default system roots are used. The namespace for this
                              config map is openshift-config.
                            properties:
                              name:
                                description: name is the metadata.name of the referenced
                                  config map
                                type: string
                            required:
                            - name
                            type: object
                          domainName:
                            description: domainName is required for keystone v3
                            type: string
                          tlsClientCert:
                            description: tlsClientCert is an optional reference to
                              a secret by name that contains the PEM-encoded TLS client
                              certificate to present when connecting to the server.
                              The key "tls.crt" is used to locate the data. If specified
                              and the secret or expected key is not found, the identity
                              provider is not honored. If the specified certificate
                              data is not valid, the identity provider is not honored.
                              The namespace for this secret is openshift-config.
                            properties:
                              name:
                                description: name is the metadata.name of the referenced
                                  secret
                                type: string
                            required:
                            - name
                            type: object
                          tlsClientKey:
                            description: tlsClientKey is an optional reference to
                              a secret by name that contains the PEM-encoded TLS private
                              key for the client certificate referenced in tlsClientCert.
                              The key "tls.key" is used to locate the data. If specified
                              and the secret or expected key is not found, the identity
                              provider is not honored. If the specified certificate
                              data is not valid, the identity provider is not honored.
                              The namespace for this secret is openshift-config.
                            properties:
                              name:
                                description: name is the metadata.name of the referenced
                                  secret
                                type: string
                            required:
                            - name
                            type: object
                          url:
                            description: url is the remote URL to connect to
                            type: string
                        type: object
                      ldap:
                        description: ldap enables user authentication using LDAP credentials
                        properties:
                          attributes:
                            description: attributes maps LDAP attributes to identities
                            properties:
                              email:
                                description: email is the list of attributes whose
                                  values should be used as the email address. Optional.
                                  If unspecified, no email is set for the identity
                                items:
                                  type: string
                                type: array
                              id:
                                description: id is the list of attributes whose values
                                  should be used as the user ID. Required. First non-empty
                                  attribute is used. At least one attribute is required.
                                  If none of the listed attribute have a value, authentication
                                  fails. LDAP standard identity attribute is "dn"
                                items:
                                  type: string
                                type: array
                              name:
                                description: name is the list of attributes whose
                                  values should be used as the display name. Optional.
                                  If unspecified, no display name is set for the identity
                                  LDAP standard display name attribute is "cn"
                                items:
                                  type: string
                                type: array
                              preferredUsername:
                                description: preferredUsername is the list of attributes
                                  whose values should be used as the preferred username.
                                  LDAP standard login attribute is "uid"
                                items:
                                  type: string
                                type: array
                            type: object
                          bindDN:
                            description: bindDN is an optional DN to bind with during
                              the search phase.
                            type: string
                          bindPassword:
                            description: bindPassword is an optional reference to
                              a secret by name containing a password to bind with
                              during the search phase. The key "bindPassword" is used
                              to locate the data. If specified and the secret or expected
                              key is not found, the identity provider is not honored.
                              The namespace for this secret is openshift-config.
                            properties:
                              name:
                                description: name is the metadata.name of the referenced
                                  secret
                                type: string
                            required:
                            - name
                            type: object
                          ca:
                            description: ca is an optional reference to a config map
                              by name containing the PEM-encoded CA bundle. It is
                              used as a trust anchor to validate the TLS certificate
                              presented by the remote server. The key "ca.crt" is
                              used to locate the data. If specified and the config
                              map or expected key is not found, the identity provider
                              is not honored. If the specified ca data is not valid,
                              the identity provider is not honored. If empty, the
                              default system roots are used. The namespace for this
                              config map is openshift-config.
                            properties:
                              name:
                                description: name is the metadata.name of the referenced
                                  config map
                                type: string
                            required:
                            - name
                            type: object
                          insecure:
                            description: 'insecure, if true, indicates the connection
                              should not use TLS WARNING: Should not be set to `true`
                              with the URL scheme "ldaps://" as "ldaps://" URLs always          attempt
                              to connect using TLS, even when `insecure` is set to
                              `true` When `true`, "ldap://" URLS connect insecurely.
                              When `false`, "ldap://" URLs are upgraded to a TLS connection
                              using StartTLS as specified in https://tools.ietf.org/html/rfc2830.'
                            type: boolean
                          url:
                            description: 'url is an RFC 2255 URL which specifies the
                              LDAP search parameters to use. The syntax of the URL
                              is: ldap://host:port/basedn?attribute?scope?filter'
                            type: string
                        type: object
                      mappingMethod:
                        description: mappingMethod determines how identities from
                          this provider are mapped to users Defaults to "claim"
                        type: string
                      name:
                        description: 'name is used to qualify the identities returned
                          by this provider. - It MUST be unique and not shared by
                          any other identity provider used - It MUST be a valid path
                          segment: name cannot equal "." or ".." or contain "/" or
                          "%" or ":"   Ref: https://godoc.org/github.com/openshift/origin/pkg/user/apis/user/validation#ValidateIdentityProviderName'
                        type: string
                      openID:
                        description: openID enables user authentication using OpenID
                          credentials
                        properties:
                          ca:
                            description: ca is an optional reference to a config map
                              by name containing the PEM-encoded CA bundle. It is
                              used as a trust anchor to validate the TLS certificate
                              presented by the remote server. The key "ca.crt" is
                              used to locate the data. If specified and the config
                              map or expected key is not found, the identity provider
                              is not honored. If the specified ca data is not valid,
                              the identity provider is not honored. If empty, the
                              default system roots are used. The namespace for this
                              config map is openshift-config.
                            properties:
                              name:
                                description: name is the metadata.name of the referenced
                                  config map
                                type: string
                            required:
                            - name
                            type: object
                          claims:
                            description: claims mappings
                            properties:
                              email:
                                description: email is the list of claims whose values
                                  should be used as the email address. Optional. If
                                  unspecified, no email is set for the identity
                                items:
                                  type: string
                                type: array
                              name:
                                description: name is the list of claims whose values
                                  should be used as the display name. Optional. If
                                  unspecified, no display name is set for the identity
                                items:
                                  type: string
                                type: array
                              preferredUsername:
                                description: preferredUsername is the list of claims
                                  whose values should be used as the preferred username.
                                  If unspecified, the preferred username is determined
                                  from the value of the sub claim
                                items:
                                  type: string
                                type: array
                            type: object
                          clientID:
                            description: clientID is the oauth client ID
                            type: string
                          clientSecret:
                            description: clientSecret is a required reference to the
                              secret by name containing the oauth client secret. The
                              key "clientSecret" is used to locate the data. If the
                              secret or expected key is not found, the identity provider
                              is not honored. The namespace for this secret is openshift-config.
                            properties:
                              name:
                                description: name is the metadata.name of the referenced
                                  secret
                                type: string
                            required:
                            - name
                            type: object
                          extraAuthorizeParameters:
                            additionalProperties:
                              type: string
                            description: extraAuthorizeParameters are any custom parameters
                              to add to the authorize request.
                            type: object
                          extraScopes:
                            description: extraScopes are any scopes to request in
                              addition to the standard "openid" scope.
                            items:
                              type: string
                            type: array
                          issuer:
                            description: issuer is the URL that the OpenID Provider
                              asserts as its Issuer Identifier. It must use the https
                              scheme with no query or fragment component.
                            type: string
                        type: object
                      requestHeader:
                        description: requestHeader enables user authentication using
                          request header credentials
                        properties:
                          ca:
                            description: ca is a required reference to a config map
                              by name containing the PEM-encoded CA bundle. It is
                              used as a trust anchor to validate the TLS certificate
                              presented by the remote server. Specifically, it allows
                              verification of incoming requests to prevent header
                              spoofing. The key "ca.crt" is used to locate the data.
                              If the config map or expected key is not found, the
                              identity provider is not honored. If the specified ca
                              data is not valid, the identity provider is not honored.
                              The namespace for this config map is openshift-config.
                            properties:
                              name:
                                description: name is the metadata.name of the referenced
                                  config map
                                type: string
                            required:
                            - name
                            type: object
                          challengeURL:
                            description: challengeURL is a URL to redirect unauthenticated
                              /authorize requests to Unauthenticated requests from
                              OAuth clients which expect WWW-Authenticate challenges
                              will be redirected here. ${url} is replaced with the
                              current URL, escaped to be safe in a query parameter   https://www.example.com/sso-login?then=${url}
                              ${query} is replaced with the current query string   https://www.example.com/auth-proxy/oauth/authorize?${query}
                              Required when challenge is set to true.
                            type: string
                          clientCommonNames:
                            description: clientCommonNames is an optional list of
                              common names to require a match from. If empty, any
                              client certificate validated against the clientCA bundle
                              is considered authoritative.
                            items:
                              type: string
                            type: array
                          emailHeaders:
                            description: emailHeaders is the set of headers to check
                              for the email address
                            items:
                              type: string
                            type: array
                          headers:
                            description: headers is the set of headers to check for
                              identity information
                            items:
                              type: string
                            type: array
                          loginURL:
                            description: loginURL is a URL to redirect unauthenticated
                              /authorize requests to Unauthenticated requests from
                              OAuth clients which expect interactive logins will be
                              redirected here ${url} is replaced with the current
                              URL, escaped to be safe in a query parameter   https://www.example.com/sso-login?then=${url}
                              ${query} is replaced with the current query string   https://www.example.com/auth-proxy/oauth/authorize?${query}
                              Required when login is set to true.
                            type: string
                          nameHeaders:
                            description: nameHeaders is the set of headers to check
                              for the display name
                            items:
                              type: string
                            type: array
                          preferredUsernameHeaders:
                            description: preferredUsernameHeaders is the set of headers
                              to check for the preferred username
                            items:
                              type: string
                            type: array
                        type: object
                      type:
                        description: type identifies the identity provider type for
                          this entry.
                        type: string
                    type: object
                  type: array
                templates:
                  description: templates allow you to customize pages like the login
                    page.
                  properties:
                    error:
                      description: error is the name of a secret that specifies a
                        go template to use to render error pages during the authentication
                        or grant flow. The key "errors.html" is used to locate the
                        template data. If specified and the secret or expected key
                        is not found, the default error page is used. If the specified
                        template is not valid, the default error page is used. If
                        unspecified, the default error page is used. The namespace
                        for this secret is openshift-config.
                      properties:
                        name:
                          description: name is the metadata.name of the referenced
                            secret
                          type: string
                      required:
                      - name
                      type: object
                    login:
                      description: login is the name of a secret that specifies a
                        go template to use to render the login page. The key "login.html"
                        is used to locate the template data. If specified and the
                        secret or expected key is not found, the default login page
                        is used. If the specified template is not valid, the default
                        login page is used. If unspecified, the default login page
                        is used. The namespace for this secret is openshift-config.
                      properties:
                        name:
                          description: name is the metadata.name of the referenced
                            secret
                          type: string
                      required:
                      - name
                      type: object
                    providerSelection:
                      description: providerSelection is the name of a secret that
                        specifies a go template to use to render the provider selection
                        page. The key "providers.html" is used to locate the template
                        data. If specified and the secret or expected key is not found,
                        the default provider selection page is used. If the specified
                        template is not valid, the default provider selection page
                        is used. If unspecified, the default provider selection page
                        is used. The namespace for this secret is openshift-config.
                      properties:
                        name:
                          description: name is the metadata.name of the referenced
                            secret
                          type: string
                      required:
                      - name
                      type: object
                  type: object
                tokenConfig:
                  description: tokenConfig contains options for authorization and
                    access tokens
                  properties:
                    accessTokenInactivityTimeout:
                      description: accessTokenInactivityTimeout defines the token
                        inactivity timeout for tokens granted by any client. The value
                        represents the maximum amount of time that can occur between
                        consecutive uses of the token. Tokens become invalid if they
                        are not used within this temporal window. The user will need
                        to acquire a new token to regain access once a token times
                        out. Takes valid time duration string such as "5m", "1.5h"
                        or "2h45m". The minimum allowed value for duration is 300s
                        (5 minutes). If the timeout is configured per client, then
                        that value takes precedence. If the timeout value is not specified
                        and the client does not override the value, then tokens are
                        valid until their lifetime.
                      type: string
                    accessTokenInactivityTimeoutSeconds:
                      description: 'accessTokenInactivityTimeoutSeconds - DEPRECATED:
                        setting this field has no effect.'
                      format: int32
                      type: integer
                    accessTokenMaxAgeSeconds:
                      description: accessTokenMaxAgeSeconds defines the maximum age
                        of access tokens
                      format: int32
                      type: integer
                  type: object
              type: object
            status:
              description: status holds observed values from the cluster. They may
                not be overridden.
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: OAuth
      listKind: OAuthList
      plural: oauths
      singular: oauth
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:33Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:33Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:51Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:51Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:51Z"
    name: openshiftapiservers.operator.openshift.io
    resourceVersion: "813"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/openshiftapiservers.operator.openshift.io
    uid: e4215ec8-dcd1-4000-aff9-29ef532c9097
  spec:
    conversion:
      strategy: None
    group: operator.openshift.io
    names:
      categories:
      - coreoperators
      kind: OpenShiftAPIServer
      listKind: OpenShiftAPIServerList
      plural: openshiftapiservers
      singular: openshiftapiserver
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: OpenShiftAPIServer provides information to configure an operator
            to manage openshift-apiserver.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec is the specification of the desired behavior of the
                OpenShift API Server.
              properties:
                logLevel:
                  default: Normal
                  description: "logLevel is an intent based logging for an overall
                    component.  It does not give fine grained control, but it is a
                    simple way to manage coarse grained logging choices that operators
                    have to interpret for their operands. \n Valid values are: \"Normal\",
                    \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                managementState:
                  description: managementState indicates whether and how the operator
                    should manage the component
                  pattern: ^(Managed|Unmanaged|Force|Removed)$
                  type: string
                observedConfig:
                  description: observedConfig holds a sparse config that controller
                    has observed from the cluster state.  It exists in spec because
                    it is an input to the level for the operator
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                operatorLogLevel:
                  default: Normal
                  description: "operatorLogLevel is an intent based logging for the
                    operator itself.  It does not give fine grained control, but it
                    is a simple way to manage coarse grained logging choices that
                    operators have to interpret for themselves. \n Valid values are:
                    \"Normal\", \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                unsupportedConfigOverrides:
                  description: 'unsupportedConfigOverrides holds a sparse config that
                    will override any previously set options.  It only needs to be
                    the fields to override it will end up overlaying in the following
                    order: 1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides'
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              type: object
            status:
              description: status defines the observed status of the OpenShift API
                Server.
              properties:
                conditions:
                  description: conditions is a list of conditions and their status
                  items:
                    description: OperatorCondition is just the standard condition
                      fields.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
                generations:
                  description: generations are used to determine when an item needs
                    to be reconciled or has changed in a way that needs a reaction.
                  items:
                    description: GenerationStatus keeps track of the generation for
                      a given resource so that decisions about forced updates can
                      be made.
                    properties:
                      group:
                        description: group is the group of the thing you're tracking
                        type: string
                      hash:
                        description: hash is an optional field set for resources without
                          generation that are content sensitive like secrets and configmaps
                        type: string
                      lastGeneration:
                        description: lastGeneration is the last generation of the
                          workload controller involved
                        format: int64
                        type: integer
                      name:
                        description: name is the name of the thing you're tracking
                        type: string
                      namespace:
                        description: namespace is where the thing you're tracking
                          is
                        type: string
                      resource:
                        description: resource is the resource type of the thing you're
                          tracking
                        type: string
                    type: object
                  type: array
                latestAvailableRevision:
                  description: latestAvailableRevision is the latest revision used
                    as suffix of revisioned secrets like encryption-config. A new
                    revision causes a new deployment of pods.
                  format: int32
                  minimum: 0
                  type: integer
                observedGeneration:
                  description: observedGeneration is the last generation change you've
                    dealt with
                  format: int64
                  type: integer
                readyReplicas:
                  description: readyReplicas indicates how many replicas are ready
                    and at the desired state
                  format: int32
                  type: integer
                version:
                  description: version is the level this availability applies to
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - coreoperators
      kind: OpenShiftAPIServer
      listKind: OpenShiftAPIServerList
      plural: openshiftapiservers
      singular: openshiftapiserver
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:51Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:51Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:51Z"
    name: openshiftcontrollermanagers.operator.openshift.io
    resourceVersion: "803"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/openshiftcontrollermanagers.operator.openshift.io
    uid: b2f44c11-6673-4cbd-84e2-b3b8331b85c6
  spec:
    conversion:
      strategy: None
    group: operator.openshift.io
    names:
      categories:
      - coreoperators
      kind: OpenShiftControllerManager
      listKind: OpenShiftControllerManagerList
      plural: openshiftcontrollermanagers
      singular: openshiftcontrollermanager
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: OpenShiftControllerManager provides information to configure
            an operator to manage openshift-controller-manager.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                logLevel:
                  default: Normal
                  description: "logLevel is an intent based logging for an overall
                    component.  It does not give fine grained control, but it is a
                    simple way to manage coarse grained logging choices that operators
                    have to interpret for their operands. \n Valid values are: \"Normal\",
                    \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                managementState:
                  description: managementState indicates whether and how the operator
                    should manage the component
                  pattern: ^(Managed|Unmanaged|Force|Removed)$
                  type: string
                observedConfig:
                  description: observedConfig holds a sparse config that controller
                    has observed from the cluster state.  It exists in spec because
                    it is an input to the level for the operator
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                operatorLogLevel:
                  default: Normal
                  description: "operatorLogLevel is an intent based logging for the
                    operator itself.  It does not give fine grained control, but it
                    is a simple way to manage coarse grained logging choices that
                    operators have to interpret for themselves. \n Valid values are:
                    \"Normal\", \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                unsupportedConfigOverrides:
                  description: 'unsupportedConfigOverrides holds a sparse config that
                    will override any previously set options.  It only needs to be
                    the fields to override it will end up overlaying in the following
                    order: 1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides'
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              type: object
            status:
              properties:
                conditions:
                  description: conditions is a list of conditions and their status
                  items:
                    description: OperatorCondition is just the standard condition
                      fields.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
                generations:
                  description: generations are used to determine when an item needs
                    to be reconciled or has changed in a way that needs a reaction.
                  items:
                    description: GenerationStatus keeps track of the generation for
                      a given resource so that decisions about forced updates can
                      be made.
                    properties:
                      group:
                        description: group is the group of the thing you're tracking
                        type: string
                      hash:
                        description: hash is an optional field set for resources without
                          generation that are content sensitive like secrets and configmaps
                        type: string
                      lastGeneration:
                        description: lastGeneration is the last generation of the
                          workload controller involved
                        format: int64
                        type: integer
                      name:
                        description: name is the name of the thing you're tracking
                        type: string
                      namespace:
                        description: namespace is where the thing you're tracking
                          is
                        type: string
                      resource:
                        description: resource is the resource type of the thing you're
                          tracking
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration is the last generation change you've
                    dealt with
                  format: int64
                  type: integer
                readyReplicas:
                  description: readyReplicas indicates how many replicas are ready
                    and at the desired state
                  format: int32
                  type: integer
                version:
                  description: version is the level this availability applies to
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - coreoperators
      kind: OpenShiftControllerManager
      listKind: OpenShiftControllerManagerList
      plural: openshiftcontrollermanagers
      singular: openshiftcontrollermanager
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.3.0
    creationTimestamp: "2020-11-18T12:59:01Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:controller-gen.kubebuilder.io/version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:59:01Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
      manager: register.test
      operation: Update
      time: "2020-11-20T22:16:08Z"
    name: operatorgroups.operators.coreos.com
    resourceVersion: "1040004"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/operatorgroups.operators.coreos.com
    uid: 098f6889-65cd-4856-9ab9-4de5c9f5a3e0
  spec:
    conversion:
      strategy: None
    group: operators.coreos.com
    names:
      categories:
      - olm
      kind: OperatorGroup
      listKind: OperatorGroupList
      plural: operatorgroups
      shortNames:
      - og
      singular: operatorgroup
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: OperatorGroup is the unit of multitenancy for OLM managed operators.
            It constrains the installation of operators in its namespace to a specified
            set of target namespaces.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: OperatorGroupSpec is the spec for an OperatorGroup resource.
              properties:
                selector:
                  description: Selector selects the OperatorGroup's target namespaces.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                serviceAccountName:
                  description: ServiceAccountName is the admin specified service account
                    which will be used to deploy operator(s) in this operator group.
                  type: string
                staticProvidedAPIs:
                  description: Static tells OLM not to update the OperatorGroup's
                    providedAPIs annotation
                  type: boolean
                targetNamespaces:
                  description: TargetNamespaces is an explicit set of namespaces to
                    target. If it is set, Selector is ignored.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
              type: object
            status:
              description: OperatorGroupStatus is the status for an OperatorGroupResource.
              properties:
                lastUpdated:
                  description: LastUpdated is a timestamp of the last time the OperatorGroup's
                    status was Updated.
                  format: date-time
                  type: string
                namespaces:
                  description: Namespaces is the set of target namespaces for the
                    OperatorGroup.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
                serviceAccountRef:
                  description: ServiceAccountRef references the service account object
                    specified.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
              required:
              - lastUpdated
              type: object
          required:
          - metadata
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          description: OperatorGroup is the unit of multitenancy for OLM managed operators.
            It constrains the installation of operators in its namespace to a specified
            set of target namespaces.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: OperatorGroupSpec is the spec for an OperatorGroup resource.
              properties:
                selector:
                  description: Selector selects the OperatorGroup's target namespaces.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                serviceAccountName:
                  description: ServiceAccountName is the admin specified service account
                    which will be used to deploy operator(s) in this operator group.
                  type: string
                staticProvidedAPIs:
                  description: Static tells OLM not to update the OperatorGroup's
                    providedAPIs annotation
                  type: boolean
                targetNamespaces:
                  description: TargetNamespaces is an explicit set of namespaces to
                    target. If it is set, Selector is ignored.
                  items:
                    type: string
                  type: array
              type: object
            status:
              description: OperatorGroupStatus is the status for an OperatorGroupResource.
              properties:
                lastUpdated:
                  description: LastUpdated is a timestamp of the last time the OperatorGroup's
                    status was Updated.
                  format: date-time
                  type: string
                namespaces:
                  description: Namespaces is the set of target namespaces for the
                    OperatorGroup.
                  items:
                    type: string
                  type: array
                serviceAccountRef:
                  description: ServiceAccountRef references the service account object
                    specified.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
              required:
              - lastUpdated
              type: object
          required:
          - metadata
          type: object
      served: true
      storage: false
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - olm
      kind: OperatorGroup
      listKind: OperatorGroupList
      plural: operatorgroups
      shortNames:
      - og
      singular: operatorgroup
    conditions:
    - lastTransitionTime: "2020-11-18T12:59:01Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:59:01Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:30Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:disableAllDefaultSources:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:sources:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:sources:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                  f:type: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:30Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:30Z"
    name: operatorhubs.config.openshift.io
    resourceVersion: "280"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/operatorhubs.config.openshift.io
    uid: 20760c90-1813-4452-96db-33f194a3d15b
  spec:
    conversion:
      strategy: None
    group: config.openshift.io
    names:
      kind: OperatorHub
      listKind: OperatorHubList
      plural: operatorhubs
      singular: operatorhub
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: OperatorHub is the Schema for the operatorhubs API. It can
            be used to change the state of the default hub sources for OperatorHub
            on the cluster from enabled to disabled and vice versa.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: OperatorHubSpec defines the desired state of OperatorHub
              properties:
                disableAllDefaultSources:
                  description: disableAllDefaultSources allows you to disable all
                    the default hub sources. If this is true, a specific entry in
                    sources can be used to enable a default source. If this is false,
                    a specific entry in sources can be used to disable or enable a
                    default source.
                  type: boolean
                sources:
                  description: sources is the list of default hub sources and their
                    configuration. If the list is empty, it implies that the default
                    hub sources are enabled on the cluster unless disableAllDefaultSources
                    is true. If disableAllDefaultSources is true and sources is not
                    empty, the configuration present in sources will take precedence.
                    The list of default hub sources and their current state will always
                    be reflected in the status block.
                  items:
                    description: HubSource is used to specify the hub source and its
                      configuration
                    properties:
                      disabled:
                        description: disabled is used to disable a default hub source
                          on cluster
                        type: boolean
                      name:
                        description: name is the name of one of the default hub sources
                        maxLength: 253
                        minLength: 1
                        type: string
                    type: object
                  type: array
              type: object
            status:
              description: OperatorHubStatus defines the observed state of OperatorHub.
                The current state of the default hub sources will always be reflected
                here.
              properties:
                sources:
                  description: sources encapsulates the result of applying the configuration
                    for each hub source
                  items:
                    description: HubSourceStatus is used to reflect the current state
                      of applying the configuration to a default source
                    properties:
                      disabled:
                        description: disabled is used to disable a default hub source
                          on cluster
                        type: boolean
                      message:
                        description: message provides more information regarding failures
                        type: string
                      name:
                        description: name is the name of one of the default hub sources
                        maxLength: 253
                        minLength: 1
                        type: string
                      status:
                        description: status indicates success or failure in applying
                          the configuration
                        type: string
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: OperatorHub
      listKind: OperatorHubList
      plural: operatorhubs
      singular: operatorhub
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:30Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:30Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T12:58:57Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:targetCert:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:commonName:
                          .: {}
                          f:description: {}
                          f:minLength: {}
                          f:type: {}
                      f:required: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:57Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:58Z"
    name: operatorpkis.network.operator.openshift.io
    resourceVersion: "1004"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/operatorpkis.network.operator.openshift.io
    uid: cc6e84d6-1f0e-45f9-801c-b9fe264f2071
  spec:
    conversion:
      strategy: None
    group: network.operator.openshift.io
    names:
      kind: OperatorPKI
      listKind: OperatorPKIList
      plural: operatorpkis
      singular: operatorpki
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: "OperatorPKI is a simple certificate authority. It is not intended
            for external use - rather, it is internal to the network operator. The
            CNO creates a CA and a certificate signed by that CA. The certificate
            has both ClientAuth and ServerAuth extended usages enabled. \n  More specifically,
            given an OperatorPKI with <name>, the CNO will manage: - A Secret called
            <name>-ca with two data keys:   - tls.key - the private key   - tls.crt
            - the CA certificate - A ConfigMap called <name>-ca with a single data
            key:   - cabundle.crt - the CA certificate(s) - A Secret called <name>-cert
            with two data keys:   - tls.key - the private key   - tls.crt - the certificate,
            signed by the CA \n The CA certificate will have a validity of 10 years,
            rotated after 9. The target certificate will have a validity of 6 months,
            rotated after 3 \n The CA certificate will have a CommonName of \"<namespace>_<name>-ca@<timestamp>\",
            where <timestamp> is the last rotation time."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: OperatorPKISpec is the PKI configuration.
              properties:
                targetCert:
                  description: targetCert configures the certificate signed by the
                    CA. It will have both ClientAuth and ServerAuth enabled
                  properties:
                    commonName:
                      description: commonName is the value in the certificate's CN
                      minLength: 1
                      type: string
                  required:
                  - commonName
                  type: object
              required:
              - targetCert
              type: object
            status:
              description: OperatorPKIStatus is not implemented.
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: OperatorPKI
      listKind: OperatorPKIList
      plural: operatorpkis
      singular: operatorpki
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:57Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:57Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.3.0
    creationTimestamp: "2020-11-18T12:59:03Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:controller-gen.kubebuilder.io/version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:59:03Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:59:03Z"
    name: operators.operators.coreos.com
    resourceVersion: "1147"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/operators.operators.coreos.com
    uid: 55067ddb-8592-464e-b5f0-75b75af253b5
  spec:
    conversion:
      strategy: None
    group: operators.coreos.com
    names:
      categories:
      - olm
      kind: Operator
      listKind: OperatorList
      plural: operators
      singular: operator
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Operator represents a cluster operator.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: OperatorSpec defines the desired state of Operator
              type: object
            status:
              description: OperatorStatus defines the observed state of an Operator
                and its components
              properties:
                components:
                  description: Components describes resources that compose the operator.
                  properties:
                    labelSelector:
                      description: LabelSelector is a label query over a set of resources
                        used to select the operator's components
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                    refs:
                      description: Refs are a set of references to the operator's
                        component resources, selected with LabelSelector.
                      items:
                        description: RichReference is a reference to a resource, enriched
                          with its status conditions.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          conditions:
                            description: Conditions represents the latest state of
                              the component.
                            items:
                              description: Condition represent the latest available
                                observations of an component's state.
                              properties:
                                lastTransitionTime:
                                  description: Last time the condition transitioned
                                    from one status to another.
                                  format: date-time
                                  type: string
                                lastUpdateTime:
                                  description: Last time the condition was probed
                                  format: date-time
                                  type: string
                                message:
                                  description: A human readable message indicating
                                    details about the transition.
                                  type: string
                                reason:
                                  description: The reason for the condition's last
                                    transition.
                                  type: string
                                status:
                                  description: Status of the condition, one of True,
                                    False, Unknown.
                                  type: string
                                type:
                                  description: Type of condition.
                                  type: string
                              required:
                              - status
                              - type
                              type: object
                            type: array
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      type: array
                  required:
                  - labelSelector
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - olm
      kind: Operator
      listKind: OperatorList
      plural: operators
      singular: operator
    conditions:
    - lastTransitionTime: "2020-11-18T12:59:03Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:59:03Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      description: Represents an OperatorSource.
      displayName: Operator Source
    creationTimestamp: "2020-11-19T21:30:31Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:description: {}
            f:displayName: {}
        f:spec:
          f:additionalPrinterColumns: {}
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:authorizationToken:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:secretName:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                    f:displayName:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:endpoint:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:publisher:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:registryNamespace:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:type:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:currentPhase:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:lastTransitionTime:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                        f:lastUpdateTime:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                        f:phase:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:message:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:name:
                              .: {}
                              f:description: {}
                              f:type: {}
                          f:type: {}
                      f:type: {}
                    f:packages:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:type: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: skaffold-tdd-tool
      operation: Update
      time: "2020-11-20T18:07:08Z"
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
      manager: register.test
      operation: Update
      time: "2020-11-20T22:16:10Z"
    name: operatorsources.operators.coreos.com
    resourceVersion: "1040020"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/operatorsources.operators.coreos.com
    uid: fb09b893-4822-4a9e-b7a6-8a5314cd610e
  spec:
    conversion:
      strategy: None
    group: operators.coreos.com
    names:
      kind: OperatorSource
      listKind: OperatorSourceList
      plural: operatorsources
      shortNames:
      - opsrc
      singular: operatorsource
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: The type of the OperatorSource
        jsonPath: .spec.type
        name: Type
        type: string
      - description: The endpoint of the OperatorSource
        jsonPath: .spec.endpoint
        name: Endpoint
        type: string
      - description: App registry namespace
        jsonPath: .spec.registryNamespace
        name: Registry
        type: string
      - description: Display (pretty) name to indicate the OperatorSource's name
        jsonPath: .spec.displayName
        name: DisplayName
        type: string
      - description: Publisher of the OperatorSource
        jsonPath: .spec.publisher
        name: Publisher
        type: string
      - description: Current status of the OperatorSource
        jsonPath: .status.currentPhase.phase.name
        name: Status
        type: string
      - description: Message associated with the current status
        jsonPath: .status.currentPhase.phase.message
        name: Message
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: OperatorSource is used to define the external datastore we
            are using to store operator bundles.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: OperatorSourceSpec defines the desired state of OperatorSource
              properties:
                authorizationToken:
                  description: AuthorizationToken is the authorization token used
                    to access private repositories in remote registry associated with
                    the operator source.
                  properties:
                    secretName:
                      description: SecretName is the name of the kubernetes Secret
                        object.
                      type: string
                  type: object
                displayName:
                  description: DisplayName is passed along to the CatalogSourceConfig
                    to be used by the resulting CatalogSource to be used as a pretty
                    name.
                  type: string
                endpoint:
                  description: Endpoint points to the remote app registry server from
                    where operator manifests can be fetched.
                  type: string
                publisher:
                  description: Publisher is passed along to the CatalogSourceConfig
                    to be used by the resulting CatalogSource that defines what entity
                    published the artifacts from the OperatorSource.
                  type: string
                registryNamespace:
                  description: RegistryNamespace refers to the namespace in app registry.
                    Only operator manifests under this namespace will be visible.
                    Please note that this is not a k8s namespace.
                  type: string
                type:
                  description: Type of operator source.
                  type: string
              required:
              - type
              - endpoint
              - registryNamespace
              type: object
            status:
              description: OperatorSourceStatus defines the observed state of OperatorSource
              properties:
                currentPhase:
                  description: Current phase of the OperatorSource object
                  properties:
                    lastTransitionTime:
                      description: Last time the object has transitioned from one
                        phase to another
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: Last time the status of the object was updated
                      format: date-time
                      type: string
                    phase:
                      description: Current phase of the object
                      properties:
                        message:
                          description: A human readable message indicating why the
                            object is in this phase
                          type: string
                        name:
                          description: Name of the phase
                          type: string
                      type: object
                  type: object
                packages:
                  description: Packages is a comma separated list of package(s) each
                    of which has been downloaded and processed by Marketplace operator
                    from the specified endpoint.
                  type: string
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: OperatorSource
      listKind: OperatorSourceList
      plural: operatorsources
      shortNames:
      - opsrc
      singular: operatorsource
    conditions:
    - lastTransitionTime: "2020-11-19T21:30:31Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-19T21:30:31Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T13:05:10Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:ownerReferences:
            .: {}
            k:{"uid":"629378f9-4b6d-445e-8764-cbfb5eda542e"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:containerid:
                      .: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
          f:storedVersions: {}
      manager: cluster-network-operator
      operation: Update
      time: "2021-01-13T04:16:17Z"
    name: overlappingrangeipreservations.whereabouts.cni.cncf.io
    ownerReferences:
    - apiVersion: operator.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Network
      name: cluster
      uid: 629378f9-4b6d-445e-8764-cbfb5eda542e
    resourceVersion: "36921678"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/overlappingrangeipreservations.whereabouts.cni.cncf.io
    uid: 807c0fdd-d21d-4545-92f2-7d53e00dcbab
  spec:
    conversion:
      strategy: None
    group: whereabouts.cni.cncf.io
    names:
      kind: OverlappingRangeIPReservation
      listKind: OverlappingRangeIPReservationList
      plural: overlappingrangeipreservations
      singular: overlappingrangeipreservation
    preserveUnknownFields: true
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: OverlappingRangeIPReservation is the Schema for the OverlappingRangeIPReservations
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: OverlappingRangeIPReservationSpec defines the desired state
                of OverlappingRangeIPReservation
              properties:
                containerid:
                  type: string
              required:
              - containerid
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: OverlappingRangeIPReservation
      listKind: OverlappingRangeIPReservationList
      plural: overlappingrangeipreservations
      singular: overlappingrangeipreservation
    conditions:
    - lastTransitionTime: "2020-11-18T13:05:10Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T13:05:10Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"default","app.kubernetes.io/part-of":"tekton-pipelines","pipeline.tekton.dev/release":"v0.18.1","version":"v0.18.1"},"name":"pipelineresources.tekton.dev"},"spec":{"group":"tekton.dev","names":{"categories":["tekton","tekton-pipelines"],"kind":"PipelineResource","plural":"pipelineresources"},"scope":"Namespaced","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"type":"object","x-kubernetes-preserve-unknown-fields":true}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
    creationTimestamp: "2020-12-01T17:28:10Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines
      pipeline.tekton.dev/release: v0.18.1
      version: v0.18.1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-12-01T17:28:10Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:pipeline.tekton.dev/release: {}
            f:version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: oc
      operation: Update
      time: "2020-12-01T17:28:10Z"
    name: pipelineresources.tekton.dev
    resourceVersion: "5635255"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/pipelineresources.tekton.dev
    uid: 22731f3b-e089-4e25-a18b-7ae973701400
  spec:
    conversion:
      strategy: None
    group: tekton.dev
    names:
      categories:
      - tekton
      - tekton-pipelines
      kind: PipelineResource
      listKind: PipelineResourceList
      plural: pipelineresources
      singular: pipelineresource
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-pipelines
      kind: PipelineResource
      listKind: PipelineResourceList
      plural: pipelineresources
      singular: pipelineresource
    conditions:
    - lastTransitionTime: "2020-12-01T17:28:10Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-12-01T17:28:10Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"default","app.kubernetes.io/part-of":"tekton-pipelines","pipeline.tekton.dev/release":"v0.18.1","version":"v0.18.1"},"name":"pipelineruns.tekton.dev"},"spec":{"conversion":{"strategy":"Webhook","webhook":{"clientConfig":{"service":{"name":"tekton-pipelines-webhook","namespace":"tekton-pipelines"}},"conversionReviewVersions":["v1beta1"]}},"group":"tekton.dev","names":{"categories":["tekton","tekton-pipelines"],"kind":"PipelineRun","plural":"pipelineruns","shortNames":["pr","prs"]},"preserveUnknownFields":false,"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".status.conditions[?(@.type==\"Succeeded\")].status","name":"Succeeded","type":"string"},{"jsonPath":".status.conditions[?(@.type==\"Succeeded\")].reason","name":"Reason","type":"string"},{"jsonPath":".status.startTime","name":"StartTime","type":"date"},{"jsonPath":".status.completionTime","name":"CompletionTime","type":"date"}],"name":"v1alpha1","schema":{"openAPIV3Schema":{"type":"object","x-kubernetes-preserve-unknown-fields":true}},"served":true,"storage":false,"subresources":{"status":{}}},{"additionalPrinterColumns":[{"jsonPath":".status.conditions[?(@.type==\"Succeeded\")].status","name":"Succeeded","type":"string"},{"jsonPath":".status.conditions[?(@.type==\"Succeeded\")].reason","name":"Reason","type":"string"},{"jsonPath":".status.startTime","name":"StartTime","type":"date"},{"jsonPath":".status.completionTime","name":"CompletionTime","type":"date"}],"name":"v1beta1","schema":{"openAPIV3Schema":{"type":"object","x-kubernetes-preserve-unknown-fields":true}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
    creationTimestamp: "2020-12-01T17:28:10Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines
      pipeline.tekton.dev/release: v0.18.1
      version: v0.18.1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-12-01T17:28:10Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:pipeline.tekton.dev/release: {}
            f:version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
            f:webhook:
              .: {}
              f:clientConfig:
                .: {}
                f:service:
                  .: {}
                  f:name: {}
                  f:namespace: {}
                  f:port: {}
              f:conversionReviewVersions: {}
          f:group: {}
          f:names:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: oc
      operation: Update
      time: "2020-12-01T17:28:10Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:conversion:
            f:webhook:
              f:clientConfig:
                f:caBundle: {}
                f:service:
                  f:path: {}
      manager: webhook
      operation: Update
      time: "2020-12-01T17:28:20Z"
    name: pipelineruns.tekton.dev
    resourceVersion: "5635432"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/pipelineruns.tekton.dev
    uid: 17704d59-279a-433e-8921-ba95c09e5188
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVTakNDQXpLZ0F3SUJBZ0lRQzJVdUlZK2lWem4zNlFCaFJJSENEREFOQmdrcWhraUc5dzBCQVFzRkFEQk8KTVJRd0VnWURWUVFLRXd0cmJtRjBhWFpsTG1SbGRqRTJNRFFHQTFVRUF4TXRkR1ZyZEc5dUxYQnBjR1ZzYVc1bApjeTEzWldKb2IyOXJMblJsYTNSdmJpMXdhWEJsYkdsdVpYTXVjM1pqTUI0WERUSXdNVEl3TVRFM01qZ3hPVm9YCkRUSXhNVEl3TVRFM01qZ3hPRm93VGpFVU1CSUdBMVVFQ2hNTGEyNWhkR2wyWlM1a1pYWXhOakEwQmdOVkJBTVQKTFhSbGEzUnZiaTF3YVhCbGJHbHVaWE10ZDJWaWFHOXZheTUwWld0MGIyNHRjR2x3Wld4cGJtVnpMbk4yWXpDQwpBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtlbDJTVXhOM2NGT1BnWUdVTExEdW1YCnQvL3RMWXhmY2h5ZWI3bGVvMmRWZWFRQUNUYXRoMFpnR0JQTFB1NlJ1WW8vTWdZUHUvaHJ6a3liRU9OcjhnLzYKRTJ6R0FhY2ZZcHlqaktzOWI3c2d3ME1CS2hwYmxpdnFHSHR2TVE0cGlUSjUwcUU1UUtiSVh0WkZzY3NlS1M2dQpJcE9lWW9oSER2V3Z5RDY0U01sVExsTHl6T0JZWTd3YlNYZER5clNUMjEvcmlFbndDaVlIcFZ1Q2VoY1RxdmNBCjFnUkxoSldGTFNZbGFUMGluQUNMbExFd2JLYmN0M0xPeU5lVW01SVF4Zm1XTlRYOUl4VnZoNXVYVG15clBLNy8KaEgwNDJyUXI0b21TbEMva1dTN3RzS0s2SzZHYlVsWUxhNW5pU09LQlkyQTAvNEtGUXJwcldTOVlSY2Y4ejkwQwpBd0VBQWFPQ0FTSXdnZ0VlTUE0R0ExVWREd0VCL3dRRUF3SUNoREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNECkFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVhaUJoczlmM2JwL0cKQ3dRYTJBdE0wRkJwRjlNd2did0dBMVVkRVFTQnREQ0JzWUlZZEdWcmRHOXVMWEJwY0dWc2FXNWxjeTEzWldKbwpiMjlyZ2lsMFpXdDBiMjR0Y0dsd1pXeHBibVZ6TFhkbFltaHZiMnN1ZEdWcmRHOXVMWEJwY0dWc2FXNWxjNEl0CmRHVnJkRzl1TFhCcGNHVnNhVzVsY3kxM1pXSm9iMjlyTG5SbGEzUnZiaTF3YVhCbGJHbHVaWE11YzNaamdqdDAKWld0MGIyNHRjR2x3Wld4cGJtVnpMWGRsWW1odmIyc3VkR1ZyZEc5dUxYQnBjR1ZzYVc1bGN5NXpkbU11WTJ4MQpjM1JsY2k1c2IyTmhiREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBTnZKNFh1M0V3Qm5FQ0xBYUZBVkVMRXRNClVoby9sQitLZzcveHF4OEdJeGNTY0VoVUJTYk1YM0xHaCtvT0p1ZmthenVRb2UxRDMvdDdrWVEyYStBY2graWQKTHgveEo5STdSeHJPMHRId2x2Y2RLaHRpalRxMVBhK3BXdkdKSlh1U0tQWnZaalVWL2Q0RnZSMVFYc2Y4UVRxcQptMGFsU2kzdUxEQ0puOXJwdURlWmNNVHAyVXRobFpWby9qUDFnbGRTclVyZkltKzNWaWlKbVBDdnY3NVJ1VklxCmZNcU56SXhHWkNQUjFGNnJKNUd3cno3ZmRUNFViYnU5eE8xUXk2ZE9KYzNhVXR4dWVsSEwxRGhic1k3aGNDYlgKRWV5d0svaEFwZktRV1VzaW1icXdnRVpvNkZBQml5ZFdHaWxVa3BncUwrY3pSQ1d4V1dlMXppYWdwY3dNVWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          service:
            name: tekton-pipelines-webhook
            namespace: tekton-pipelines
            path: /resource-conversion
            port: 443
        conversionReviewVersions:
        - v1beta1
    group: tekton.dev
    names:
      categories:
      - tekton
      - tekton-pipelines
      kind: PipelineRun
      listKind: PipelineRunList
      plural: pipelineruns
      shortNames:
      - pr
      - prs
      singular: pipelinerun
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Succeeded")].status
        name: Succeeded
        type: string
      - jsonPath: .status.conditions[?(@.type=="Succeeded")].reason
        name: Reason
        type: string
      - jsonPath: .status.startTime
        name: StartTime
        type: date
      - jsonPath: .status.completionTime
        name: CompletionTime
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Succeeded")].status
        name: Succeeded
        type: string
      - jsonPath: .status.conditions[?(@.type=="Succeeded")].reason
        name: Reason
        type: string
      - jsonPath: .status.startTime
        name: StartTime
        type: date
      - jsonPath: .status.completionTime
        name: CompletionTime
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-pipelines
      kind: PipelineRun
      listKind: PipelineRunList
      plural: pipelineruns
      shortNames:
      - pr
      - prs
      singular: pipelinerun
    conditions:
    - lastTransitionTime: "2020-12-01T17:28:10Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-12-01T17:28:10Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"default","app.kubernetes.io/part-of":"tekton-pipelines","pipeline.tekton.dev/release":"v0.18.1","version":"v0.18.1"},"name":"pipelines.tekton.dev"},"spec":{"conversion":{"strategy":"Webhook","webhook":{"clientConfig":{"service":{"name":"tekton-pipelines-webhook","namespace":"tekton-pipelines"}},"conversionReviewVersions":["v1beta1"]}},"group":"tekton.dev","names":{"categories":["tekton","tekton-pipelines"],"kind":"Pipeline","plural":"pipelines"},"preserveUnknownFields":false,"scope":"Namespaced","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"type":"object","x-kubernetes-preserve-unknown-fields":true}},"served":true,"storage":false,"subresources":{"status":{}}},{"name":"v1beta1","schema":{"openAPIV3Schema":{"type":"object","x-kubernetes-preserve-unknown-fields":true}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
    creationTimestamp: "2020-12-01T17:28:10Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines
      pipeline.tekton.dev/release: v0.18.1
      version: v0.18.1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-12-01T17:28:10Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:pipeline.tekton.dev/release: {}
            f:version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
            f:webhook:
              .: {}
              f:clientConfig:
                .: {}
                f:service:
                  .: {}
                  f:name: {}
                  f:namespace: {}
                  f:port: {}
              f:conversionReviewVersions: {}
          f:group: {}
          f:names:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: oc
      operation: Update
      time: "2020-12-01T17:28:10Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:conversion:
            f:webhook:
              f:clientConfig:
                f:caBundle: {}
                f:service:
                  f:path: {}
      manager: webhook
      operation: Update
      time: "2020-12-01T17:28:20Z"
    name: pipelines.tekton.dev
    resourceVersion: "5635431"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/pipelines.tekton.dev
    uid: ada45172-72fd-4c3b-a56c-ca9cee5d1ea9
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVTakNDQXpLZ0F3SUJBZ0lRQzJVdUlZK2lWem4zNlFCaFJJSENEREFOQmdrcWhraUc5dzBCQVFzRkFEQk8KTVJRd0VnWURWUVFLRXd0cmJtRjBhWFpsTG1SbGRqRTJNRFFHQTFVRUF4TXRkR1ZyZEc5dUxYQnBjR1ZzYVc1bApjeTEzWldKb2IyOXJMblJsYTNSdmJpMXdhWEJsYkdsdVpYTXVjM1pqTUI0WERUSXdNVEl3TVRFM01qZ3hPVm9YCkRUSXhNVEl3TVRFM01qZ3hPRm93VGpFVU1CSUdBMVVFQ2hNTGEyNWhkR2wyWlM1a1pYWXhOakEwQmdOVkJBTVQKTFhSbGEzUnZiaTF3YVhCbGJHbHVaWE10ZDJWaWFHOXZheTUwWld0MGIyNHRjR2x3Wld4cGJtVnpMbk4yWXpDQwpBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtlbDJTVXhOM2NGT1BnWUdVTExEdW1YCnQvL3RMWXhmY2h5ZWI3bGVvMmRWZWFRQUNUYXRoMFpnR0JQTFB1NlJ1WW8vTWdZUHUvaHJ6a3liRU9OcjhnLzYKRTJ6R0FhY2ZZcHlqaktzOWI3c2d3ME1CS2hwYmxpdnFHSHR2TVE0cGlUSjUwcUU1UUtiSVh0WkZzY3NlS1M2dQpJcE9lWW9oSER2V3Z5RDY0U01sVExsTHl6T0JZWTd3YlNYZER5clNUMjEvcmlFbndDaVlIcFZ1Q2VoY1RxdmNBCjFnUkxoSldGTFNZbGFUMGluQUNMbExFd2JLYmN0M0xPeU5lVW01SVF4Zm1XTlRYOUl4VnZoNXVYVG15clBLNy8KaEgwNDJyUXI0b21TbEMva1dTN3RzS0s2SzZHYlVsWUxhNW5pU09LQlkyQTAvNEtGUXJwcldTOVlSY2Y4ejkwQwpBd0VBQWFPQ0FTSXdnZ0VlTUE0R0ExVWREd0VCL3dRRUF3SUNoREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNECkFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVhaUJoczlmM2JwL0cKQ3dRYTJBdE0wRkJwRjlNd2did0dBMVVkRVFTQnREQ0JzWUlZZEdWcmRHOXVMWEJwY0dWc2FXNWxjeTEzWldKbwpiMjlyZ2lsMFpXdDBiMjR0Y0dsd1pXeHBibVZ6TFhkbFltaHZiMnN1ZEdWcmRHOXVMWEJwY0dWc2FXNWxjNEl0CmRHVnJkRzl1TFhCcGNHVnNhVzVsY3kxM1pXSm9iMjlyTG5SbGEzUnZiaTF3YVhCbGJHbHVaWE11YzNaamdqdDAKWld0MGIyNHRjR2x3Wld4cGJtVnpMWGRsWW1odmIyc3VkR1ZyZEc5dUxYQnBjR1ZzYVc1bGN5NXpkbU11WTJ4MQpjM1JsY2k1c2IyTmhiREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBTnZKNFh1M0V3Qm5FQ0xBYUZBVkVMRXRNClVoby9sQitLZzcveHF4OEdJeGNTY0VoVUJTYk1YM0xHaCtvT0p1ZmthenVRb2UxRDMvdDdrWVEyYStBY2graWQKTHgveEo5STdSeHJPMHRId2x2Y2RLaHRpalRxMVBhK3BXdkdKSlh1U0tQWnZaalVWL2Q0RnZSMVFYc2Y4UVRxcQptMGFsU2kzdUxEQ0puOXJwdURlWmNNVHAyVXRobFpWby9qUDFnbGRTclVyZkltKzNWaWlKbVBDdnY3NVJ1VklxCmZNcU56SXhHWkNQUjFGNnJKNUd3cno3ZmRUNFViYnU5eE8xUXk2ZE9KYzNhVXR4dWVsSEwxRGhic1k3aGNDYlgKRWV5d0svaEFwZktRV1VzaW1icXdnRVpvNkZBQml5ZFdHaWxVa3BncUwrY3pSQ1d4V1dlMXppYWdwY3dNVWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          service:
            name: tekton-pipelines-webhook
            namespace: tekton-pipelines
            path: /resource-conversion
            port: 443
        conversionReviewVersions:
        - v1beta1
    group: tekton.dev
    names:
      categories:
      - tekton
      - tekton-pipelines
      kind: Pipeline
      listKind: PipelineList
      plural: pipelines
      singular: pipeline
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: false
      subresources:
        status: {}
    - name: v1beta1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-pipelines
      kind: Pipeline
      listKind: PipelineList
      plural: pipelines
      singular: pipeline
    conditions:
    - lastTransitionTime: "2020-12-01T17:28:10Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-12-01T17:28:10Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: "2020-11-18T12:58:51Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:controller-gen.kubebuilder.io/version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:51Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
      manager: register.test
      operation: Update
      time: "2020-11-20T22:16:08Z"
    name: podmonitors.monitoring.coreos.com
    resourceVersion: "1040006"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/podmonitors.monitoring.coreos.com
    uid: d15f96d2-4eed-4a62-ab1a-d8ad3d0df209
  spec:
    conversion:
      strategy: None
    group: monitoring.coreos.com
    names:
      kind: PodMonitor
      listKind: PodMonitorList
      plural: podmonitors
      singular: podmonitor
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: PodMonitor defines monitoring for a set of pods.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of desired Pod selection for target discovery
                by Prometheus.
              properties:
                jobLabel:
                  description: The label to use to retrieve the job name from.
                  type: string
                namespaceSelector:
                  description: Selector to select which namespaces the Endpoints objects
                    are discovered from.
                  properties:
                    any:
                      description: Boolean describing whether all namespaces are selected
                        in contrast to a list restricting them.
                      type: boolean
                    matchNames:
                      description: List of namespace names.
                      items:
                        type: string
                      type: array
                  type: object
                podMetricsEndpoints:
                  description: A list of endpoints allowed as part of this PodMonitor.
                  items:
                    description: PodMetricsEndpoint defines a scrapeable endpoint
                      of a Kubernetes Pod serving Prometheus metrics.
                    properties:
                      honorLabels:
                        description: HonorLabels chooses the metric's labels on collisions
                          with target labels.
                        type: boolean
                      honorTimestamps:
                        description: HonorTimestamps controls whether Prometheus respects
                          the timestamps present in scraped data.
                        type: boolean
                      interval:
                        description: Interval at which metrics should be scraped
                        type: string
                      metricRelabelings:
                        description: MetricRelabelConfigs to apply to samples before
                          ingestion.
                        items:
                          description: 'RelabelConfig allows dynamic rewriting of
                            the label set, being applied to samples before ingestion.
                            It defines `<metric_relabel_configs>`-section of Prometheus
                            configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                          properties:
                            action:
                              description: Action to perform based on regex matching.
                                Default is 'replace'
                              type: string
                            modulus:
                              description: Modulus to take of the hash of the source
                                label values.
                              format: int64
                              type: integer
                            regex:
                              description: Regular expression against which the extracted
                                value is matched. Default is '(.*)'
                              type: string
                            replacement:
                              description: Replacement value against which a regex
                                replace is performed if the regular expression matches.
                                Regex capture groups are available. Default is '$1'
                              type: string
                            separator:
                              description: Separator placed between concatenated source
                                label values. default is ';'.
                              type: string
                            sourceLabels:
                              description: The source labels select values from existing
                                labels. Their content is concatenated using the configured
                                separator and matched against the configured regular
                                expression for the replace, keep, and drop actions.
                              items:
                                type: string
                              type: array
                            targetLabel:
                              description: Label to which the resulting value is written
                                in a replace action. It is mandatory for replace actions.
                                Regex capture groups are available.
                              type: string
                          type: object
                        type: array
                      params:
                        additionalProperties:
                          items:
                            type: string
                          type: array
                        description: Optional HTTP URL parameters
                        type: object
                      path:
                        description: HTTP path to scrape for metrics.
                        type: string
                      port:
                        description: Name of the pod port this endpoint refers to.
                          Mutually exclusive with targetPort.
                        type: string
                      proxyUrl:
                        description: ProxyURL eg http://proxyserver:2195 Directs scrapes
                          to proxy through this endpoint.
                        type: string
                      relabelings:
                        description: 'RelabelConfigs to apply to samples before ingestion.
                          More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
                        items:
                          description: 'RelabelConfig allows dynamic rewriting of
                            the label set, being applied to samples before ingestion.
                            It defines `<metric_relabel_configs>`-section of Prometheus
                            configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                          properties:
                            action:
                              description: Action to perform based on regex matching.
                                Default is 'replace'
                              type: string
                            modulus:
                              description: Modulus to take of the hash of the source
                                label values.
                              format: int64
                              type: integer
                            regex:
                              description: Regular expression against which the extracted
                                value is matched. Default is '(.*)'
                              type: string
                            replacement:
                              description: Replacement value against which a regex
                                replace is performed if the regular expression matches.
                                Regex capture groups are available. Default is '$1'
                              type: string
                            separator:
                              description: Separator placed between concatenated source
                                label values. default is ';'.
                              type: string
                            sourceLabels:
                              description: The source labels select values from existing
                                labels. Their content is concatenated using the configured
                                separator and matched against the configured regular
                                expression for the replace, keep, and drop actions.
                              items:
                                type: string
                              type: array
                            targetLabel:
                              description: Label to which the resulting value is written
                                in a replace action. It is mandatory for replace actions.
                                Regex capture groups are available.
                              type: string
                          type: object
                        type: array
                      scheme:
                        description: HTTP scheme to use for scraping.
                        type: string
                      scrapeTimeout:
                        description: Timeout after which the scrape is ended
                        type: string
                      targetPort:
                        anyOf:
                        - type: integer
                        - type: string
                        description: 'Deprecated: Use ''port'' instead.'
                        x-kubernetes-int-or-string: true
                    type: object
                  type: array
                podTargetLabels:
                  description: PodTargetLabels transfers labels on the Kubernetes
                    Pod onto the target.
                  items:
                    type: string
                  type: array
                sampleLimit:
                  description: SampleLimit defines per-scrape limit on number of scraped
                    samples that will be accepted.
                  format: int64
                  type: integer
                selector:
                  description: Selector to select Pod objects.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
              required:
              - podMetricsEndpoints
              - selector
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: PodMonitor
      listKind: PodMonitorList
      plural: podmonitors
      singular: podmonitor
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: "2020-11-18T12:58:54Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:controller-gen.kubebuilder.io/version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:54Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:54Z"
    name: probes.monitoring.coreos.com
    resourceVersion: "896"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/probes.monitoring.coreos.com
    uid: ff5e9eb4-6e13-4ebe-a1e3-8e230c8f9417
  spec:
    conversion:
      strategy: None
    group: monitoring.coreos.com
    names:
      kind: Probe
      listKind: ProbeList
      plural: probes
      singular: probe
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Probe defines monitoring for a set of static targets or ingresses.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of desired Ingress selection for target discovery
                by Prometheus.
              properties:
                interval:
                  description: Interval at which targets are probed using the configured
                    prober. If not specified Prometheus' global scrape interval is
                    used.
                  type: string
                jobName:
                  description: The job name assigned to scraped metrics by default.
                  type: string
                module:
                  description: 'The module to use for probing specifying how to probe
                    the target. Example module configuring in the blackbox exporter:
                    https://github.com/prometheus/blackbox_exporter/blob/master/example.yml'
                  type: string
                prober:
                  description: Specification for the prober to use for probing targets.
                    The prober.URL parameter is required. Targets cannot be probed
                    if left empty.
                  properties:
                    path:
                      description: Path to collect metrics from. Defaults to `/probe`.
                      type: string
                    scheme:
                      description: HTTP scheme to use for scraping. Defaults to `http`.
                      type: string
                    url:
                      description: Mandatory URL of the prober.
                      type: string
                  required:
                  - url
                  type: object
                scrapeTimeout:
                  description: Timeout for scraping metrics from the Prometheus exporter.
                  type: string
                targets:
                  description: Targets defines a set of static and/or dynamically
                    discovered targets to be probed using the prober.
                  properties:
                    ingress:
                      description: Ingress defines the set of dynamically discovered
                        ingress objects which hosts are considered for probing.
                      properties:
                        namespaceSelector:
                          description: Select Ingress objects by namespace.
                          properties:
                            any:
                              description: Boolean describing whether all namespaces
                                are selected in contrast to a list restricting them.
                              type: boolean
                            matchNames:
                              description: List of namespace names.
                              items:
                                type: string
                              type: array
                          type: object
                        relabelingConfigs:
                          description: 'RelabelConfigs to apply to samples before
                            ingestion. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
                          items:
                            description: 'RelabelConfig allows dynamic rewriting of
                              the label set, being applied to samples before ingestion.
                              It defines `<metric_relabel_configs>`-section of Prometheus
                              configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                            properties:
                              action:
                                description: Action to perform based on regex matching.
                                  Default is 'replace'
                                type: string
                              modulus:
                                description: Modulus to take of the hash of the source
                                  label values.
                                format: int64
                                type: integer
                              regex:
                                description: Regular expression against which the
                                  extracted value is matched. Default is '(.*)'
                                type: string
                              replacement:
                                description: Replacement value against which a regex
                                  replace is performed if the regular expression matches.
                                  Regex capture groups are available. Default is '$1'
                                type: string
                              separator:
                                description: Separator placed between concatenated
                                  source label values. default is ';'.
                                type: string
                              sourceLabels:
                                description: The source labels select values from
                                  existing labels. Their content is concatenated using
                                  the configured separator and matched against the
                                  configured regular expression for the replace, keep,
                                  and drop actions.
                                items:
                                  type: string
                                type: array
                              targetLabel:
                                description: Label to which the resulting value is
                                  written in a replace action. It is mandatory for
                                  replace actions. Regex capture groups are available.
                                type: string
                            type: object
                          type: array
                        selector:
                          description: Select Ingress objects by labels.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                      type: object
                    staticConfig:
                      description: 'StaticConfig defines static targets which are
                        considers for probing. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#static_config.'
                      properties:
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels assigned to all metrics scraped from
                            the targets.
                          type: object
                        static:
                          description: Targets is a list of URLs to probe using the
                            configured prober.
                          items:
                            type: string
                          type: array
                      type: object
                  type: object
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: Probe
      listKind: ProbeList
      plural: probes
      singular: probe
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:54Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:54Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T12:58:50Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:50Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:51Z"
    name: profiles.tuned.openshift.io
    resourceVersion: "792"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/profiles.tuned.openshift.io
    uid: 05644f59-4214-419b-b6d9-a2dd6e06272d
  spec:
    conversion:
      strategy: None
    group: tuned.openshift.io
    names:
      kind: Profile
      listKind: ProfileList
      plural: profiles
      singular: profile
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Profile is a specification for a Profile resource
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                config:
                  properties:
                    tunedProfile:
                      description: tuned profile to apply
                      type: string
                  required:
                  - tunedProfile
                  type: object
              required:
              - config
              type: object
            status:
              description: ProfileStatus is the status for a Profile resource; the
                status is for internal use only and its fields may be changed/removed
                in the future.
              properties:
                bootcmdline:
                  description: kernel parameters calculated by tuned for the active
                    tuned profile
                  type: string
                stalld:
                  description: 'deploy stall daemon: https://github.com/bristot/stalld/'
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: Profile
      listKind: ProfileList
      plural: profiles
      singular: profile
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:50Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:33Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:projectRequestMessage:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:projectRequestTemplate:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:name:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:33Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:33Z"
    name: projects.config.openshift.io
    resourceVersion: "351"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/projects.config.openshift.io
    uid: 6f35f451-18df-4998-84d1-901fbfd14f74
  spec:
    conversion:
      strategy: None
    group: config.openshift.io
    names:
      kind: Project
      listKind: ProjectList
      plural: projects
      singular: project
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Project holds cluster-wide information about Project.  The
            canonical name is `cluster`
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec holds user settable values for configuration
              properties:
                projectRequestMessage:
                  description: projectRequestMessage is the string presented to a
                    user if they are unable to request a project via the projectrequest
                    api endpoint
                  type: string
                projectRequestTemplate:
                  description: projectRequestTemplate is the template to use for creating
                    projects in response to projectrequest. This must point to a template
                    in 'openshift-config' namespace. It is optional. If it is not
                    specified, a default template is used.
                  properties:
                    name:
                      description: name is the metadata.name of the referenced project
                        request template
                      type: string
                  type: object
              type: object
            status:
              description: status holds observed values from the cluster. They may
                not be overridden.
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Project
      listKind: ProjectList
      plural: projects
      singular: project
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:33Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:33Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: "2020-11-18T12:58:55Z"
    generation: 59
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
      manager: register.test
      operation: Update
      time: "2020-11-20T22:16:09Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:controller-gen.kubebuilder.io/version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-20T22:18:50Z"
    name: prometheuses.monitoring.coreos.com
    resourceVersion: "1040772"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/prometheuses.monitoring.coreos.com
    uid: 72a1ca78-9d7b-4f65-ad32-9d70682adc23
  spec:
    conversion:
      strategy: None
    group: monitoring.coreos.com
    names:
      kind: Prometheus
      listKind: PrometheusList
      plural: prometheuses
      singular: prometheus
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: The version of Prometheus
        jsonPath: .spec.version
        name: Version
        type: string
      - description: The desired replicas number of Prometheuses
        jsonPath: .spec.replicas
        name: Replicas
        type: integer
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: Prometheus defines a Prometheus deployment.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: 'Specification of the desired behavior of the Prometheus
                cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
              properties:
                additionalAlertManagerConfigs:
                  description: 'AdditionalAlertManagerConfigs allows specifying a
                    key of a Secret containing additional Prometheus AlertManager
                    configurations. AlertManager configurations specified are appended
                    to the configurations generated by the Prometheus Operator. Job
                    configurations specified must have the form as specified in the
                    official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alertmanager_config.
                    As AlertManager configs are appended, the user is responsible
                    to make sure it is valid. Note that using this feature may expose
                    the possibility to break upgrades of Prometheus. It is advised
                    to review Prometheus release notes to ensure that no incompatible
                    AlertManager configs are going to break Prometheus after the upgrade.'
                  properties:
                    key:
                      description: The key of the secret to select from.  Must be
                        a valid secret key.
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                    optional:
                      description: Specify whether the Secret or its key must be defined
                      type: boolean
                  required:
                  - key
                  type: object
                additionalAlertRelabelConfigs:
                  description: 'AdditionalAlertRelabelConfigs allows specifying a
                    key of a Secret containing additional Prometheus alert relabel
                    configurations. Alert relabel configurations specified are appended
                    to the configurations generated by the Prometheus Operator. Alert
                    relabel configurations specified must have the form as specified
                    in the official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alert_relabel_configs.
                    As alert relabel configs are appended, the user is responsible
                    to make sure it is valid. Note that using this feature may expose
                    the possibility to break upgrades of Prometheus. It is advised
                    to review Prometheus release notes to ensure that no incompatible
                    alert relabel configs are going to break Prometheus after the
                    upgrade.'
                  properties:
                    key:
                      description: The key of the secret to select from.  Must be
                        a valid secret key.
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                    optional:
                      description: Specify whether the Secret or its key must be defined
                      type: boolean
                  required:
                  - key
                  type: object
                additionalScrapeConfigs:
                  description: 'AdditionalScrapeConfigs allows specifying a key of
                    a Secret containing additional Prometheus scrape configurations.
                    Scrape configurations specified are appended to the configurations
                    generated by the Prometheus Operator. Job configurations specified
                    must have the form as specified in the official Prometheus documentation:
                    https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config.
                    As scrape configs are appended, the user is responsible to make
                    sure it is valid. Note that using this feature may expose the
                    possibility to break upgrades of Prometheus. It is advised to
                    review Prometheus release notes to ensure that no incompatible
                    scrape configs are going to break Prometheus after the upgrade.'
                  properties:
                    key:
                      description: The key of the secret to select from.  Must be
                        a valid secret key.
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                    optional:
                      description: Specify whether the Secret or its key must be defined
                      type: boolean
                  required:
                  - key
                  type: object
                affinity:
                  description: If specified, the pod's scheduling constraints.
                  properties:
                    nodeAffinity:
                      description: Describes node affinity scheduling rules for the
                        pod.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            matches the corresponding matchExpressions; the node(s)
                            with the highest sum are the most preferred.
                          items:
                            description: An empty preferred scheduling term matches
                              all objects with implicit weight 0 (i.e. it's a no-op).
                              A null preferred scheduling term matches no objects
                              (i.e. is also a no-op).
                            properties:
                              preference:
                                description: A node selector term, associated with
                                  the corresponding weight.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              weight:
                                description: Weight associated with matching the corresponding
                                  nodeSelectorTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - preference
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by this
                            field are not met at scheduling time, the pod will not
                            be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to an update), the system
                            may or may not try to eventually evict the pod from its
                            node.
                          properties:
                            nodeSelectorTerms:
                              description: Required. A list of node selector terms.
                                The terms are ORed.
                              items:
                                description: A null or empty node selector term matches
                                  no objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a subset
                                  of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              type: array
                          required:
                          - nodeSelectorTerms
                          type: object
                      type: object
                    podAffinity:
                      description: Describes pod affinity scheduling rules (e.g. co-locate
                        this pod in the same node, zone, etc. as some other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            has pods which matches the corresponding podAffinityTerm;
                            the node(s) with the highest sum are the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Required. A pod affinity term, associated
                                  with the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - podAffinityTerm
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by this
                            field are not met at scheduling time, the pod will not
                            be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to a pod label update),
                            the system may or may not try to eventually evict the
                            pod from its node. When there are multiple elements, the
                            lists of nodes corresponding to each podAffinityTerm are
                            intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label query over a set of resources,
                                  in this case pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      description: Describes pod anti-affinity scheduling rules (e.g.
                        avoid putting this pod in the same node, zone, etc. as some
                        other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the anti-affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling anti-affinity
                            expressions, etc.), compute a sum by iterating through
                            the elements of this field and adding "weight" to the
                            sum if the node has pods which matches the corresponding
                            podAffinityTerm; the node(s) with the highest sum are
                            the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Required. A pod affinity term, associated
                                  with the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - podAffinityTerm
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the anti-affinity requirements specified
                            by this field are not met at scheduling time, the pod
                            will not be scheduled onto the node. If the anti-affinity
                            requirements specified by this field cease to be met at
                            some point during pod execution (e.g. due to a pod label
                            update), the system may or may not try to eventually evict
                            the pod from its node. When there are multiple elements,
                            the lists of nodes corresponding to each podAffinityTerm
                            are intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label query over a set of resources,
                                  in this case pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                  type: object
                alerting:
                  description: Define details regarding alerting.
                  properties:
                    alertmanagers:
                      description: AlertmanagerEndpoints Prometheus should fire alerts
                        against.
                      items:
                        description: AlertmanagerEndpoints defines a selection of
                          a single Endpoints object containing alertmanager IPs to
                          fire alerts against.
                        properties:
                          apiVersion:
                            description: Version of the Alertmanager API that Prometheus
                              uses to send alerts. It can be "v1" or "v2".
                            type: string
                          bearerTokenFile:
                            description: BearerTokenFile to read from filesystem to
                              use when authenticating to Alertmanager.
                            type: string
                          name:
                            description: Name of Endpoints object in Namespace.
                            type: string
                          namespace:
                            description: Namespace of Endpoints object.
                            type: string
                          pathPrefix:
                            description: Prefix for the HTTP path alerts are pushed
                              to.
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Port the Alertmanager API is exposed on.
                            x-kubernetes-int-or-string: true
                          scheme:
                            description: Scheme to use when firing alerts.
                            type: string
                          timeout:
                            description: Timeout is a per-target Alertmanager timeout
                              when pushing alerts.
                            type: string
                          tlsConfig:
                            description: TLS Config to use for alertmanager connection.
                            properties:
                              ca:
                                description: Stuct containing the CA cert to use for
                                  the targets.
                                properties:
                                  configMap:
                                    description: ConfigMap containing data to use
                                      for the targets.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  secret:
                                    description: Secret containing data to use for
                                      the targets.
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                              caFile:
                                description: Path to the CA cert in the Prometheus
                                  container to use for the targets.
                                type: string
                              cert:
                                description: Struct containing the client cert file
                                  for the targets.
                                properties:
                                  configMap:
                                    description: ConfigMap containing data to use
                                      for the targets.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  secret:
                                    description: Secret containing data to use for
                                      the targets.
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                              certFile:
                                description: Path to the client cert file in the Prometheus
                                  container for the targets.
                                type: string
                              insecureSkipVerify:
                                description: Disable target certificate validation.
                                type: boolean
                              keyFile:
                                description: Path to the client key file in the Prometheus
                                  container for the targets.
                                type: string
                              keySecret:
                                description: Secret containing the client key file
                                  for the targets.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              serverName:
                                description: Used to verify the hostname for the targets.
                                type: string
                            type: object
                        required:
                        - name
                        - namespace
                        - port
                        type: object
                      type: array
                  required:
                  - alertmanagers
                  type: object
                allowOverlappingBlocks:
                  description: AllowOverlappingBlocks enables vertical compaction
                    and vertical query merge in Prometheus. This is still experimental
                    in Prometheus so it may change in any upcoming release.
                  type: boolean
                apiserverConfig:
                  description: APIServerConfig allows specifying a host and auth methods
                    to access apiserver. If left empty, Prometheus is assumed to run
                    inside of the cluster and will discover API servers automatically
                    and use the pod's CA certificate and bearer token file at /var/run/secrets/kubernetes.io/serviceaccount/.
                  properties:
                    basicAuth:
                      description: BasicAuth allow an endpoint to authenticate over
                        basic authentication
                      properties:
                        password:
                          description: The secret in the service monitor namespace
                            that contains the password for authentication.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        username:
                          description: The secret in the service monitor namespace
                            that contains the username for authentication.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    bearerToken:
                      description: Bearer token for accessing apiserver.
                      type: string
                    bearerTokenFile:
                      description: File to read bearer token for accessing apiserver.
                      type: string
                    host:
                      description: Host of apiserver. A valid string consisting of
                        a hostname or IP followed by an optional port number
                      type: string
                    tlsConfig:
                      description: TLS Config to use for accessing apiserver.
                      properties:
                        ca:
                          description: Stuct containing the CA cert to use for the
                            targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        caFile:
                          description: Path to the CA cert in the Prometheus container
                            to use for the targets.
                          type: string
                        cert:
                          description: Struct containing the client cert file for
                            the targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        certFile:
                          description: Path to the client cert file in the Prometheus
                            container for the targets.
                          type: string
                        insecureSkipVerify:
                          description: Disable target certificate validation.
                          type: boolean
                        keyFile:
                          description: Path to the client key file in the Prometheus
                            container for the targets.
                          type: string
                        keySecret:
                          description: Secret containing the client key file for the
                            targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        serverName:
                          description: Used to verify the hostname for the targets.
                          type: string
                      type: object
                  required:
                  - host
                  type: object
                arbitraryFSAccessThroughSMs:
                  description: ArbitraryFSAccessThroughSMs configures whether configuration
                    based on a service monitor can access arbitrary files on the file
                    system of the Prometheus container e.g. bearer token files.
                  properties:
                    deny:
                      type: boolean
                  type: object
                baseImage:
                  description: 'Base image to use for a Prometheus deployment. Deprecated:
                    use ''image'' instead'
                  type: string
                configMaps:
                  description: ConfigMaps is a list of ConfigMaps in the same namespace
                    as the Prometheus object, which shall be mounted into the Prometheus
                    Pods. The ConfigMaps are mounted into /etc/prometheus/configmaps/<configmap-name>.
                  items:
                    type: string
                  type: array
                containers:
                  description: 'Containers allows injecting additional containers
                    or modifying operator generated containers. This can be used to
                    allow adding an authentication proxy to a Prometheus pod or to
                    change the behavior of an operator generated container. Containers
                    described here modify an operator generated container if they
                    share the same name and modifications are done via a strategic
                    merge patch. The current container names are: `prometheus`, `prometheus-config-reloader`,
                    `rules-configmap-reloader`, and `thanos-sidecar`. Overriding containers
                    is entirely outside the scope of what the maintainers will support
                    and by doing so, you accept that this behaviour may break at any
                    time without notice.'
                  items:
                    description: A single application container that you want to run
                      within a pod.
                    properties:
                      args:
                        description: 'Arguments to the entrypoint. The docker image''s
                          CMD is used if this is not provided. Variable references
                          $(VAR_NAME) are expanded using the container''s environment.
                          If a variable cannot be resolved, the reference in the input
                          string will be unchanged. The $(VAR_NAME) syntax can be
                          escaped with a double $$, ie: $$(VAR_NAME). Escaped references
                          will never be expanded, regardless of whether the variable
                          exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        items:
                          type: string
                        type: array
                      command:
                        description: 'Entrypoint array. Not executed within a shell.
                          The docker image''s ENTRYPOINT is used if this is not provided.
                          Variable references $(VAR_NAME) are expanded using the container''s
                          environment. If a variable cannot be resolved, the reference
                          in the input string will be unchanged. The $(VAR_NAME) syntax
                          can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
                          references will never be expanded, regardless of whether
                          the variable exists or not. Cannot be updated. More info:
                          https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        items:
                          type: string
                        type: array
                      env:
                        description: List of environment variables to set in the container.
                          Cannot be updated.
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previous defined environment variables in
                                the container and any service environment variables.
                                If a variable cannot be resolved, the reference in
                                the input string will be unchanged. The $(VAR_NAME)
                                syntax can be escaped with a double $$, ie: $$(VAR_NAME).
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to
                                "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, metadata.labels,
                                    metadata.annotations, spec.nodeName, spec.serviceAccountName,
                                    status.hostIP, status.podIP, status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      type: string
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      envFrom:
                        description: List of sources to populate environment variables
                          in the container. The keys defined within a source must
                          be a C_IDENTIFIER. All invalid keys will be reported as
                          an event when the container is starting. When a key exists
                          in multiple sources, the value associated with the last
                          source will take precedence. Values defined by an Env with
                          a duplicate key will take precedence. Cannot be updated.
                        items:
                          description: EnvFromSource represents the source of a set
                            of ConfigMaps
                          properties:
                            configMapRef:
                              description: The ConfigMap to select from
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap must
                                    be defined
                                  type: boolean
                              type: object
                            prefix:
                              description: An optional identifier to prepend to each
                                key in the ConfigMap. Must be a C_IDENTIFIER.
                              type: string
                            secretRef:
                              description: The Secret to select from
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret must be
                                    defined
                                  type: boolean
                              type: object
                          type: object
                        type: array
                      image:
                        description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                          This field is optional to allow higher level config management
                          to default or override container images in workload controllers
                          like Deployments and StatefulSets.'
                        type: string
                      imagePullPolicy:
                        description: 'Image pull policy. One of Always, Never, IfNotPresent.
                          Defaults to Always if :latest tag is specified, or IfNotPresent
                          otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                        type: string
                      lifecycle:
                        description: Actions that the management system should take
                          in response to container lifecycle events. Cannot be updated.
                        properties:
                          postStart:
                            description: 'PostStart is called immediately after a
                              container is created. If the handler fails, the container
                              is terminated and restarted according to its restart
                              policy. Other management of the container blocks until
                              the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                            type: object
                          preStop:
                            description: 'PreStop is called immediately before a container
                              is terminated due to an API request or management event
                              such as liveness/startup probe failure, preemption,
                              resource contention, etc. The handler is not called
                              if the container crashes or exits. The reason for termination
                              is passed to the handler. The Pod''s termination grace
                              period countdown begins before the PreStop hooked is
                              executed. Regardless of the outcome of the handler,
                              the container will eventually terminate within the Pod''s
                              termination grace period. Other management of the container
                              blocks until the hook completes or until the termination
                              grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                            type: object
                        type: object
                      livenessProbe:
                        description: 'Periodic probe of container liveness. Container
                          will be restarted if the probe fails. Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      name:
                        description: Name of the container specified as a DNS_LABEL.
                          Each container in a pod must have a unique name (DNS_LABEL).
                          Cannot be updated.
                        type: string
                      ports:
                        description: List of ports to expose from the container. Exposing
                          a port here gives the system additional information about
                          the network connections a container uses, but is primarily
                          informational. Not specifying a port here DOES NOT prevent
                          that port from being exposed. Any port which is listening
                          on the default "0.0.0.0" address inside a container will
                          be accessible from the network. Cannot be updated.
                        items:
                          description: ContainerPort represents a network port in
                            a single container.
                          properties:
                            containerPort:
                              description: Number of port to expose on the pod's IP
                                address. This must be a valid port number, 0 < x <
                                65536.
                              format: int32
                              type: integer
                            hostIP:
                              description: What host IP to bind the external port
                                to.
                              type: string
                            hostPort:
                              description: Number of port to expose on the host. If
                                specified, this must be a valid port number, 0 < x
                                < 65536. If HostNetwork is specified, this must match
                                ContainerPort. Most containers do not need this.
                              format: int32
                              type: integer
                            name:
                              description: If specified, this must be an IANA_SVC_NAME
                                and unique within the pod. Each named port in a pod
                                must have a unique name. Name for the port that can
                                be referred to by services.
                              type: string
                            protocol:
                              description: Protocol for port. Must be UDP, TCP, or
                                SCTP. Defaults to "TCP".
                              type: string
                          required:
                          - containerPort
                          type: object
                        type: array
                      readinessProbe:
                        description: 'Periodic probe of container service readiness.
                          Container will be removed from service endpoints if the
                          probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      resources:
                        description: 'Compute Resources required by this container.
                          Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        properties:
                          limits:
                            additionalProperties:
                              type: string
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                          requests:
                            additionalProperties:
                              type: string
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                        type: object
                      securityContext:
                        description: 'Security options the pod should run with. More
                          info: https://kubernetes.io/docs/concepts/policy/security-context/
                          More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                        properties:
                          allowPrivilegeEscalation:
                            description: 'AllowPrivilegeEscalation controls whether
                              a process can gain more privileges than its parent process.
                              This bool directly controls if the no_new_privs flag
                              will be set on the container process. AllowPrivilegeEscalation
                              is true always when the container is: 1) run as Privileged
                              2) has CAP_SYS_ADMIN'
                            type: boolean
                          capabilities:
                            description: The capabilities to add/drop when running
                              containers. Defaults to the default set of capabilities
                              granted by the container runtime.
                            properties:
                              add:
                                description: Added capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                              drop:
                                description: Removed capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                            type: object
                          privileged:
                            description: Run container in privileged mode. Processes
                              in privileged containers are essentially equivalent
                              to root on the host. Defaults to false.
                            type: boolean
                          procMount:
                            description: procMount denotes the type of proc mount
                              to use for the containers. The default is DefaultProcMount
                              which uses the container runtime defaults for readonly
                              paths and masked paths. This requires the ProcMountType
                              feature flag to be enabled.
                            type: string
                          readOnlyRootFilesystem:
                            description: Whether this container has a read-only root
                              filesystem. Default is false.
                            type: boolean
                          runAsGroup:
                            description: The GID to run the entrypoint of the container
                              process. Uses runtime default if unset. May also be
                              set in PodSecurityContext.  If set in both SecurityContext
                              and PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            format: int64
                            type: integer
                          runAsNonRoot:
                            description: Indicates that the container must run as
                              a non-root user. If true, the Kubelet will validate
                              the image at runtime to ensure that it does not run
                              as UID 0 (root) and fail to start the container if it
                              does. If unset or false, no such validation will be
                              performed. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: The UID to run the entrypoint of the container
                              process. Defaults to user specified in image metadata
                              if unspecified. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence.
                            format: int64
                            type: integer
                          seLinuxOptions:
                            description: The SELinux context to be applied to the
                              container. If unspecified, the container runtime will
                              allocate a random SELinux context for each container.  May
                              also be set in PodSecurityContext.  If set in both SecurityContext
                              and PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          windowsOptions:
                            description: The Windows specific settings applied to
                              all containers. If unspecified, the options from the
                              PodSecurityContext will be used. If set in both SecurityContext
                              and PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            properties:
                              gmsaCredentialSpec:
                                description: GMSACredentialSpec is where the GMSA
                                  admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                  inlines the contents of the GMSA credential spec
                                  named by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of
                                  the GMSA credential spec to use.
                                type: string
                              runAsUserName:
                                description: The UserName in Windows to run the entrypoint
                                  of the container process. Defaults to the user specified
                                  in image metadata if unspecified. May also be set
                                  in PodSecurityContext. If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                type: string
                            type: object
                        type: object
                      startupProbe:
                        description: 'StartupProbe indicates that the Pod has successfully
                          initialized. If specified, no other probes are executed
                          until this completes successfully. If this probe fails,
                          the Pod will be restarted, just as if the livenessProbe
                          failed. This can be used to provide different probe parameters
                          at the beginning of a Pod''s lifecycle, when it might take
                          a long time to load data or warm a cache, than during steady-state
                          operation. This cannot be updated. This is a beta feature
                          enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      stdin:
                        description: Whether this container should allocate a buffer
                          for stdin in the container runtime. If this is not set,
                          reads from stdin in the container will always result in
                          EOF. Default is false.
                        type: boolean
                      stdinOnce:
                        description: Whether the container runtime should close the
                          stdin channel after it has been opened by a single attach.
                          When stdin is true the stdin stream will remain open across
                          multiple attach sessions. If stdinOnce is set to true, stdin
                          is opened on container start, is empty until the first client
                          attaches to stdin, and then remains open and accepts data
                          until the client disconnects, at which time stdin is closed
                          and remains closed until the container is restarted. If
                          this flag is false, a container processes that reads from
                          stdin will never receive an EOF. Default is false
                        type: boolean
                      terminationMessagePath:
                        description: 'Optional: Path at which the file to which the
                          container''s termination message will be written is mounted
                          into the container''s filesystem. Message written is intended
                          to be brief final status, such as an assertion failure message.
                          Will be truncated by the node if greater than 4096 bytes.
                          The total message length across all containers will be limited
                          to 12kb. Defaults to /dev/termination-log. Cannot be updated.'
                        type: string
                      terminationMessagePolicy:
                        description: Indicate how the termination message should be
                          populated. File will use the contents of terminationMessagePath
                          to populate the container status message on both success
                          and failure. FallbackToLogsOnError will use the last chunk
                          of container log output if the termination message file
                          is empty and the container exited with an error. The log
                          output is limited to 2048 bytes or 80 lines, whichever is
                          smaller. Defaults to File. Cannot be updated.
                        type: string
                      tty:
                        description: Whether this container should allocate a TTY
                          for itself, also requires 'stdin' to be true. Default is
                          false.
                        type: boolean
                      volumeDevices:
                        description: volumeDevices is the list of block devices to
                          be used by the container.
                        items:
                          description: volumeDevice describes a mapping of a raw block
                            device within a container.
                          properties:
                            devicePath:
                              description: devicePath is the path inside of the container
                                that the device will be mapped to.
                              type: string
                            name:
                              description: name must match the name of a persistentVolumeClaim
                                in the pod
                              type: string
                          required:
                          - devicePath
                          - name
                          type: object
                        type: array
                      volumeMounts:
                        description: Pod volumes to mount into the container's filesystem.
                          Cannot be updated.
                        items:
                          description: VolumeMount describes a mounting of a Volume
                            within a container.
                          properties:
                            mountPath:
                              description: Path within the container at which the
                                volume should be mounted.  Must not contain ':'.
                              type: string
                            mountPropagation:
                              description: mountPropagation determines how mounts
                                are propagated from the host to container and the
                                other way around. When not set, MountPropagationNone
                                is used. This field is beta in 1.10.
                              type: string
                            name:
                              description: This must match the Name of a Volume.
                              type: string
                            readOnly:
                              description: Mounted read-only if true, read-write otherwise
                                (false or unspecified). Defaults to false.
                              type: boolean
                            subPath:
                              description: Path within the volume from which the container's
                                volume should be mounted. Defaults to "" (volume's
                                root).
                              type: string
                            subPathExpr:
                              description: Expanded path within the volume from which
                                the container's volume should be mounted. Behaves
                                similarly to SubPath but environment variable references
                                $(VAR_NAME) are expanded using the container's environment.
                                Defaults to "" (volume's root). SubPathExpr and SubPath
                                are mutually exclusive.
                              type: string
                          required:
                          - mountPath
                          - name
                          type: object
                        type: array
                      workingDir:
                        description: Container's working directory. If not specified,
                          the container runtime's default will be used, which might
                          be configured in the container image. Cannot be updated.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                disableCompaction:
                  description: Disable prometheus compaction.
                  type: boolean
                enableAdminAPI:
                  description: 'Enable access to prometheus web admin API. Defaults
                    to the value of `false`. WARNING: Enabling the admin APIs enables
                    mutating endpoints, to delete data, shutdown Prometheus, and more.
                    Enabling this should be done with care and the user is advised
                    to add additional authentication authorization via a proxy to
                    ensure only clients authorized to perform these actions can do
                    so. For more information see https://prometheus.io/docs/prometheus/latest/querying/api/#tsdb-admin-apis'
                  type: boolean
                enforcedNamespaceLabel:
                  description: EnforcedNamespaceLabel enforces adding a namespace
                    label of origin for each alert and metric that is user created.
                    The label value will always be the namespace of the object that
                    is being created.
                  type: string
                enforcedSampleLimit:
                  description: EnforcedSampleLimit defines global limit on number
                    of scraped samples that will be accepted. This overrides any SampleLimit
                    set per ServiceMonitor or/and PodMonitor. It is meant to be used
                    by admins to enforce the SampleLimit to keep overall number of
                    samples/series under the desired limit. Note that if SampleLimit
                    is lower that value will be taken instead.
                  format: int64
                  type: integer
                evaluationInterval:
                  description: Interval between consecutive evaluations.
                  type: string
                externalLabels:
                  additionalProperties:
                    type: string
                  description: The labels to add to any time series or alerts when
                    communicating with external systems (federation, remote storage,
                    Alertmanager).
                  type: object
                externalUrl:
                  description: The external URL the Prometheus instances will be available
                    under. This is necessary to generate correct URLs. This is necessary
                    if Prometheus is not served from root of a DNS name.
                  type: string
                ignoreNamespaceSelectors:
                  description: IgnoreNamespaceSelectors if set to true will ignore
                    NamespaceSelector settings from the podmonitor and servicemonitor
                    configs, and they will only discover endpoints within their current
                    namespace.  Defaults to false.
                  type: boolean
                image:
                  description: Image if specified has precedence over baseImage, tag
                    and sha combinations. Specifying the version is still necessary
                    to ensure the Prometheus Operator knows what version of Prometheus
                    is being configured.
                  type: string
                imagePullSecrets:
                  description: An optional list of references to secrets in the same
                    namespace to use for pulling prometheus and alertmanager images
                    from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
                  items:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  type: array
                initContainers:
                  description: 'InitContainers allows adding initContainers to the
                    pod definition. Those can be used to e.g. fetch secrets for injection
                    into the Prometheus configuration from external sources. Any errors
                    during the execution of an initContainer will lead to a restart
                    of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                    Using initContainers for any use case other then secret fetching
                    is entirely outside the scope of what the maintainers will support
                    and by doing so, you accept that this behaviour may break at any
                    time without notice.'
                  items:
                    description: A single application container that you want to run
                      within a pod.
                    properties:
                      args:
                        description: 'Arguments to the entrypoint. The docker image''s
                          CMD is used if this is not provided. Variable references
                          $(VAR_NAME) are expanded using the container''s environment.
                          If a variable cannot be resolved, the reference in the input
                          string will be unchanged. The $(VAR_NAME) syntax can be
                          escaped with a double $$, ie: $$(VAR_NAME). Escaped references
                          will never be expanded, regardless of whether the variable
                          exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        items:
                          type: string
                        type: array
                      command:
                        description: 'Entrypoint array. Not executed within a shell.
                          The docker image''s ENTRYPOINT is used if this is not provided.
                          Variable references $(VAR_NAME) are expanded using the container''s
                          environment. If a variable cannot be resolved, the reference
                          in the input string will be unchanged. The $(VAR_NAME) syntax
                          can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
                          references will never be expanded, regardless of whether
                          the variable exists or not. Cannot be updated. More info:
                          https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        items:
                          type: string
                        type: array
                      env:
                        description: List of environment variables to set in the container.
                          Cannot be updated.
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previous defined environment variables in
                                the container and any service environment variables.
                                If a variable cannot be resolved, the reference in
                                the input string will be unchanged. The $(VAR_NAME)
                                syntax can be escaped with a double $$, ie: $$(VAR_NAME).
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to
                                "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, metadata.labels,
                                    metadata.annotations, spec.nodeName, spec.serviceAccountName,
                                    status.hostIP, status.podIP, status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      type: string
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      envFrom:
                        description: List of sources to populate environment variables
                          in the container. The keys defined within a source must
                          be a C_IDENTIFIER. All invalid keys will be reported as
                          an event when the container is starting. When a key exists
                          in multiple sources, the value associated with the last
                          source will take precedence. Values defined by an Env with
                          a duplicate key will take precedence. Cannot be updated.
                        items:
                          description: EnvFromSource represents the source of a set
                            of ConfigMaps
                          properties:
                            configMapRef:
                              description: The ConfigMap to select from
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap must
                                    be defined
                                  type: boolean
                              type: object
                            prefix:
                              description: An optional identifier to prepend to each
                                key in the ConfigMap. Must be a C_IDENTIFIER.
                              type: string
                            secretRef:
                              description: The Secret to select from
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret must be
                                    defined
                                  type: boolean
                              type: object
                          type: object
                        type: array
                      image:
                        description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                          This field is optional to allow higher level config management
                          to default or override container images in workload controllers
                          like Deployments and StatefulSets.'
                        type: string
                      imagePullPolicy:
                        description: 'Image pull policy. One of Always, Never, IfNotPresent.
                          Defaults to Always if :latest tag is specified, or IfNotPresent
                          otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                        type: string
                      lifecycle:
                        description: Actions that the management system should take
                          in response to container lifecycle events. Cannot be updated.
                        properties:
                          postStart:
                            description: 'PostStart is called immediately after a
                              container is created. If the handler fails, the container
                              is terminated and restarted according to its restart
                              policy. Other management of the container blocks until
                              the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                            type: object
                          preStop:
                            description: 'PreStop is called immediately before a container
                              is terminated due to an API request or management event
                              such as liveness/startup probe failure, preemption,
                              resource contention, etc. The handler is not called
                              if the container crashes or exits. The reason for termination
                              is passed to the handler. The Pod''s termination grace
                              period countdown begins before the PreStop hooked is
                              executed. Regardless of the outcome of the handler,
                              the container will eventually terminate within the Pod''s
                              termination grace period. Other management of the container
                              blocks until the hook completes or until the termination
                              grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                            type: object
                        type: object
                      livenessProbe:
                        description: 'Periodic probe of container liveness. Container
                          will be restarted if the probe fails. Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      name:
                        description: Name of the container specified as a DNS_LABEL.
                          Each container in a pod must have a unique name (DNS_LABEL).
                          Cannot be updated.
                        type: string
                      ports:
                        description: List of ports to expose from the container. Exposing
                          a port here gives the system additional information about
                          the network connections a container uses, but is primarily
                          informational. Not specifying a port here DOES NOT prevent
                          that port from being exposed. Any port which is listening
                          on the default "0.0.0.0" address inside a container will
                          be accessible from the network. Cannot be updated.
                        items:
                          description: ContainerPort represents a network port in
                            a single container.
                          properties:
                            containerPort:
                              description: Number of port to expose on the pod's IP
                                address. This must be a valid port number, 0 < x <
                                65536.
                              format: int32
                              type: integer
                            hostIP:
                              description: What host IP to bind the external port
                                to.
                              type: string
                            hostPort:
                              description: Number of port to expose on the host. If
                                specified, this must be a valid port number, 0 < x
                                < 65536. If HostNetwork is specified, this must match
                                ContainerPort. Most containers do not need this.
                              format: int32
                              type: integer
                            name:
                              description: If specified, this must be an IANA_SVC_NAME
                                and unique within the pod. Each named port in a pod
                                must have a unique name. Name for the port that can
                                be referred to by services.
                              type: string
                            protocol:
                              description: Protocol for port. Must be UDP, TCP, or
                                SCTP. Defaults to "TCP".
                              type: string
                          required:
                          - containerPort
                          type: object
                        type: array
                      readinessProbe:
                        description: 'Periodic probe of container service readiness.
                          Container will be removed from service endpoints if the
                          probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      resources:
                        description: 'Compute Resources required by this container.
                          Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        properties:
                          limits:
                            additionalProperties:
                              type: string
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                          requests:
                            additionalProperties:
                              type: string
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                        type: object
                      securityContext:
                        description: 'Security options the pod should run with. More
                          info: https://kubernetes.io/docs/concepts/policy/security-context/
                          More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                        properties:
                          allowPrivilegeEscalation:
                            description: 'AllowPrivilegeEscalation controls whether
                              a process can gain more privileges than its parent process.
                              This bool directly controls if the no_new_privs flag
                              will be set on the container process. AllowPrivilegeEscalation
                              is true always when the container is: 1) run as Privileged
                              2) has CAP_SYS_ADMIN'
                            type: boolean
                          capabilities:
                            description: The capabilities to add/drop when running
                              containers. Defaults to the default set of capabilities
                              granted by the container runtime.
                            properties:
                              add:
                                description: Added capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                              drop:
                                description: Removed capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                            type: object
                          privileged:
                            description: Run container in privileged mode. Processes
                              in privileged containers are essentially equivalent
                              to root on the host. Defaults to false.
                            type: boolean
                          procMount:
                            description: procMount denotes the type of proc mount
                              to use for the containers. The default is DefaultProcMount
                              which uses the container runtime defaults for readonly
                              paths and masked paths. This requires the ProcMountType
                              feature flag to be enabled.
                            type: string
                          readOnlyRootFilesystem:
                            description: Whether this container has a read-only root
                              filesystem. Default is false.
                            type: boolean
                          runAsGroup:
                            description: The GID to run the entrypoint of the container
                              process. Uses runtime default if unset. May also be
                              set in PodSecurityContext.  If set in both SecurityContext
                              and PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            format: int64
                            type: integer
                          runAsNonRoot:
                            description: Indicates that the container must run as
                              a non-root user. If true, the Kubelet will validate
                              the image at runtime to ensure that it does not run
                              as UID 0 (root) and fail to start the container if it
                              does. If unset or false, no such validation will be
                              performed. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: The UID to run the entrypoint of the container
                              process. Defaults to user specified in image metadata
                              if unspecified. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence.
                            format: int64
                            type: integer
                          seLinuxOptions:
                            description: The SELinux context to be applied to the
                              container. If unspecified, the container runtime will
                              allocate a random SELinux context for each container.  May
                              also be set in PodSecurityContext.  If set in both SecurityContext
                              and PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          windowsOptions:
                            description: The Windows specific settings applied to
                              all containers. If unspecified, the options from the
                              PodSecurityContext will be used. If set in both SecurityContext
                              and PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            properties:
                              gmsaCredentialSpec:
                                description: GMSACredentialSpec is where the GMSA
                                  admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                  inlines the contents of the GMSA credential spec
                                  named by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of
                                  the GMSA credential spec to use.
                                type: string
                              runAsUserName:
                                description: The UserName in Windows to run the entrypoint
                                  of the container process. Defaults to the user specified
                                  in image metadata if unspecified. May also be set
                                  in PodSecurityContext. If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                type: string
                            type: object
                        type: object
                      startupProbe:
                        description: 'StartupProbe indicates that the Pod has successfully
                          initialized. If specified, no other probes are executed
                          until this completes successfully. If this probe fails,
                          the Pod will be restarted, just as if the livenessProbe
                          failed. This can be used to provide different probe parameters
                          at the beginning of a Pod''s lifecycle, when it might take
                          a long time to load data or warm a cache, than during steady-state
                          operation. This cannot be updated. This is a beta feature
                          enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      stdin:
                        description: Whether this container should allocate a buffer
                          for stdin in the container runtime. If this is not set,
                          reads from stdin in the container will always result in
                          EOF. Default is false.
                        type: boolean
                      stdinOnce:
                        description: Whether the container runtime should close the
                          stdin channel after it has been opened by a single attach.
                          When stdin is true the stdin stream will remain open across
                          multiple attach sessions. If stdinOnce is set to true, stdin
                          is opened on container start, is empty until the first client
                          attaches to stdin, and then remains open and accepts data
                          until the client disconnects, at which time stdin is closed
                          and remains closed until the container is restarted. If
                          this flag is false, a container processes that reads from
                          stdin will never receive an EOF. Default is false
                        type: boolean
                      terminationMessagePath:
                        description: 'Optional: Path at which the file to which the
                          container''s termination message will be written is mounted
                          into the container''s filesystem. Message written is intended
                          to be brief final status, such as an assertion failure message.
                          Will be truncated by the node if greater than 4096 bytes.
                          The total message length across all containers will be limited
                          to 12kb. Defaults to /dev/termination-log. Cannot be updated.'
                        type: string
                      terminationMessagePolicy:
                        description: Indicate how the termination message should be
                          populated. File will use the contents of terminationMessagePath
                          to populate the container status message on both success
                          and failure. FallbackToLogsOnError will use the last chunk
                          of container log output if the termination message file
                          is empty and the container exited with an error. The log
                          output is limited to 2048 bytes or 80 lines, whichever is
                          smaller. Defaults to File. Cannot be updated.
                        type: string
                      tty:
                        description: Whether this container should allocate a TTY
                          for itself, also requires 'stdin' to be true. Default is
                          false.
                        type: boolean
                      volumeDevices:
                        description: volumeDevices is the list of block devices to
                          be used by the container.
                        items:
                          description: volumeDevice describes a mapping of a raw block
                            device within a container.
                          properties:
                            devicePath:
                              description: devicePath is the path inside of the container
                                that the device will be mapped to.
                              type: string
                            name:
                              description: name must match the name of a persistentVolumeClaim
                                in the pod
                              type: string
                          required:
                          - devicePath
                          - name
                          type: object
                        type: array
                      volumeMounts:
                        description: Pod volumes to mount into the container's filesystem.
                          Cannot be updated.
                        items:
                          description: VolumeMount describes a mounting of a Volume
                            within a container.
                          properties:
                            mountPath:
                              description: Path within the container at which the
                                volume should be mounted.  Must not contain ':'.
                              type: string
                            mountPropagation:
                              description: mountPropagation determines how mounts
                                are propagated from the host to container and the
                                other way around. When not set, MountPropagationNone
                                is used. This field is beta in 1.10.
                              type: string
                            name:
                              description: This must match the Name of a Volume.
                              type: string
                            readOnly:
                              description: Mounted read-only if true, read-write otherwise
                                (false or unspecified). Defaults to false.
                              type: boolean
                            subPath:
                              description: Path within the volume from which the container's
                                volume should be mounted. Defaults to "" (volume's
                                root).
                              type: string
                            subPathExpr:
                              description: Expanded path within the volume from which
                                the container's volume should be mounted. Behaves
                                similarly to SubPath but environment variable references
                                $(VAR_NAME) are expanded using the container's environment.
                                Defaults to "" (volume's root). SubPathExpr and SubPath
                                are mutually exclusive.
                              type: string
                          required:
                          - mountPath
                          - name
                          type: object
                        type: array
                      workingDir:
                        description: Container's working directory. If not specified,
                          the container runtime's default will be used, which might
                          be configured in the container image. Cannot be updated.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                listenLocal:
                  description: ListenLocal makes the Prometheus server listen on loopback,
                    so that it does not bind against the Pod IP.
                  type: boolean
                logFormat:
                  description: Log format for Prometheus to be configured with.
                  type: string
                logLevel:
                  description: Log level for Prometheus to be configured with.
                  type: string
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: Define which Nodes the Pods are scheduled on.
                  type: object
                overrideHonorLabels:
                  description: OverrideHonorLabels if set to true overrides all user
                    configured honor_labels. If HonorLabels is set in ServiceMonitor
                    or PodMonitor to true, this overrides honor_labels to false.
                  type: boolean
                overrideHonorTimestamps:
                  description: OverrideHonorTimestamps allows to globally enforce
                    honoring timestamps in all scrape configs.
                  type: boolean
                paused:
                  description: When a Prometheus deployment is paused, no actions
                    except for deletion will be performed on the underlying objects.
                  type: boolean
                podMetadata:
                  description: PodMetadata configures Labels and Annotations which
                    are propagated to the prometheus pods.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: 'Annotations is an unstructured key value map stored
                        with a resource that may be set by external tools to store
                        and retrieve arbitrary metadata. They are not queryable and
                        should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: 'Map of string keys and values that can be used
                        to organize and categorize (scope and select) objects. May
                        match selectors of replication controllers and services. More
                        info: http://kubernetes.io/docs/user-guide/labels'
                      type: object
                    name:
                      description: 'Name must be unique within a namespace. Is required
                        when creating resources, although some resources may allow
                        a client to request the generation of an appropriate name
                        automatically. Name is primarily intended for creation idempotence
                        and configuration definition. Cannot be updated. More info:
                        http://kubernetes.io/docs/user-guide/identifiers#names'
                      type: string
                  type: object
                podMonitorNamespaceSelector:
                  description: Namespaces to be selected for PodMonitor discovery.
                    If nil, only check own namespace.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                podMonitorSelector:
                  description: '*Experimental* PodMonitors to be selected for target
                    discovery. *Deprecated:* if neither this nor serviceMonitorSelector
                    are specified, configuration is unmanaged.'
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                portName:
                  description: Port name used for the pods and governing service.
                    This defaults to web
                  type: string
                priorityClassName:
                  description: Priority class assigned to the Pods
                  type: string
                probeNamespaceSelector:
                  description: '*Experimental* Namespaces to be selected for Probe
                    discovery. If nil, only check own namespace.'
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                probeSelector:
                  description: '*Experimental* Probes to be selected for target discovery.'
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                prometheusExternalLabelName:
                  description: Name of Prometheus external label used to denote Prometheus
                    instance name. Defaults to the value of `prometheus`. External
                    label will _not_ be added when value is set to empty string (`""`).
                  type: string
                prometheusRulesExcludedFromEnforce:
                  description: PrometheusRulesExcludedFromEnforce - list of prometheus
                    rules to be excluded from enforcing of adding namespace labels.
                    Works only if enforcedNamespaceLabel set to true. Make sure both
                    ruleNamespace and ruleName are set for each pair
                  items:
                    description: PrometheusRuleExcludeConfig enables users to configure
                      excluded PrometheusRule names and their namespaces to be ignored
                      while enforcing namespace label for alerts and metrics.
                    properties:
                      ruleName:
                        description: RuleNamespace - name of excluded rule
                        type: string
                      ruleNamespace:
                        description: RuleNamespace - namespace of excluded rule
                        type: string
                    required:
                    - ruleName
                    - ruleNamespace
                    type: object
                  type: array
                query:
                  description: QuerySpec defines the query command line flags when
                    starting Prometheus.
                  properties:
                    lookbackDelta:
                      description: The delta difference allowed for retrieving metrics
                        during expression evaluations.
                      type: string
                    maxConcurrency:
                      description: Number of concurrent queries that can be run at
                        once.
                      format: int32
                      type: integer
                    maxSamples:
                      description: Maximum number of samples a single query can load
                        into memory. Note that queries will fail if they would load
                        more samples than this into memory, so this also limits the
                        number of samples a query can return.
                      format: int32
                      type: integer
                    timeout:
                      description: Maximum time a query may take before being aborted.
                      type: string
                  type: object
                queryLogFile:
                  description: QueryLogFile specifies the file to which PromQL queries
                    are logged. Note that this location must be writable, and can
                    be persisted using an attached volume. Alternatively, the location
                    can be set to a stdout location such as `/dev/stdout` to log querie
                    information to the default Prometheus log stream. This is only
                    available in versions of Prometheus >= 2.16.0. For more details,
                    see the Prometheus docs (https://prometheus.io/docs/guides/query-log/)
                  type: string
                remoteRead:
                  description: If specified, the remote_read spec. This is an experimental
                    feature, it may change in any upcoming release in a breaking way.
                  items:
                    description: RemoteReadSpec defines the remote_read configuration
                      for prometheus.
                    properties:
                      basicAuth:
                        description: BasicAuth for the URL.
                        properties:
                          password:
                            description: The secret in the service monitor namespace
                              that contains the password for authentication.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          username:
                            description: The secret in the service monitor namespace
                              that contains the username for authentication.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                      bearerToken:
                        description: bearer token for remote read.
                        type: string
                      bearerTokenFile:
                        description: File to read bearer token for remote read.
                        type: string
                      name:
                        description: The name of the remote read queue, must be unique
                          if specified. The name is used in metrics and logging in
                          order to differentiate read configurations.  Only valid
                          in Prometheus versions 2.15.0 and newer.
                        type: string
                      proxyUrl:
                        description: Optional ProxyURL
                        type: string
                      readRecent:
                        description: Whether reads should be made for queries for
                          time ranges that the local storage should have complete
                          data for.
                        type: boolean
                      remoteTimeout:
                        description: Timeout for requests to the remote read endpoint.
                        type: string
                      requiredMatchers:
                        additionalProperties:
                          type: string
                        description: An optional list of equality matchers which have
                          to be present in a selector to query the remote read endpoint.
                        type: object
                      tlsConfig:
                        description: TLS Config to use for remote read.
                        properties:
                          ca:
                            description: Stuct containing the CA cert to use for the
                              targets.
                            properties:
                              configMap:
                                description: ConfigMap containing data to use for
                                  the targets.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              secret:
                                description: Secret containing data to use for the
                                  targets.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                          caFile:
                            description: Path to the CA cert in the Prometheus container
                              to use for the targets.
                            type: string
                          cert:
                            description: Struct containing the client cert file for
                              the targets.
                            properties:
                              configMap:
                                description: ConfigMap containing data to use for
                                  the targets.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              secret:
                                description: Secret containing data to use for the
                                  targets.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                          certFile:
                            description: Path to the client cert file in the Prometheus
                              container for the targets.
                            type: string
                          insecureSkipVerify:
                            description: Disable target certificate validation.
                            type: boolean
                          keyFile:
                            description: Path to the client key file in the Prometheus
                              container for the targets.
                            type: string
                          keySecret:
                            description: Secret containing the client key file for
                              the targets.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          serverName:
                            description: Used to verify the hostname for the targets.
                            type: string
                        type: object
                      url:
                        description: The URL of the endpoint to send samples to.
                        type: string
                    required:
                    - url
                    type: object
                  type: array
                remoteWrite:
                  description: If specified, the remote_write spec. This is an experimental
                    feature, it may change in any upcoming release in a breaking way.
                  items:
                    description: RemoteWriteSpec defines the remote_write configuration
                      for prometheus.
                    properties:
                      basicAuth:
                        description: BasicAuth for the URL.
                        properties:
                          password:
                            description: The secret in the service monitor namespace
                              that contains the password for authentication.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          username:
                            description: The secret in the service monitor namespace
                              that contains the username for authentication.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                      bearerToken:
                        description: File to read bearer token for remote write.
                        type: string
                      bearerTokenFile:
                        description: File to read bearer token for remote write.
                        type: string
                      name:
                        description: The name of the remote write queue, must be unique
                          if specified. The name is used in metrics and logging in
                          order to differentiate queues. Only valid in Prometheus
                          versions 2.15.0 and newer.
                        type: string
                      proxyUrl:
                        description: Optional ProxyURL
                        type: string
                      queueConfig:
                        description: QueueConfig allows tuning of the remote write
                          queue parameters.
                        properties:
                          batchSendDeadline:
                            description: BatchSendDeadline is the maximum time a sample
                              will wait in buffer.
                            type: string
                          capacity:
                            description: Capacity is the number of samples to buffer
                              per shard before we start dropping them.
                            type: integer
                          maxBackoff:
                            description: MaxBackoff is the maximum retry delay.
                            type: string
                          maxRetries:
                            description: MaxRetries is the maximum number of times
                              to retry a batch on recoverable errors.
                            type: integer
                          maxSamplesPerSend:
                            description: MaxSamplesPerSend is the maximum number of
                              samples per send.
                            type: integer
                          maxShards:
                            description: MaxShards is the maximum number of shards,
                              i.e. amount of concurrency.
                            type: integer
                          minBackoff:
                            description: MinBackoff is the initial retry delay. Gets
                              doubled for every retry.
                            type: string
                          minShards:
                            description: MinShards is the minimum number of shards,
                              i.e. amount of concurrency.
                            type: integer
                        type: object
                      remoteTimeout:
                        description: Timeout for requests to the remote write endpoint.
                        type: string
                      tlsConfig:
                        description: TLS Config to use for remote write.
                        properties:
                          ca:
                            description: Stuct containing the CA cert to use for the
                              targets.
                            properties:
                              configMap:
                                description: ConfigMap containing data to use for
                                  the targets.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              secret:
                                description: Secret containing data to use for the
                                  targets.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                          caFile:
                            description: Path to the CA cert in the Prometheus container
                              to use for the targets.
                            type: string
                          cert:
                            description: Struct containing the client cert file for
                              the targets.
                            properties:
                              configMap:
                                description: ConfigMap containing data to use for
                                  the targets.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              secret:
                                description: Secret containing data to use for the
                                  targets.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                          certFile:
                            description: Path to the client cert file in the Prometheus
                              container for the targets.
                            type: string
                          insecureSkipVerify:
                            description: Disable target certificate validation.
                            type: boolean
                          keyFile:
                            description: Path to the client key file in the Prometheus
                              container for the targets.
                            type: string
                          keySecret:
                            description: Secret containing the client key file for
                              the targets.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          serverName:
                            description: Used to verify the hostname for the targets.
                            type: string
                        type: object
                      url:
                        description: The URL of the endpoint to send samples to.
                        type: string
                      writeRelabelConfigs:
                        description: The list of remote write relabel configurations.
                        items:
                          description: 'RelabelConfig allows dynamic rewriting of
                            the label set, being applied to samples before ingestion.
                            It defines `<metric_relabel_configs>`-section of Prometheus
                            configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                          properties:
                            action:
                              description: Action to perform based on regex matching.
                                Default is 'replace'
                              type: string
                            modulus:
                              description: Modulus to take of the hash of the source
                                label values.
                              format: int64
                              type: integer
                            regex:
                              description: Regular expression against which the extracted
                                value is matched. Default is '(.*)'
                              type: string
                            replacement:
                              description: Replacement value against which a regex
                                replace is performed if the regular expression matches.
                                Regex capture groups are available. Default is '$1'
                              type: string
                            separator:
                              description: Separator placed between concatenated source
                                label values. default is ';'.
                              type: string
                            sourceLabels:
                              description: The source labels select values from existing
                                labels. Their content is concatenated using the configured
                                separator and matched against the configured regular
                                expression for the replace, keep, and drop actions.
                              items:
                                type: string
                              type: array
                            targetLabel:
                              description: Label to which the resulting value is written
                                in a replace action. It is mandatory for replace actions.
                                Regex capture groups are available.
                              type: string
                          type: object
                        type: array
                    required:
                    - url
                    type: object
                  type: array
                replicaExternalLabelName:
                  description: Name of Prometheus external label used to denote replica
                    name. Defaults to the value of `prometheus_replica`. External
                    label will _not_ be added when value is set to empty string (`""`).
                  type: string
                replicas:
                  description: Number of instances to deploy for a Prometheus deployment.
                  format: int32
                  type: integer
                resources:
                  description: Define resources requests and limits for single Pods.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                retention:
                  description: Time duration Prometheus shall retain data for. Default
                    is '24h', and must match the regular expression `[0-9]+(ms|s|m|h|d|w|y)`
                    (milliseconds seconds minutes hours days weeks years).
                  type: string
                retentionSize:
                  description: Maximum amount of disk space used by blocks.
                  type: string
                routePrefix:
                  description: The route prefix Prometheus registers HTTP handlers
                    for. This is useful, if using ExternalURL and a proxy is rewriting
                    HTTP routes of a request, and the actual ExternalURL is still
                    true, but the server serves requests under a different route prefix.
                    For example for use with `kubectl proxy`.
                  type: string
                ruleNamespaceSelector:
                  description: Namespaces to be selected for PrometheusRules discovery.
                    If unspecified, only the same namespace as the Prometheus object
                    is in is used.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                ruleSelector:
                  description: A selector to select which PrometheusRules to mount
                    for loading alerting/recording rules from. Until (excluding) Prometheus
                    Operator v0.24.0 Prometheus Operator will migrate any legacy rule
                    ConfigMaps to PrometheusRule custom resources selected by RuleSelector.
                    Make sure it does not match any config maps that you do not want
                    to be migrated.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                rules:
                  description: /--rules.*/ command-line arguments.
                  properties:
                    alert:
                      description: /--rules.alert.*/ command-line arguments
                      properties:
                        forGracePeriod:
                          description: Minimum duration between alert and restored
                            'for' state. This is maintained only for alerts with configured
                            'for' time greater than grace period.
                          type: string
                        forOutageTolerance:
                          description: Max time to tolerate prometheus outage for
                            restoring 'for' state of alert.
                          type: string
                        resendDelay:
                          description: Minimum amount of time to wait before resending
                            an alert to Alertmanager.
                          type: string
                      type: object
                  type: object
                scrapeInterval:
                  description: Interval between consecutive scrapes.
                  type: string
                scrapeTimeout:
                  description: Number of seconds to wait for target to respond before
                    erroring.
                  type: string
                secrets:
                  description: Secrets is a list of Secrets in the same namespace
                    as the Prometheus object, which shall be mounted into the Prometheus
                    Pods. The Secrets are mounted into /etc/prometheus/secrets/<secret-name>.
                  items:
                    type: string
                  type: array
                securityContext:
                  description: SecurityContext holds pod-level security attributes
                    and common container settings. This defaults to the default PodSecurityContext.
                  properties:
                    fsGroup:
                      description: "A special supplemental group that applies to all
                        containers in a pod. Some volume types allow the Kubelet to
                        change the ownership of that volume to be owned by the pod:
                        \n 1. The owning GID will be the FSGroup 2. The setgid bit
                        is set (new files created in the volume will be owned by FSGroup)
                        3. The permission bits are OR'd with rw-rw---- \n If unset,
                        the Kubelet will not modify the ownership and permissions
                        of any volume."
                      format: int64
                      type: integer
                    fsGroupChangePolicy:
                      description: 'fsGroupChangePolicy defines behavior of changing
                        ownership and permission of the volume before being exposed
                        inside Pod. This field will only apply to volume types which
                        support fsGroup based ownership(and permissions). It will
                        have no effect on ephemeral volume types such as: secret,
                        configmaps and emptydir. Valid values are "OnRootMismatch"
                        and "Always". If not specified defaults to "Always".'
                      type: string
                    runAsGroup:
                      description: The GID to run the entrypoint of the container
                        process. Uses runtime default if unset. May also be set in
                        SecurityContext.  If set in both SecurityContext and PodSecurityContext,
                        the value specified in SecurityContext takes precedence for
                        that container.
                      format: int64
                      type: integer
                    runAsNonRoot:
                      description: Indicates that the container must run as a non-root
                        user. If true, the Kubelet will validate the image at runtime
                        to ensure that it does not run as UID 0 (root) and fail to
                        start the container if it does. If unset or false, no such
                        validation will be performed. May also be set in SecurityContext.  If
                        set in both SecurityContext and PodSecurityContext, the value
                        specified in SecurityContext takes precedence.
                      type: boolean
                    runAsUser:
                      description: The UID to run the entrypoint of the container
                        process. Defaults to user specified in image metadata if unspecified.
                        May also be set in SecurityContext.  If set in both SecurityContext
                        and PodSecurityContext, the value specified in SecurityContext
                        takes precedence for that container.
                      format: int64
                      type: integer
                    seLinuxOptions:
                      description: The SELinux context to be applied to all containers.
                        If unspecified, the container runtime will allocate a random
                        SELinux context for each container.  May also be set in SecurityContext.  If
                        set in both SecurityContext and PodSecurityContext, the value
                        specified in SecurityContext takes precedence for that container.
                      properties:
                        level:
                          description: Level is SELinux level label that applies to
                            the container.
                          type: string
                        role:
                          description: Role is a SELinux role label that applies to
                            the container.
                          type: string
                        type:
                          description: Type is a SELinux type label that applies to
                            the container.
                          type: string
                        user:
                          description: User is a SELinux user label that applies to
                            the container.
                          type: string
                      type: object
                    supplementalGroups:
                      description: A list of groups applied to the first process run
                        in each container, in addition to the container's primary
                        GID.  If unspecified, no groups will be added to any container.
                      items:
                        format: int64
                        type: integer
                      type: array
                    sysctls:
                      description: Sysctls hold a list of namespaced sysctls used
                        for the pod. Pods with unsupported sysctls (by the container
                        runtime) might fail to launch.
                      items:
                        description: Sysctl defines a kernel parameter to be set
                        properties:
                          name:
                            description: Name of a property to set
                            type: string
                          value:
                            description: Value of a property to set
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    windowsOptions:
                      description: The Windows specific settings applied to all containers.
                        If unspecified, the options within a container's SecurityContext
                        will be used. If set in both SecurityContext and PodSecurityContext,
                        the value specified in SecurityContext takes precedence.
                      properties:
                        gmsaCredentialSpec:
                          description: GMSACredentialSpec is where the GMSA admission
                            webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                            inlines the contents of the GMSA credential spec named
                            by the GMSACredentialSpecName field.
                          type: string
                        gmsaCredentialSpecName:
                          description: GMSACredentialSpecName is the name of the GMSA
                            credential spec to use.
                          type: string
                        runAsUserName:
                          description: The UserName in Windows to run the entrypoint
                            of the container process. Defaults to the user specified
                            in image metadata if unspecified. May also be set in PodSecurityContext.
                            If set in both SecurityContext and PodSecurityContext,
                            the value specified in SecurityContext takes precedence.
                          type: string
                      type: object
                  type: object
                serviceAccountName:
                  description: ServiceAccountName is the name of the ServiceAccount
                    to use to run the Prometheus Pods.
                  type: string
                serviceMonitorNamespaceSelector:
                  description: Namespaces to be selected for ServiceMonitor discovery.
                    If nil, only check own namespace.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                serviceMonitorSelector:
                  description: ServiceMonitors to be selected for target discovery.
                    *Deprecated:* if neither this nor podMonitorSelector are specified,
                    configuration is unmanaged.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                sha:
                  description: 'SHA of Prometheus container image to be deployed.
                    Defaults to the value of `version`. Similar to a tag, but the
                    SHA explicitly deploys an immutable container image. Version and
                    Tag are ignored if SHA is set. Deprecated: use ''image'' instead.  The
                    image digest can be specified as part of the image URL.'
                  type: string
                storage:
                  description: Storage spec to specify how storage shall be used.
                  properties:
                    disableMountSubPath:
                      description: 'Deprecated: subPath usage will be disabled by
                        default in a future release, this option will become unnecessary.
                        DisableMountSubPath allows to remove any subPath usage in
                        volume mounts.'
                      type: boolean
                    emptyDir:
                      description: 'EmptyDirVolumeSource to be used by the Prometheus
                        StatefulSets. If specified, used in place of any volumeClaimTemplate.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir'
                      properties:
                        medium:
                          description: 'What type of storage medium should back this
                            directory. The default is "" which means to use the node''s
                            default medium. Must be an empty string (default) or Memory.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                          type: string
                        sizeLimit:
                          description: 'Total amount of local storage required for
                            this EmptyDir volume. The size limit is also applicable
                            for memory medium. The maximum usage on memory medium
                            EmptyDir would be the minimum value between the SizeLimit
                            specified here and the sum of memory limits of all containers
                            in a pod. The default is nil which means that the limit
                            is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                          type: string
                      type: object
                    volumeClaimTemplate:
                      description: A PVC spec to be used by the Prometheus StatefulSets.
                      properties:
                        apiVersion:
                          description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                        kind:
                          description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        metadata:
                          description: EmbeddedMetadata contains metadata relevant
                            to an EmbeddedResource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: 'Annotations is an unstructured key value
                                map stored with a resource that may be set by external
                                tools to store and retrieve arbitrary metadata. They
                                are not queryable and should be preserved when modifying
                                objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: 'Map of string keys and values that can
                                be used to organize and categorize (scope and select)
                                objects. May match selectors of replication controllers
                                and services. More info: http://kubernetes.io/docs/user-guide/labels'
                              type: object
                            name:
                              description: 'Name must be unique within a namespace.
                                Is required when creating resources, although some
                                resources may allow a client to request the generation
                                of an appropriate name automatically. Name is primarily
                                intended for creation idempotence and configuration
                                definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                              type: string
                          type: object
                        spec:
                          description: 'Spec defines the desired characteristics of
                            a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          properties:
                            accessModes:
                              description: 'AccessModes contains the desired access
                                modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                              items:
                                type: string
                              type: array
                            dataSource:
                              description: 'This field can be used to specify either:
                                * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot
                                - Beta) * An existing PVC (PersistentVolumeClaim)
                                * An existing custom resource/object that implements
                                data population (Alpha) In order to use VolumeSnapshot
                                object types, the appropriate feature gate must be
                                enabled (VolumeSnapshotDataSource or AnyVolumeDataSource)
                                If the provisioner or an external controller can support
                                the specified data source, it will create a new volume
                                based on the contents of the specified data source.
                                If the specified data source is not supported, the
                                volume will not be created and the failure will be
                                reported as an event. In the future, we plan to support
                                more data source types and the behavior of the provisioner
                                may change.'
                              properties:
                                apiGroup:
                                  description: APIGroup is the group for the resource
                                    being referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                            resources:
                              description: 'Resources represents the minimum resources
                                the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                              properties:
                                limits:
                                  additionalProperties:
                                    type: string
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    type: string
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                              type: object
                            selector:
                              description: A label query over volumes to consider
                                for binding.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            storageClassName:
                              description: 'Name of the StorageClass required by the
                                claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                              type: string
                            volumeMode:
                              description: volumeMode defines what type of volume
                                is required by the claim. Value of Filesystem is implied
                                when not included in claim spec.
                              type: string
                            volumeName:
                              description: VolumeName is the binding reference to
                                the PersistentVolume backing this claim.
                              type: string
                          type: object
                        status:
                          description: 'Status represents the current information/status
                            of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          properties:
                            accessModes:
                              description: 'AccessModes contains the actual access
                                modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                              items:
                                type: string
                              type: array
                            capacity:
                              additionalProperties:
                                type: string
                              description: Represents the actual resources of the
                                underlying volume.
                              type: object
                            conditions:
                              description: Current Condition of persistent volume
                                claim. If underlying persistent volume is being resized
                                then the Condition will be set to 'ResizeStarted'.
                              items:
                                description: PersistentVolumeClaimCondition contails
                                  details about state of pvc
                                properties:
                                  lastProbeTime:
                                    description: Last time we probed the condition.
                                    format: date-time
                                    type: string
                                  lastTransitionTime:
                                    description: Last time the condition transitioned
                                      from one status to another.
                                    format: date-time
                                    type: string
                                  message:
                                    description: Human-readable message indicating
                                      details about last transition.
                                    type: string
                                  reason:
                                    description: Unique, this should be a short, machine
                                      understandable string that gives the reason
                                      for condition's last transition. If it reports
                                      "ResizeStarted" that means the underlying persistent
                                      volume is being resized.
                                    type: string
                                  status:
                                    type: string
                                  type:
                                    description: PersistentVolumeClaimConditionType
                                      is a valid value of PersistentVolumeClaimCondition.Type
                                    type: string
                                required:
                                - status
                                - type
                                type: object
                              type: array
                            phase:
                              description: Phase represents the current phase of PersistentVolumeClaim.
                              type: string
                          type: object
                      type: object
                  type: object
                tag:
                  description: 'Tag of Prometheus container image to be deployed.
                    Defaults to the value of `version`. Version is ignored if Tag
                    is set. Deprecated: use ''image'' instead.  The image tag can
                    be specified as part of the image URL.'
                  type: string
                thanos:
                  description: "Thanos configuration allows configuring various aspects
                    of a Prometheus server in a Thanos environment. \n This section
                    is experimental, it may change significantly without deprecation
                    notice in any release. \n This is experimental and may change
                    significantly without backward compatibility in any release."
                  properties:
                    baseImage:
                      description: 'Thanos base image if other than default. Deprecated:
                        use ''image'' instead'
                      type: string
                    grpcServerTlsConfig:
                      description: 'GRPCServerTLSConfig configures the gRPC server
                        from which Thanos Querier reads recorded rule data. Note:
                        Currently only the CAFile, CertFile, and KeyFile fields are
                        supported. Maps to the ''--grpc-server-tls-*'' CLI args.'
                      properties:
                        ca:
                          description: Stuct containing the CA cert to use for the
                            targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        caFile:
                          description: Path to the CA cert in the Prometheus container
                            to use for the targets.
                          type: string
                        cert:
                          description: Struct containing the client cert file for
                            the targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        certFile:
                          description: Path to the client cert file in the Prometheus
                            container for the targets.
                          type: string
                        insecureSkipVerify:
                          description: Disable target certificate validation.
                          type: boolean
                        keyFile:
                          description: Path to the client key file in the Prometheus
                            container for the targets.
                          type: string
                        keySecret:
                          description: Secret containing the client key file for the
                            targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        serverName:
                          description: Used to verify the hostname for the targets.
                          type: string
                      type: object
                    image:
                      description: Image if specified has precedence over baseImage,
                        tag and sha combinations. Specifying the version is still
                        necessary to ensure the Prometheus Operator knows what version
                        of Thanos is being configured.
                      type: string
                    listenLocal:
                      description: ListenLocal makes the Thanos sidecar listen on
                        loopback, so that it does not bind against the Pod IP.
                      type: boolean
                    logFormat:
                      description: LogFormat for Thanos sidecar to be configured with.
                      type: string
                    logLevel:
                      description: LogLevel for Thanos sidecar to be configured with.
                      type: string
                    minTime:
                      description: MinTime for Thanos sidecar to be configured with.
                        Option can be a constant time in RFC3339 format or time duration
                        relative to current time, such as -1d or 2h45m. Valid duration
                        units are ms, s, m, h, d, w, y.
                      type: string
                    objectStorageConfig:
                      description: ObjectStorageConfig configures object storage in
                        Thanos.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                    resources:
                      description: Resources defines the resource requirements for
                        the Thanos sidecar. If not provided, no requests/limits will
                        be set
                      properties:
                        limits:
                          additionalProperties:
                            type: string
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                        requests:
                          additionalProperties:
                            type: string
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                      type: object
                    sha:
                      description: 'SHA of Thanos container image to be deployed.
                        Defaults to the value of `version`. Similar to a tag, but
                        the SHA explicitly deploys an immutable container image. Version
                        and Tag are ignored if SHA is set. Deprecated: use ''image''
                        instead.  The image digest can be specified as part of the
                        image URL.'
                      type: string
                    tag:
                      description: 'Tag of Thanos sidecar container image to be deployed.
                        Defaults to the value of `version`. Version is ignored if
                        Tag is set. Deprecated: use ''image'' instead.  The image
                        tag can be specified as part of the image URL.'
                      type: string
                    tracingConfig:
                      description: TracingConfig configures tracing in Thanos. This
                        is an experimental feature, it may change in any upcoming
                        release in a breaking way.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                    version:
                      description: Version describes the version of Thanos to use.
                      type: string
                  type: object
                tolerations:
                  description: If specified, the pod's tolerations.
                  items:
                    description: The pod this Toleration is attached to tolerates
                      any taint that matches the triple <key,value,effect> using the
                      matching operator <operator>.
                    properties:
                      effect:
                        description: Effect indicates the taint effect to match. Empty
                          means match all taint effects. When specified, allowed values
                          are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Key is the taint key that the toleration applies
                          to. Empty means match all taint keys. If the key is empty,
                          operator must be Exists; this combination means to match
                          all values and all keys.
                        type: string
                      operator:
                        description: Operator represents a key's relationship to the
                          value. Valid operators are Exists and Equal. Defaults to
                          Equal. Exists is equivalent to wildcard for value, so that
                          a pod can tolerate all taints of a particular category.
                        type: string
                      tolerationSeconds:
                        description: TolerationSeconds represents the period of time
                          the toleration (which must be of effect NoExecute, otherwise
                          this field is ignored) tolerates the taint. By default,
                          it is not set, which means tolerate the taint forever (do
                          not evict). Zero and negative values will be treated as
                          0 (evict immediately) by the system.
                        format: int64
                        type: integer
                      value:
                        description: Value is the taint value the toleration matches
                          to. If the operator is Exists, the value should be empty,
                          otherwise just a regular string.
                        type: string
                    type: object
                  type: array
                version:
                  description: Version of Prometheus to be deployed.
                  type: string
                volumeMounts:
                  description: VolumeMounts allows configuration of additional VolumeMounts
                    on the output StatefulSet definition. VolumeMounts specified will
                    be appended to other VolumeMounts in the prometheus container,
                    that are generated as a result of StorageSpec objects.
                  items:
                    description: VolumeMount describes a mounting of a Volume within
                      a container.
                    properties:
                      mountPath:
                        description: Path within the container at which the volume
                          should be mounted.  Must not contain ':'.
                        type: string
                      mountPropagation:
                        description: mountPropagation determines how mounts are propagated
                          from the host to container and the other way around. When
                          not set, MountPropagationNone is used. This field is beta
                          in 1.10.
                        type: string
                      name:
                        description: This must match the Name of a Volume.
                        type: string
                      readOnly:
                        description: Mounted read-only if true, read-write otherwise
                          (false or unspecified). Defaults to false.
                        type: boolean
                      subPath:
                        description: Path within the volume from which the container's
                          volume should be mounted. Defaults to "" (volume's root).
                        type: string
                      subPathExpr:
                        description: Expanded path within the volume from which the
                          container's volume should be mounted. Behaves similarly
                          to SubPath but environment variable references $(VAR_NAME)
                          are expanded using the container's environment. Defaults
                          to "" (volume's root). SubPathExpr and SubPath are mutually
                          exclusive.
                        type: string
                    required:
                    - mountPath
                    - name
                    type: object
                  type: array
                volumes:
                  description: Volumes allows configuration of additional volumes
                    on the output StatefulSet definition. Volumes specified will be
                    appended to other volumes that are generated as a result of StorageSpec
                    objects.
                  items:
                    description: Volume represents a named volume in a pod that may
                      be accessed by any container in the pod.
                    properties:
                      awsElasticBlockStore:
                        description: 'AWSElasticBlockStore represents an AWS Disk
                          resource that is attached to a kubelet''s host machine and
                          then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                        properties:
                          fsType:
                            description: 'Filesystem type of the volume that you want
                              to mount. Tip: Ensure that the filesystem type is supported
                              by the host operating system. Examples: "ext4", "xfs",
                              "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                            type: string
                          partition:
                            description: 'The partition in the volume that you want
                              to mount. If omitted, the default is to mount by volume
                              name. Examples: For volume /dev/sda1, you specify the
                              partition as "1". Similarly, the volume partition for
                              /dev/sda is "0" (or you can leave the property empty).'
                            format: int32
                            type: integer
                          readOnly:
                            description: 'Specify "true" to force and set the ReadOnly
                              property in VolumeMounts to "true". If omitted, the
                              default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                            type: boolean
                          volumeID:
                            description: 'Unique ID of the persistent disk resource
                              in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                            type: string
                        required:
                        - volumeID
                        type: object
                      azureDisk:
                        description: AzureDisk represents an Azure Data Disk mount
                          on the host and bind mount to the pod.
                        properties:
                          cachingMode:
                            description: 'Host Caching mode: None, Read Only, Read
                              Write.'
                            type: string
                          diskName:
                            description: The Name of the data disk in the blob storage
                            type: string
                          diskURI:
                            description: The URI the data disk in the blob storage
                            type: string
                          fsType:
                            description: Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Ex. "ext4",
                              "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          kind:
                            description: 'Expected values Shared: multiple blob disks
                              per storage account  Dedicated: single blob disk per
                              storage account  Managed: azure managed data disk (only
                              in managed availability set). defaults to shared'
                            type: string
                          readOnly:
                            description: Defaults to false (read/write). ReadOnly
                              here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                        required:
                        - diskName
                        - diskURI
                        type: object
                      azureFile:
                        description: AzureFile represents an Azure File Service mount
                          on the host and bind mount to the pod.
                        properties:
                          readOnly:
                            description: Defaults to false (read/write). ReadOnly
                              here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretName:
                            description: the name of secret that contains Azure Storage
                              Account Name and Key
                            type: string
                          shareName:
                            description: Share Name
                            type: string
                        required:
                        - secretName
                        - shareName
                        type: object
                      cephfs:
                        description: CephFS represents a Ceph FS mount on the host
                          that shares a pod's lifetime
                        properties:
                          monitors:
                            description: 'Required: Monitors is a collection of Ceph
                              monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            items:
                              type: string
                            type: array
                          path:
                            description: 'Optional: Used as the mounted root, rather
                              than the full Ceph tree, default is /'
                            type: string
                          readOnly:
                            description: 'Optional: Defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            type: boolean
                          secretFile:
                            description: 'Optional: SecretFile is the path to key
                              ring for User, default is /etc/ceph/user.secret More
                              info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            type: string
                          secretRef:
                            description: 'Optional: SecretRef is reference to the
                              authentication secret for User, default is empty. More
                              info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          user:
                            description: 'Optional: User is the rados user name, default
                              is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            type: string
                        required:
                        - monitors
                        type: object
                      cinder:
                        description: 'Cinder represents a cinder volume attached and
                          mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                        properties:
                          fsType:
                            description: 'Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Examples:
                              "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                              if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            type: string
                          readOnly:
                            description: 'Optional: Defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            type: boolean
                          secretRef:
                            description: 'Optional: points to a secret object containing
                              parameters used to connect to OpenStack.'
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          volumeID:
                            description: 'volume id used to identify the volume in
                              cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            type: string
                        required:
                        - volumeID
                        type: object
                      configMap:
                        description: ConfigMap represents a configMap that should
                          populate this volume
                        properties:
                          defaultMode:
                            description: 'Optional: mode bits to use on created files
                              by default. Must be a value between 0 and 0777. Defaults
                              to 0644. Directories within the path are not affected
                              by this setting. This might be in conflict with other
                              options that affect the file mode, like fsGroup, and
                              the result can be other mode bits set.'
                            format: int32
                            type: integer
                          items:
                            description: If unspecified, each key-value pair in the
                              Data field of the referenced ConfigMap will be projected
                              into the volume as a file whose name is the key and
                              content is the value. If specified, the listed keys
                              will be projected into the specified paths, and unlisted
                              keys will not be present. If a key is specified which
                              is not present in the ConfigMap, the volume setup will
                              error unless it is marked optional. Paths must be relative
                              and may not contain the '..' path or start with '..'.
                            items:
                              description: Maps a string key to a path within a volume.
                              properties:
                                key:
                                  description: The key to project.
                                  type: string
                                mode:
                                  description: 'Optional: mode bits to use on this
                                    file, must be a value between 0 and 0777. If not
                                    specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that
                                    affect the file mode, like fsGroup, and the result
                                    can be other mode bits set.'
                                  format: int32
                                  type: integer
                                path:
                                  description: The relative path of the file to map
                                    the key to. May not be an absolute path. May not
                                    contain the path element '..'. May not start with
                                    the string '..'.
                                  type: string
                              required:
                              - key
                              - path
                              type: object
                            type: array
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its keys
                              must be defined
                            type: boolean
                        type: object
                      csi:
                        description: CSI (Container Storage Interface) represents
                          storage that is handled by an external CSI driver (Alpha
                          feature).
                        properties:
                          driver:
                            description: Driver is the name of the CSI driver that
                              handles this volume. Consult with your admin for the
                              correct name as registered in the cluster.
                            type: string
                          fsType:
                            description: Filesystem type to mount. Ex. "ext4", "xfs",
                              "ntfs". If not provided, the empty value is passed to
                              the associated CSI driver which will determine the default
                              filesystem to apply.
                            type: string
                          nodePublishSecretRef:
                            description: NodePublishSecretRef is a reference to the
                              secret object containing sensitive information to pass
                              to the CSI driver to complete the CSI NodePublishVolume
                              and NodeUnpublishVolume calls. This field is optional,
                              and  may be empty if no secret is required. If the secret
                              object contains more than one secret, all secret references
                              are passed.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          readOnly:
                            description: Specifies a read-only configuration for the
                              volume. Defaults to false (read/write).
                            type: boolean
                          volumeAttributes:
                            additionalProperties:
                              type: string
                            description: VolumeAttributes stores driver-specific properties
                              that are passed to the CSI driver. Consult your driver's
                              documentation for supported values.
                            type: object
                        required:
                        - driver
                        type: object
                      downwardAPI:
                        description: DownwardAPI represents downward API about the
                          pod that should populate this volume
                        properties:
                          defaultMode:
                            description: 'Optional: mode bits to use on created files
                              by default. Must be a value between 0 and 0777. Defaults
                              to 0644. Directories within the path are not affected
                              by this setting. This might be in conflict with other
                              options that affect the file mode, like fsGroup, and
                              the result can be other mode bits set.'
                            format: int32
                            type: integer
                          items:
                            description: Items is a list of downward API volume file
                            items:
                              description: DownwardAPIVolumeFile represents information
                                to create the file containing the pod field
                              properties:
                                fieldRef:
                                  description: 'Required: Selects a field of the pod:
                                    only annotations, labels, name and namespace are
                                    supported.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                mode:
                                  description: 'Optional: mode bits to use on this
                                    file, must be a value between 0 and 0777. If not
                                    specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that
                                    affect the file mode, like fsGroup, and the result
                                    can be other mode bits set.'
                                  format: int32
                                  type: integer
                                path:
                                  description: 'Required: Path is  the relative path
                                    name of the file to be created. Must not be absolute
                                    or contain the ''..'' path. Must be utf-8 encoded.
                                    The first item of the relative path must not start
                                    with ''..'''
                                  type: string
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, requests.cpu and requests.memory)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      type: string
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                              required:
                              - path
                              type: object
                            type: array
                        type: object
                      emptyDir:
                        description: 'EmptyDir represents a temporary directory that
                          shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                        properties:
                          medium:
                            description: 'What type of storage medium should back
                              this directory. The default is "" which means to use
                              the node''s default medium. Must be an empty string
                              (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                            type: string
                          sizeLimit:
                            description: 'Total amount of local storage required for
                              this EmptyDir volume. The size limit is also applicable
                              for memory medium. The maximum usage on memory medium
                              EmptyDir would be the minimum value between the SizeLimit
                              specified here and the sum of memory limits of all containers
                              in a pod. The default is nil which means that the limit
                              is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                            type: string
                        type: object
                      fc:
                        description: FC represents a Fibre Channel resource that is
                          attached to a kubelet's host machine and then exposed to
                          the pod.
                        properties:
                          fsType:
                            description: 'Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Ex. "ext4",
                              "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                            type: string
                          lun:
                            description: 'Optional: FC target lun number'
                            format: int32
                            type: integer
                          readOnly:
                            description: 'Optional: Defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                            type: boolean
                          targetWWNs:
                            description: 'Optional: FC target worldwide names (WWNs)'
                            items:
                              type: string
                            type: array
                          wwids:
                            description: 'Optional: FC volume world wide identifiers
                              (wwids) Either wwids or combination of targetWWNs and
                              lun must be set, but not both simultaneously.'
                            items:
                              type: string
                            type: array
                        type: object
                      flexVolume:
                        description: FlexVolume represents a generic volume resource
                          that is provisioned/attached using an exec based plugin.
                        properties:
                          driver:
                            description: Driver is the name of the driver to use for
                              this volume.
                            type: string
                          fsType:
                            description: Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Ex. "ext4",
                              "xfs", "ntfs". The default filesystem depends on FlexVolume
                              script.
                            type: string
                          options:
                            additionalProperties:
                              type: string
                            description: 'Optional: Extra command options if any.'
                            type: object
                          readOnly:
                            description: 'Optional: Defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                            type: boolean
                          secretRef:
                            description: 'Optional: SecretRef is reference to the
                              secret object containing sensitive information to pass
                              to the plugin scripts. This may be empty if no secret
                              object is specified. If the secret object contains more
                              than one secret, all secrets are passed to the plugin
                              scripts.'
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                        required:
                        - driver
                        type: object
                      flocker:
                        description: Flocker represents a Flocker volume attached
                          to a kubelet's host machine. This depends on the Flocker
                          control service being running
                        properties:
                          datasetName:
                            description: Name of the dataset stored as metadata ->
                              name on the dataset for Flocker should be considered
                              as deprecated
                            type: string
                          datasetUUID:
                            description: UUID of the dataset. This is unique identifier
                              of a Flocker dataset
                            type: string
                        type: object
                      gcePersistentDisk:
                        description: 'GCEPersistentDisk represents a GCE Disk resource
                          that is attached to a kubelet''s host machine and then exposed
                          to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                        properties:
                          fsType:
                            description: 'Filesystem type of the volume that you want
                              to mount. Tip: Ensure that the filesystem type is supported
                              by the host operating system. Examples: "ext4", "xfs",
                              "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                            type: string
                          partition:
                            description: 'The partition in the volume that you want
                              to mount. If omitted, the default is to mount by volume
                              name. Examples: For volume /dev/sda1, you specify the
                              partition as "1". Similarly, the volume partition for
                              /dev/sda is "0" (or you can leave the property empty).
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            format: int32
                            type: integer
                          pdName:
                            description: 'Unique name of the PD resource in GCE. Used
                              to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            type: string
                          readOnly:
                            description: 'ReadOnly here will force the ReadOnly setting
                              in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            type: boolean
                        required:
                        - pdName
                        type: object
                      gitRepo:
                        description: 'GitRepo represents a git repository at a particular
                          revision. DEPRECATED: GitRepo is deprecated. To provision
                          a container with a git repo, mount an EmptyDir into an InitContainer
                          that clones the repo using git, then mount the EmptyDir
                          into the Pod''s container.'
                        properties:
                          directory:
                            description: Target directory name. Must not contain or
                              start with '..'.  If '.' is supplied, the volume directory
                              will be the git repository.  Otherwise, if specified,
                              the volume will contain the git repository in the subdirectory
                              with the given name.
                            type: string
                          repository:
                            description: Repository URL
                            type: string
                          revision:
                            description: Commit hash for the specified revision.
                            type: string
                        required:
                        - repository
                        type: object
                      glusterfs:
                        description: 'Glusterfs represents a Glusterfs mount on the
                          host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                        properties:
                          endpoints:
                            description: 'EndpointsName is the endpoint name that
                              details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                            type: string
                          path:
                            description: 'Path is the Glusterfs volume path. More
                              info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                            type: string
                          readOnly:
                            description: 'ReadOnly here will force the Glusterfs volume
                              to be mounted with read-only permissions. Defaults to
                              false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                            type: boolean
                        required:
                        - endpoints
                        - path
                        type: object
                      hostPath:
                        description: 'HostPath represents a pre-existing file or directory
                          on the host machine that is directly exposed to the container.
                          This is generally used for system agents or other privileged
                          things that are allowed to see the host machine. Most containers
                          will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                          --- TODO(jonesdl) We need to restrict who can use host directory
                          mounts and who can/can not mount host directories as read/write.'
                        properties:
                          path:
                            description: 'Path of the directory on the host. If the
                              path is a symlink, it will follow the link to the real
                              path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                            type: string
                          type:
                            description: 'Type for HostPath Volume Defaults to ""
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                            type: string
                        required:
                        - path
                        type: object
                      iscsi:
                        description: 'ISCSI represents an ISCSI Disk resource that
                          is attached to a kubelet''s host machine and then exposed
                          to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                        properties:
                          chapAuthDiscovery:
                            description: whether support iSCSI Discovery CHAP authentication
                            type: boolean
                          chapAuthSession:
                            description: whether support iSCSI Session CHAP authentication
                            type: boolean
                          fsType:
                            description: 'Filesystem type of the volume that you want
                              to mount. Tip: Ensure that the filesystem type is supported
                              by the host operating system. Examples: "ext4", "xfs",
                              "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                            type: string
                          initiatorName:
                            description: Custom iSCSI Initiator Name. If initiatorName
                              is specified with iscsiInterface simultaneously, new
                              iSCSI interface <target portal>:<volume name> will be
                              created for the connection.
                            type: string
                          iqn:
                            description: Target iSCSI Qualified Name.
                            type: string
                          iscsiInterface:
                            description: iSCSI Interface Name that uses an iSCSI transport.
                              Defaults to 'default' (tcp).
                            type: string
                          lun:
                            description: iSCSI Target Lun number.
                            format: int32
                            type: integer
                          portals:
                            description: iSCSI Target Portal List. The portal is either
                              an IP or ip_addr:port if the port is other than default
                              (typically TCP ports 860 and 3260).
                            items:
                              type: string
                            type: array
                          readOnly:
                            description: ReadOnly here will force the ReadOnly setting
                              in VolumeMounts. Defaults to false.
                            type: boolean
                          secretRef:
                            description: CHAP Secret for iSCSI target and initiator
                              authentication
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          targetPortal:
                            description: iSCSI Target Portal. The Portal is either
                              an IP or ip_addr:port if the port is other than default
                              (typically TCP ports 860 and 3260).
                            type: string
                        required:
                        - iqn
                        - lun
                        - targetPortal
                        type: object
                      name:
                        description: 'Volume''s name. Must be a DNS_LABEL and unique
                          within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      nfs:
                        description: 'NFS represents an NFS mount on the host that
                          shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                        properties:
                          path:
                            description: 'Path that is exported by the NFS server.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                            type: string
                          readOnly:
                            description: 'ReadOnly here will force the NFS export
                              to be mounted with read-only permissions. Defaults to
                              false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                            type: boolean
                          server:
                            description: 'Server is the hostname or IP address of
                              the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                            type: string
                        required:
                        - path
                        - server
                        type: object
                      persistentVolumeClaim:
                        description: 'PersistentVolumeClaimVolumeSource represents
                          a reference to a PersistentVolumeClaim in the same namespace.
                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                        properties:
                          claimName:
                            description: 'ClaimName is the name of a PersistentVolumeClaim
                              in the same namespace as the pod using this volume.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                            type: string
                          readOnly:
                            description: Will force the ReadOnly setting in VolumeMounts.
                              Default false.
                            type: boolean
                        required:
                        - claimName
                        type: object
                      photonPersistentDisk:
                        description: PhotonPersistentDisk represents a PhotonController
                          persistent disk attached and mounted on kubelets host machine
                        properties:
                          fsType:
                            description: Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Ex. "ext4",
                              "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          pdID:
                            description: ID that identifies Photon Controller persistent
                              disk
                            type: string
                        required:
                        - pdID
                        type: object
                      portworxVolume:
                        description: PortworxVolume represents a portworx volume attached
                          and mounted on kubelets host machine
                        properties:
                          fsType:
                            description: FSType represents the filesystem type to
                              mount Must be a filesystem type supported by the host
                              operating system. Ex. "ext4", "xfs". Implicitly inferred
                              to be "ext4" if unspecified.
                            type: string
                          readOnly:
                            description: Defaults to false (read/write). ReadOnly
                              here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          volumeID:
                            description: VolumeID uniquely identifies a Portworx volume
                            type: string
                        required:
                        - volumeID
                        type: object
                      projected:
                        description: Items for all in one resources secrets, configmaps,
                          and downward API
                        properties:
                          defaultMode:
                            description: Mode bits to use on created files by default.
                              Must be a value between 0 and 0777. Directories within
                              the path are not affected by this setting. This might
                              be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode
                              bits set.
                            format: int32
                            type: integer
                          sources:
                            description: list of volume projections
                            items:
                              description: Projection that may be projected along
                                with other supported volume types
                              properties:
                                configMap:
                                  description: information about the configMap data
                                    to project
                                  properties:
                                    items:
                                      description: If unspecified, each key-value
                                        pair in the Data field of the referenced ConfigMap
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified
                                        which is not present in the ConfigMap, the
                                        volume setup will error unless it is marked
                                        optional. Paths must be relative and may not
                                        contain the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: The key to project.
                                            type: string
                                          mode:
                                            description: 'Optional: mode bits to use
                                              on this file, must be a value between
                                              0 and 0777. If not specified, the volume
                                              defaultMode will be used. This might
                                              be in conflict with other options that
                                              affect the file mode, like fsGroup,
                                              and the result can be other mode bits
                                              set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: The relative path of the
                                              file to map the key to. May not be an
                                              absolute path. May not contain the path
                                              element '..'. May not start with the
                                              string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its keys must be defined
                                      type: boolean
                                  type: object
                                downwardAPI:
                                  description: information about the downwardAPI data
                                    to project
                                  properties:
                                    items:
                                      description: Items is a list of DownwardAPIVolume
                                        file
                                      items:
                                        description: DownwardAPIVolumeFile represents
                                          information to create the file containing
                                          the pod field
                                        properties:
                                          fieldRef:
                                            description: 'Required: Selects a field
                                              of the pod: only annotations, labels,
                                              name and namespace are supported.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                          mode:
                                            description: 'Optional: mode bits to use
                                              on this file, must be a value between
                                              0 and 0777. If not specified, the volume
                                              defaultMode will be used. This might
                                              be in conflict with other options that
                                              affect the file mode, like fsGroup,
                                              and the result can be other mode bits
                                              set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: 'Required: Path is  the relative
                                              path name of the file to be created.
                                              Must not be absolute or contain the
                                              ''..'' path. Must be utf-8 encoded.
                                              The first item of the relative path
                                              must not start with ''..'''
                                            type: string
                                          resourceFieldRef:
                                            description: 'Selects a resource of the
                                              container: only resources limits and
                                              requests (limits.cpu, limits.memory,
                                              requests.cpu and requests.memory) are
                                              currently supported.'
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                type: string
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                        required:
                                        - path
                                        type: object
                                      type: array
                                  type: object
                                secret:
                                  description: information about the secret data to
                                    project
                                  properties:
                                    items:
                                      description: If unspecified, each key-value
                                        pair in the Data field of the referenced Secret
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified
                                        which is not present in the Secret, the volume
                                        setup will error unless it is marked optional.
                                        Paths must be relative and may not contain
                                        the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: The key to project.
                                            type: string
                                          mode:
                                            description: 'Optional: mode bits to use
                                              on this file, must be a value between
                                              0 and 0777. If not specified, the volume
                                              defaultMode will be used. This might
                                              be in conflict with other options that
                                              affect the file mode, like fsGroup,
                                              and the result can be other mode bits
                                              set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: The relative path of the
                                              file to map the key to. May not be an
                                              absolute path. May not contain the path
                                              element '..'. May not start with the
                                              string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  type: object
                                serviceAccountToken:
                                  description: information about the serviceAccountToken
                                    data to project
                                  properties:
                                    audience:
                                      description: Audience is the intended audience
                                        of the token. A recipient of a token must
                                        identify itself with an identifier specified
                                        in the audience of the token, and otherwise
                                        should reject the token. The audience defaults
                                        to the identifier of the apiserver.
                                      type: string
                                    expirationSeconds:
                                      description: ExpirationSeconds is the requested
                                        duration of validity of the service account
                                        token. As the token approaches expiration,
                                        the kubelet volume plugin will proactively
                                        rotate the service account token. The kubelet
                                        will start trying to rotate the token if the
                                        token is older than 80 percent of its time
                                        to live or if the token is older than 24 hours.Defaults
                                        to 1 hour and must be at least 10 minutes.
                                      format: int64
                                      type: integer
                                    path:
                                      description: Path is the path relative to the
                                        mount point of the file to project the token
                                        into.
                                      type: string
                                  required:
                                  - path
                                  type: object
                              type: object
                            type: array
                        required:
                        - sources
                        type: object
                      quobyte:
                        description: Quobyte represents a Quobyte mount on the host
                          that shares a pod's lifetime
                        properties:
                          group:
                            description: Group to map volume access to Default is
                              no group
                            type: string
                          readOnly:
                            description: ReadOnly here will force the Quobyte volume
                              to be mounted with read-only permissions. Defaults to
                              false.
                            type: boolean
                          registry:
                            description: Registry represents a single or multiple
                              Quobyte Registry services specified as a string as host:port
                              pair (multiple entries are separated with commas) which
                              acts as the central registry for volumes
                            type: string
                          tenant:
                            description: Tenant owning the given Quobyte volume in
                              the Backend Used with dynamically provisioned Quobyte
                              volumes, value is set by the plugin
                            type: string
                          user:
                            description: User to map volume access to Defaults to
                              serivceaccount user
                            type: string
                          volume:
                            description: Volume is a string that references an already
                              created Quobyte volume by name.
                            type: string
                        required:
                        - registry
                        - volume
                        type: object
                      rbd:
                        description: 'RBD represents a Rados Block Device mount on
                          the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md'
                        properties:
                          fsType:
                            description: 'Filesystem type of the volume that you want
                              to mount. Tip: Ensure that the filesystem type is supported
                              by the host operating system. Examples: "ext4", "xfs",
                              "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                            type: string
                          image:
                            description: 'The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: string
                          keyring:
                            description: 'Keyring is the path to key ring for RBDUser.
                              Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: string
                          monitors:
                            description: 'A collection of Ceph monitors. More info:
                              https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            items:
                              type: string
                            type: array
                          pool:
                            description: 'The rados pool name. Default is rbd. More
                              info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: string
                          readOnly:
                            description: 'ReadOnly here will force the ReadOnly setting
                              in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: boolean
                          secretRef:
                            description: 'SecretRef is name of the authentication
                              secret for RBDUser. If provided overrides keyring. Default
                              is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          user:
                            description: 'The rados user name. Default is admin. More
                              info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: string
                        required:
                        - image
                        - monitors
                        type: object
                      scaleIO:
                        description: ScaleIO represents a ScaleIO persistent volume
                          attached and mounted on Kubernetes nodes.
                        properties:
                          fsType:
                            description: Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Ex. "ext4",
                              "xfs", "ntfs". Default is "xfs".
                            type: string
                          gateway:
                            description: The host address of the ScaleIO API Gateway.
                            type: string
                          protectionDomain:
                            description: The name of the ScaleIO Protection Domain
                              for the configured storage.
                            type: string
                          readOnly:
                            description: Defaults to false (read/write). ReadOnly
                              here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretRef:
                            description: SecretRef references to the secret for ScaleIO
                              user and other sensitive information. If this is not
                              provided, Login operation will fail.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          sslEnabled:
                            description: Flag to enable/disable SSL communication
                              with Gateway, default false
                            type: boolean
                          storageMode:
                            description: Indicates whether the storage for a volume
                              should be ThickProvisioned or ThinProvisioned. Default
                              is ThinProvisioned.
                            type: string
                          storagePool:
                            description: The ScaleIO Storage Pool associated with
                              the protection domain.
                            type: string
                          system:
                            description: The name of the storage system as configured
                              in ScaleIO.
                            type: string
                          volumeName:
                            description: The name of a volume already created in the
                              ScaleIO system that is associated with this volume source.
                            type: string
                        required:
                        - gateway
                        - secretRef
                        - system
                        type: object
                      secret:
                        description: 'Secret represents a secret that should populate
                          this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                        properties:
                          defaultMode:
                            description: 'Optional: mode bits to use on created files
                              by default. Must be a value between 0 and 0777. Defaults
                              to 0644. Directories within the path are not affected
                              by this setting. This might be in conflict with other
                              options that affect the file mode, like fsGroup, and
                              the result can be other mode bits set.'
                            format: int32
                            type: integer
                          items:
                            description: If unspecified, each key-value pair in the
                              Data field of the referenced Secret will be projected
                              into the volume as a file whose name is the key and
                              content is the value. If specified, the listed keys
                              will be projected into the specified paths, and unlisted
                              keys will not be present. If a key is specified which
                              is not present in the Secret, the volume setup will
                              error unless it is marked optional. Paths must be relative
                              and may not contain the '..' path or start with '..'.
                            items:
                              description: Maps a string key to a path within a volume.
                              properties:
                                key:
                                  description: The key to project.
                                  type: string
                                mode:
                                  description: 'Optional: mode bits to use on this
                                    file, must be a value between 0 and 0777. If not
                                    specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that
                                    affect the file mode, like fsGroup, and the result
                                    can be other mode bits set.'
                                  format: int32
                                  type: integer
                                path:
                                  description: The relative path of the file to map
                                    the key to. May not be an absolute path. May not
                                    contain the path element '..'. May not start with
                                    the string '..'.
                                  type: string
                              required:
                              - key
                              - path
                              type: object
                            type: array
                          optional:
                            description: Specify whether the Secret or its keys must
                              be defined
                            type: boolean
                          secretName:
                            description: 'Name of the secret in the pod''s namespace
                              to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                            type: string
                        type: object
                      storageos:
                        description: StorageOS represents a StorageOS volume attached
                          and mounted on Kubernetes nodes.
                        properties:
                          fsType:
                            description: Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Ex. "ext4",
                              "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          readOnly:
                            description: Defaults to false (read/write). ReadOnly
                              here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretRef:
                            description: SecretRef specifies the secret to use for
                              obtaining the StorageOS API credentials.  If not specified,
                              default values will be attempted.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          volumeName:
                            description: VolumeName is the human-readable name of
                              the StorageOS volume.  Volume names are only unique
                              within a namespace.
                            type: string
                          volumeNamespace:
                            description: VolumeNamespace specifies the scope of the
                              volume within StorageOS.  If no namespace is specified
                              then the Pod's namespace will be used.  This allows
                              the Kubernetes name scoping to be mirrored within StorageOS
                              for tighter integration. Set VolumeName to any name
                              to override the default behaviour. Set to "default"
                              if you are not using namespaces within StorageOS. Namespaces
                              that do not pre-exist within StorageOS will be created.
                            type: string
                        type: object
                      vsphereVolume:
                        description: VsphereVolume represents a vSphere volume attached
                          and mounted on kubelets host machine
                        properties:
                          fsType:
                            description: Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Ex. "ext4",
                              "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          storagePolicyID:
                            description: Storage Policy Based Management (SPBM) profile
                              ID associated with the StoragePolicyName.
                            type: string
                          storagePolicyName:
                            description: Storage Policy Based Management (SPBM) profile
                              name.
                            type: string
                          volumePath:
                            description: Path that identifies vSphere volume vmdk
                            type: string
                        required:
                        - volumePath
                        type: object
                    required:
                    - name
                    type: object
                  type: array
                walCompression:
                  description: Enable compression of the write-ahead log using Snappy.
                    This flag is only available in versions of Prometheus >= 2.11.0.
                  type: boolean
              type: object
            status:
              description: 'Most recent observed status of the Prometheus cluster.
                Read-only. Not included when requesting from the apiserver, only from
                the Prometheus Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
              properties:
                availableReplicas:
                  description: Total number of available pods (ready for at least
                    minReadySeconds) targeted by this Prometheus deployment.
                  format: int32
                  type: integer
                paused:
                  description: Represents whether any actions on the underlaying managed
                    objects are being performed. Only delete actions will be performed.
                  type: boolean
                replicas:
                  description: Total number of non-terminated pods targeted by this
                    Prometheus deployment (their labels match the selector).
                  format: int32
                  type: integer
                unavailableReplicas:
                  description: Total number of unavailable pods targeted by this Prometheus
                    deployment.
                  format: int32
                  type: integer
                updatedReplicas:
                  description: Total number of non-terminated pods targeted by this
                    Prometheus deployment that have the desired version spec.
                  format: int32
                  type: integer
              required:
              - availableReplicas
              - paused
              - replicas
              - unavailableReplicas
              - updatedReplicas
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: Prometheus
      listKind: PrometheusList
      plural: prometheuses
      singular: prometheus
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:56Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:56Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: "2020-11-18T12:58:58Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:controller-gen.kubebuilder.io/version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:58Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
      manager: register.test
      operation: Update
      time: "2020-11-20T22:16:09Z"
    name: prometheusrules.monitoring.coreos.com
    resourceVersion: "1040009"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/prometheusrules.monitoring.coreos.com
    uid: d057e13f-9da3-4968-af57-bba4a1570edc
  spec:
    conversion:
      strategy: None
    group: monitoring.coreos.com
    names:
      kind: PrometheusRule
      listKind: PrometheusRuleList
      plural: prometheusrules
      singular: prometheusrule
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: PrometheusRule defines alerting rules for a Prometheus instance
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of desired alerting rule definitions for
                Prometheus.
              properties:
                groups:
                  description: Content of Prometheus rule file
                  items:
                    description: 'RuleGroup is a list of sequentially evaluated recording
                      and alerting rules. Note: PartialResponseStrategy is only used
                      by ThanosRuler and will be ignored by Prometheus instances.  Valid
                      values for this field are ''warn'' or ''abort''.  More info:
                      https://github.com/thanos-io/thanos/blob/master/docs/components/rule.md#partial-response'
                    properties:
                      interval:
                        type: string
                      name:
                        type: string
                      partial_response_strategy:
                        type: string
                      rules:
                        items:
                          description: Rule describes an alerting or recording rule.
                          properties:
                            alert:
                              type: string
                            annotations:
                              additionalProperties:
                                type: string
                              type: object
                            expr:
                              anyOf:
                              - type: integer
                              - type: string
                              x-kubernetes-int-or-string: true
                            for:
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              type: object
                            record:
                              type: string
                          required:
                          - expr
                          type: object
                        type: array
                    required:
                    - name
                    - rules
                    type: object
                  type: array
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: PrometheusRule
      listKind: PrometheusRuleList
      plural: prometheusrules
      singular: prometheusrule
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:58Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:58Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T12:59:24Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:provisioningDHCPExternal:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:provisioningDHCPRange:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:provisioningIP:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:provisioningInterface:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:provisioningNetwork:
                      .: {}
                      f:description: {}
                      f:enum: {}
                      f:type: {}
                    f:provisioningNetworkCIDR:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:provisioningOSDownloadURL:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:conditions:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:generations:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:observedGeneration:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                    f:readyReplicas:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:59:24Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:59:24Z"
    name: provisionings.metal3.io
    resourceVersion: "1862"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/provisionings.metal3.io
    uid: 7b5f32df-da7c-4c38-9fe9-0910b370515d
  spec:
    conversion:
      strategy: None
    group: metal3.io
    names:
      kind: Provisioning
      listKind: ProvisioningList
      plural: provisionings
      singular: provisioning
    preserveUnknownFields: true
    scope: Cluster
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Provisioning contains configuration used by the Provisioning
            service (Ironic) to provision baremetal hosts. \n Provisioning is created
            by the Openshift installer using admin or user provided information about
            the provisioning network and the NIC on the server that can be used to
            PXE boot it. \n This CR is a singleton, created by the installer and currently
            only consumed by the machine-api-operator to bring up and update containers
            in a metal3 cluster.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of provisioning configuration for Metal3.
              properties:
                provisioningDHCPExternal:
                  description: provisioningDHCPExternal indicates whether the DHCP
                    server for IP addresses in the provisioning DHCP range is present
                    within the metal3 cluster or external to it. This field is being
                    deprecated in favor of provisioningNetwork.
                  type: boolean
                provisioningDHCPRange:
                  description: Needs to be interpreted along with provisioningDHCPExternal
                    or provisioningNetwork. If the value of provisioningDHCPExternal
                    is set to False, provisioningDHCPRange represents the range of
                    IP addresses that the DHCP server running within the metal3 cluster
                    can use while provisioning baremetal servers. If the value of
                    provisioningDHCPExternal is set to True, then the value of provisioningDHCPRange
                    will be ignored. When the value of provisioningDHCPExternal is
                    set to False, indicating an internal DHCP server and the value
                    of provisioningDHCPRange is not set, then the DHCP range is taken
                    to be the default range which goes from .10 to .100 of the provisioningNetworkCIDR.
                    This is the only value in all of the provisioning configuration
                    that can be changed after the installer has created the CR. This
                    value needs to be two comma sererated IP addresses within the
                    provisioningNetworkCIDR where the 1st address represents the start
                    of the range and the 2nd address represents the last usable address
                    in the range. When the provisioningNetwork is set to `Managed`,
                    the value of provisioningDHCPRange would be used and ignored in
                    the other 2 modes.
                  type: string
                provisioningIP:
                  description: provisioningIP is the IP address assigned to the provisioningInterface
                    of the baremetal server. This IP address should be within the
                    provisioning subnet, and outside of the DHCP range.
                  type: string
                provisioningInterface:
                  description: provisioningInterface is the name of the network interface
                    on a baremetal server to the provisioning network. It can have
                    values like eth1 or ens3.
                  type: string
                provisioningNetwork:
                  description: provisioningNetwork provides a way to indicate the
                    state of the underlying network configuration for the provisioning
                    network. This field can have one of the following values - `Managed`-
                    when the provisioning network is completely managed by the Baremetal
                    IPI solution. `Unmanaged`- when the provsioning network is present
                    and used but the user is responsible for managing DHCP. Virtual
                    media provisioning is recommended but PXE is still available if
                    required. `Disabled`- when the provisioning network is fully disabled.
                    User can bring up the baremetal cluster using virtual media or
                    assisted installation. If using metal3 for power management, BMCs
                    must be accessible from the machine networks. User should provide
                    two IPs on the external network that would be used for provisioning
                    services.
                  enum:
                  - Managed
                  - Unmanaged
                  - Disabled
                  type: string
                provisioningNetworkCIDR:
                  description: provisioningNetworkCIDR is the network on which the
                    baremetal nodes are provisioned. The provisioningIP and the IPs
                    in the dhcpRange all come from within this network.
                  type: string
                provisioningOSDownloadURL:
                  description: provisioningOSDownloadURL is the location from which
                    the OS Image used to boot baremetal host machines can be downloaded
                    by the metal3 cluster.
                  type: string
              type: object
            status:
              description: status holds observed values from the cluster. They may
                not be overridden.
              properties:
                conditions:
                  description: conditions is a list of conditions and their status
                  items:
                    description: OperatorCondition is just the standard condition
                      fields.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
                generations:
                  description: generations are used to determine when an item needs
                    to be reconciled or has changed in a way that needs a reaction.
                  items:
                    description: GenerationStatus keeps track of the generation for
                      a given resource so that decisions about forced updates can
                      be made.
                    properties:
                      group:
                        description: group is the group of the thing you're tracking
                        type: string
                      hash:
                        description: hash is an optional field set for resources without
                          generation that are content sensitive like secrets and configmaps
                        type: string
                      lastGeneration:
                        description: lastGeneration is the last generation of the
                          workload controller involved
                        format: int64
                        type: integer
                      name:
                        description: name is the name of the thing you're tracking
                        type: string
                      namespace:
                        description: namespace is where the thing you're tracking
                          is
                        type: string
                      resource:
                        description: resource is the resource type of the thing you're
                          tracking
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration is the last generation change you've
                    dealt with
                  format: int64
                  type: integer
                readyReplicas:
                  description: readyReplicas indicates how many replicas are ready
                    and at the desired state
                  format: int32
                  type: integer
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Provisioning
      listKind: ProvisioningList
      plural: provisionings
      singular: provisioning
    conditions:
    - lastTransitionTime: "2020-11-18T12:59:24Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:59:24Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:30Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:httpProxy:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:httpsProxy:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:noProxy:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:readinessEndpoints:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:trustedCA:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:name:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:required: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:httpProxy:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:httpsProxy:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:noProxy:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:30Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:30Z"
    name: proxies.config.openshift.io
    resourceVersion: "284"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/proxies.config.openshift.io
    uid: 845bf933-b9fb-4dd6-b6a9-0abe988b3c71
  spec:
    conversion:
      strategy: None
    group: config.openshift.io
    names:
      kind: Proxy
      listKind: ProxyList
      plural: proxies
      singular: proxy
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Proxy holds cluster-wide information on how to configure default
            proxies for the cluster. The canonical name is `cluster`
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec holds user-settable values for the proxy configuration
              properties:
                httpProxy:
                  description: httpProxy is the URL of the proxy for HTTP requests.  Empty
                    means unset and will not result in an env var.
                  type: string
                httpsProxy:
                  description: httpsProxy is the URL of the proxy for HTTPS requests.  Empty
                    means unset and will not result in an env var.
                  type: string
                noProxy:
                  description: noProxy is a comma-separated list of hostnames and/or
                    CIDRs for which the proxy should not be used. Empty means unset
                    and will not result in an env var.
                  type: string
                readinessEndpoints:
                  description: readinessEndpoints is a list of endpoints used to verify
                    readiness of the proxy.
                  items:
                    type: string
                  type: array
                trustedCA:
                  description: "trustedCA is a reference to a ConfigMap containing
                    a CA certificate bundle. The trustedCA field should only be consumed
                    by a proxy validator. The validator is responsible for reading
                    the certificate bundle from the required key \"ca-bundle.crt\",
                    merging it with the system default trust bundle, and writing the
                    merged trust bundle to a ConfigMap named \"trusted-ca-bundle\"
                    in the \"openshift-config-managed\" namespace. Clients that expect
                    to make proxy connections must use the trusted-ca-bundle for all
                    HTTPS requests to the proxy, and may use the trusted-ca-bundle
                    for non-proxy HTTPS requests as well. \n The namespace for the
                    ConfigMap referenced by trustedCA is \"openshift-config\". Here
                    is an example ConfigMap (in yaml): \n apiVersion: v1 kind: ConfigMap
                    metadata:  name: user-ca-bundle  namespace: openshift-config  data:
                    \   ca-bundle.crt: |      -----BEGIN CERTIFICATE-----      Custom
                    CA certificate bundle.      -----END CERTIFICATE-----"
                  properties:
                    name:
                      description: name is the metadata.name of the referenced config
                        map
                      type: string
                  required:
                  - name
                  type: object
              type: object
            status:
              description: status holds observed values from the cluster. They may
                not be overridden.
              properties:
                httpProxy:
                  description: httpProxy is the URL of the proxy for HTTP requests.
                  type: string
                httpsProxy:
                  description: httpsProxy is the URL of the proxy for HTTPS requests.
                  type: string
                noProxy:
                  description: noProxy is a comma-separated list of hostnames and/or
                    CIDRs for which the proxy should not be used.
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Proxy
      listKind: ProxyList
      plural: proxies
      singular: proxy
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:30Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:30Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:30Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:30Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:31Z"
    name: rangeallocations.security.internal.openshift.io
    resourceVersion: "294"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/rangeallocations.security.internal.openshift.io
    uid: 956d0662-f6b0-4e47-a121-722bb0c7ea69
  spec:
    conversion:
      strategy: None
    group: security.internal.openshift.io
    names:
      kind: RangeAllocation
      listKind: RangeAllocationList
      plural: rangeallocations
      singular: rangeallocation
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: RangeAllocation is used so we can easily expose a RangeAllocation
            typed for security group This is an internal API, not intended for external
            consumption.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            data:
              description: data is a byte array representing the serialized state
                of a range allocation.  It is a bitmap with each bit set to one to
                represent a range is taken.
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            range:
              description: range is a string representing a unique label for a range
                of uids, "1000000000-2000000000/10000".
              type: string
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: RangeAllocation
      listKind: RangeAllocationList
      plural: rangeallocations
      singular: rangeallocation
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:30Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:31Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.3.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.3.0","meta.helm.sh/release-name":"rhm-operator","meta.helm.sh/release-namespace":"openshift-redhat-marketplace"},"creationTimestamp":null,"labels":{"app.kubernetes.io/managed-by":"Helm","redhat.marketplace.com/name":"redhat-marketplace-operator"},"name":"razeedeployments.marketplace.redhat.com"},"spec":{"additionalPrinterColumns":[{"JSONPath":".status.installConditions[?(@.type == \"Installing\")].status","name":"INSTALLING","type":"string"},{"JSONPath":".status.installConditions[?(@.type == \"Installing\")].reason","name":"STEP","type":"string"},{"JSONPath":".status.nodesFromRazeeDeploymentsCount","name":"APPS","type":"integer"}],"group":"marketplace.redhat.com","names":{"kind":"RazeeDeployment","listKind":"RazeeDeploymentList","plural":"razeedeployments","singular":"razeedeployment"},"preserveUnknownFields":false,"scope":"Namespaced","subresources":{"status":{}},"validation":{"openAPIV3Schema":{"description":"RazeeDeployment is the resources that deploys Razee for the Red Hat Marketplace. This is an internal resource not meant to be modified directly.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"RazeeDeploymentSpec defines the desired state of RazeeDeployment","properties":{"childUrl":{"description":"Location of your IBM Cloud Object Storage resources Used internally by the Operator","type":"string"},"clusterUUID":{"description":"ClusterUUID is the cluster identifier, used for installing razee.","type":"string"},"deployConfig":{"description":"Configuration values provided from redhat marketplace These are used internally by the Operator","properties":{"bucketName":{"description":"BucketName is the name of the bucket in Cloud Object Storage and correlates to your accountID","type":"string"},"childRRS3FileName":{"description":"The file name of the child RemoteResourecS3","type":"string"},"fileSourceUrl":{"description":"FileSourceURL DEPRECATED: The url of the filesource arg that gets passed into the razeedeploy-job","type":"string"},"ibmCosReaderKey":{"description":"Api key used to access the bucket IBM COS","properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"required":["key"],"type":"object"},"ibmCosUrl":{"description":"Base url for the instance of IBM COS","type":"string"},"razeeDashOrgKey":{"description":"Key used to identify a particular razee instance","properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"required":["key"],"type":"object"},"razeeDashUrl":{"description":"Url used by the razee install to post data","type":"string"}},"type":"object"},"deploySecretName":{"description":"DeploySecretName is the name of our secret where Razee variables are stored.","type":"string"},"enabled":{"description":"Enabled is the flag that controls if the controller does work. Setting enabled to true will create a Razee namespace and deploy it's componenets. Set to false to bypass Razee installation","type":"boolean"},"features":{"description":"The features that can be enabled or disabled","properties":{"deployment":{"description":"Deployment represents the enablement of the razee deployment, defaults to true when not set","type":"boolean"},"registration":{"description":"Registration represents the enablement of the registration watchkeeper deployment, defaults to true when not set","type":"boolean"}},"type":"object"},"legacyUninstallHasRun":{"description":"Flag used by the RazeeDeployment Controller to decide whether to run legacy uninstall job Used internally by the Operator","type":"boolean"},"targetNamespace":{"description":"TargetNamespace is configurable target of the razee namespace This is to support legancy installs. Please do not edit.","type":"string"}},"required":["clusterUUID","enabled"],"type":"object"},"status":{"description":"RazeeDeploymentStatus defines the observed state of RazeeDeployment","properties":{"conditions":{"description":"JobConditions DEPRECATED: represent the latest available observations of an object's stateonfig","properties":{"lastProbeTime":{"description":"Last time the condition was checked.","format":"date-time","type":"string"},"lastTransitionTime":{"description":"Last time the condition transit from one status to another.","format":"date-time","type":"string"},"message":{"description":"Human readable message indicating details about last transition.","type":"string"},"reason":{"description":"(brief) reason for the condition's last transition.","type":"string"},"status":{"description":"Status of the condition, one of True, False, Unknown.","type":"string"},"type":{"description":"Type of job condition, Complete or Failed.","type":"string"}},"required":["status","type"],"type":"object"},"installConditions":{"description":"RazeeConditions represent the latest available observations of an object's stateonfig","items":{"description":"Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.","properties":{"lastTransitionTime":{"format":"date-time","type":"string"},"message":{"type":"string"},"reason":{"description":"ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.","type":"string"},"status":{"type":"string"},"type":{"description":"ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\".","type":"string"}},"required":["status","type"],"type":"object"},"type":"array"},"jobState":{"description":"JobState DEPRECATED: is the status of the Razee Install Job","properties":{"active":{"description":"The number of actively running pods.","format":"int32","type":"integer"},"completionTime":{"description":"Represents time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.","format":"date-time","type":"string"},"conditions":{"description":"The latest available observations of an object's current state. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/","items":{"description":"JobCondition describes current state of a job.","properties":{"lastProbeTime":{"description":"Last time the condition was checked.","format":"date-time","type":"string"},"lastTransitionTime":{"description":"Last time the condition transit from one status to another.","format":"date-time","type":"string"},"message":{"description":"Human readable message indicating details about last transition.","type":"string"},"reason":{"description":"(brief) reason for the condition's last transition.","type":"string"},"status":{"description":"Status of the condition, one of True, False, Unknown.","type":"string"},"type":{"description":"Type of job condition, Complete or Failed.","type":"string"}},"required":["status","type"],"type":"object"},"type":"array"},"failed":{"description":"The number of pods which reached phase Failed.","format":"int32","type":"integer"},"startTime":{"description":"Represents time when the job was acknowledged by the job controller. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.","format":"date-time","type":"string"},"succeeded":{"description":"The number of pods which reached phase Succeeded.","format":"int32","type":"integer"}},"type":"object"},"localSecretVarsPopulated":{"description":"LocalSecretVarsPopulated DEPRECATED: informs if the correct local variables are correct set.","type":"boolean"},"missingValuesFromSecret":{"description":"MissingValuesFromSecret validates the secret provided has all the correct fields","items":{"type":"string"},"type":"array"},"nodesFromRazeeDeployments":{"description":"NodesFromRazeeDeployments contains the pods names created by the rhm-watch-keeper and rhm-remote-resources3-controller deployments","items":{"type":"string"},"type":"array"},"nodesFromRazeeDeploymentsCount":{"description":"NodesFromRazeeDeploymentsCount contains the pods names created by the rhm-watch-keeper and rhm-remote-resources3-controller deployments","type":"integer"},"razeePrerequisitesCreated":{"description":"RazeePrerequestesCreated is the list of configmaps and secrets required to be installed","items":{"type":"string"},"type":"array"},"razee_job_install":{"description":"RazeeJobInstall contains information regarding the install job so it can be removed","properties":{"razee_install_url":{"description":"RazeeInstallURL is the url used to install the Razee resources","type":"string"},"razee_namespace":{"description":"RazeeNamespace is the namespace targeted for the Razee install","type":"string"}},"required":["razee_install_url","razee_namespace"],"type":"object"},"redHatMarketplaceSecretFound":{"description":"RedHatMarketplaceSecretFound DEPRECATED: is the status of finding the secret in the cluster","type":"boolean"}},"type":"object"}},"type":"object"}},"version":"v1alpha1","versions":[{"name":"v1alpha1","served":true,"storage":true}]},"status":{"acceptedNames":{"kind":"","plural":""},"conditions":[],"storedVersions":[]}}
      meta.helm.sh/release-name: rhm-operator
      meta.helm.sh/release-namespace: openshift-redhat-marketplace
    creationTimestamp: "2021-01-12T17:45:19Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      redhat.marketplace.com/name: redhat-marketplace-operator
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:listKind: {}
            f:singular: {}
      manager: kube-apiserver
      operation: Update
      time: "2021-01-12T17:45:19Z"
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:controller-gen.kubebuilder.io/version: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
            f:redhat.marketplace.com/name: {}
        f:spec:
          f:additionalPrinterColumns: {}
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:childUrl:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:clusterUUID:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:deployConfig:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:bucketName:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:childRRS3FileName:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:fileSourceUrl:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:ibmCosReaderKey:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:key:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:name:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:optional:
                              .: {}
                              f:description: {}
                              f:type: {}
                          f:required: {}
                          f:type: {}
                        f:ibmCosUrl:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:razeeDashOrgKey:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:key:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:name:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:optional:
                              .: {}
                              f:description: {}
                              f:type: {}
                          f:required: {}
                          f:type: {}
                        f:razeeDashUrl:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                    f:deploySecretName:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:enabled:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:features:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:deployment:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:registration:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                    f:legacyUninstallHasRun:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:targetNamespace:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:conditions:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:lastProbeTime:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                        f:lastTransitionTime:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                        f:message:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:reason:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:status:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:type:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:required: {}
                      f:type: {}
                    f:installConditions:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:jobState:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:active:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                        f:completionTime:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                        f:conditions:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                        f:failed:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                        f:startTime:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                        f:succeeded:
                          .: {}
                          f:description: {}
                          f:format: {}
                          f:type: {}
                      f:type: {}
                    f:localSecretVarsPopulated:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:missingValuesFromSecret:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:nodesFromRazeeDeployments:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:nodesFromRazeeDeploymentsCount:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:razee_job_install:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:razee_install_url:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:razee_namespace:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:required: {}
                      f:type: {}
                    f:razeePrerequisitesCreated:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:redHatMarketplaceSecretFound:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:type: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
          f:storedVersions: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2021-01-12T17:47:25Z"
    name: razeedeployments.marketplace.redhat.com
    resourceVersion: "36610219"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/razeedeployments.marketplace.redhat.com
    uid: fcf4957d-7725-4950-8bd3-c4820f8e85c0
  spec:
    conversion:
      strategy: None
    group: marketplace.redhat.com
    names:
      kind: RazeeDeployment
      listKind: RazeeDeploymentList
      plural: razeedeployments
      singular: razeedeployment
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.installConditions[?(@.type == "Installing")].status
        name: INSTALLING
        type: string
      - jsonPath: .status.installConditions[?(@.type == "Installing")].reason
        name: STEP
        type: string
      - jsonPath: .status.nodesFromRazeeDeploymentsCount
        name: APPS
        type: integer
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: RazeeDeployment is the resources that deploys Razee for the
            Red Hat Marketplace. This is an internal resource not meant to be modified
            directly.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: RazeeDeploymentSpec defines the desired state of RazeeDeployment
              properties:
                childUrl:
                  description: Location of your IBM Cloud Object Storage resources
                    Used internally by the Operator
                  type: string
                clusterUUID:
                  description: ClusterUUID is the cluster identifier, used for installing
                    razee.
                  type: string
                deployConfig:
                  description: Configuration values provided from redhat marketplace
                    These are used internally by the Operator
                  properties:
                    bucketName:
                      description: BucketName is the name of the bucket in Cloud Object
                        Storage and correlates to your accountID
                      type: string
                    childRRS3FileName:
                      description: The file name of the child RemoteResourecS3
                      type: string
                    fileSourceUrl:
                      description: 'FileSourceURL DEPRECATED: The url of the filesource
                        arg that gets passed into the razeedeploy-job'
                      type: string
                    ibmCosReaderKey:
                      description: Api key used to access the bucket IBM COS
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                    ibmCosUrl:
                      description: Base url for the instance of IBM COS
                      type: string
                    razeeDashOrgKey:
                      description: Key used to identify a particular razee instance
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                    razeeDashUrl:
                      description: Url used by the razee install to post data
                      type: string
                  type: object
                deploySecretName:
                  description: DeploySecretName is the name of our secret where Razee
                    variables are stored.
                  type: string
                enabled:
                  description: Enabled is the flag that controls if the controller
                    does work. Setting enabled to true will create a Razee namespace
                    and deploy it's componenets. Set to false to bypass Razee installation
                  type: boolean
                features:
                  description: The features that can be enabled or disabled
                  properties:
                    deployment:
                      description: Deployment represents the enablement of the razee
                        deployment, defaults to true when not set
                      type: boolean
                    registration:
                      description: Registration represents the enablement of the registration
                        watchkeeper deployment, defaults to true when not set
                      type: boolean
                  type: object
                legacyUninstallHasRun:
                  description: Flag used by the RazeeDeployment Controller to decide
                    whether to run legacy uninstall job Used internally by the Operator
                  type: boolean
                targetNamespace:
                  description: TargetNamespace is configurable target of the razee
                    namespace This is to support legancy installs. Please do not edit.
                  type: string
              required:
              - clusterUUID
              - enabled
              type: object
            status:
              description: RazeeDeploymentStatus defines the observed state of RazeeDeployment
              properties:
                conditions:
                  description: 'JobConditions DEPRECATED: represent the latest available
                    observations of an object''s stateonfig'
                  properties:
                    lastProbeTime:
                      description: Last time the condition was checked.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transit from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: (brief) reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of job condition, Complete or Failed.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                installConditions:
                  description: RazeeConditions represent the latest available observations
                    of an object's stateonfig
                  items:
                    description: "Condition represents an observation of an object's
                      state. Conditions are an extension mechanism intended to be
                      used when the details of an observation are not a priori known
                      or would not apply to all instances of a given Kind. \n Conditions
                      should be added to explicitly convey properties that users and
                      components care about rather than requiring those properties
                      to be inferred from other observations. Once defined, the meaning
                      of a Condition can not be changed arbitrarily - it becomes part
                      of the API, and has the same backwards- and forwards-compatibility
                      concerns of any other part of the API."
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        description: ConditionReason is intended to be a one-word,
                          CamelCase representation of the category of cause of the
                          current status. It is intended to be used in concise output,
                          such as one-line kubectl get output, and in summarizing
                          occurrences of causes.
                        type: string
                      status:
                        type: string
                      type:
                        description: "ConditionType is the type of the condition and
                          is typically a CamelCased word or short phrase. \n Condition
                          types should indicate state in the \"abnormal-true\" polarity.
                          For example, if the condition indicates when a policy is
                          invalid, the \"is valid\" case is probably the norm, so
                          the condition should be called \"Invalid\"."
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                jobState:
                  description: 'JobState DEPRECATED: is the status of the Razee Install
                    Job'
                  properties:
                    active:
                      description: The number of actively running pods.
                      format: int32
                      type: integer
                    completionTime:
                      description: Represents time when the job was completed. It
                        is not guaranteed to be set in happens-before order across
                        separate operations. It is represented in RFC3339 form and
                        is in UTC.
                      format: date-time
                      type: string
                    conditions:
                      description: 'The latest available observations of an object''s
                        current state. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/'
                      items:
                        description: JobCondition describes current state of a job.
                        properties:
                          lastProbeTime:
                            description: Last time the condition was checked.
                            format: date-time
                            type: string
                          lastTransitionTime:
                            description: Last time the condition transit from one
                              status to another.
                            format: date-time
                            type: string
                          message:
                            description: Human readable message indicating details
                              about last transition.
                            type: string
                          reason:
                            description: (brief) reason for the condition's last transition.
                            type: string
                          status:
                            description: Status of the condition, one of True, False,
                              Unknown.
                            type: string
                          type:
                            description: Type of job condition, Complete or Failed.
                            type: string
                        required:
                        - status
                        - type
                        type: object
                      type: array
                    failed:
                      description: The number of pods which reached phase Failed.
                      format: int32
                      type: integer
                    startTime:
                      description: Represents time when the job was acknowledged by
                        the job controller. It is not guaranteed to be set in happens-before
                        order across separate operations. It is represented in RFC3339
                        form and is in UTC.
                      format: date-time
                      type: string
                    succeeded:
                      description: The number of pods which reached phase Succeeded.
                      format: int32
                      type: integer
                  type: object
                localSecretVarsPopulated:
                  description: 'LocalSecretVarsPopulated DEPRECATED: informs if the
                    correct local variables are correct set.'
                  type: boolean
                missingValuesFromSecret:
                  description: MissingValuesFromSecret validates the secret provided
                    has all the correct fields
                  items:
                    type: string
                  type: array
                nodesFromRazeeDeployments:
                  description: NodesFromRazeeDeployments contains the pods names created
                    by the rhm-watch-keeper and rhm-remote-resources3-controller deployments
                  items:
                    type: string
                  type: array
                nodesFromRazeeDeploymentsCount:
                  description: NodesFromRazeeDeploymentsCount contains the pods names
                    created by the rhm-watch-keeper and rhm-remote-resources3-controller
                    deployments
                  type: integer
                razee_job_install:
                  description: RazeeJobInstall contains information regarding the
                    install job so it can be removed
                  properties:
                    razee_install_url:
                      description: RazeeInstallURL is the url used to install the
                        Razee resources
                      type: string
                    razee_namespace:
                      description: RazeeNamespace is the namespace targeted for the
                        Razee install
                      type: string
                  required:
                  - razee_install_url
                  - razee_namespace
                  type: object
                razeePrerequisitesCreated:
                  description: RazeePrerequestesCreated is the list of configmaps
                    and secrets required to be installed
                  items:
                    type: string
                  type: array
                redHatMarketplaceSecretFound:
                  description: 'RedHatMarketplaceSecretFound DEPRECATED: is the status
                    of finding the secret in the cluster'
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: RazeeDeployment
      listKind: RazeeDeploymentList
      plural: razeedeployments
      singular: razeedeployment
    conditions:
    - lastTransitionTime: "2021-01-12T17:45:19Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-01-12T17:45:19Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.3.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.3.0","meta.helm.sh/release-name":"rhm-operator","meta.helm.sh/release-namespace":"openshift-redhat-marketplace"},"labels":{"app.kubernetes.io/managed-by":"Helm","redhat.marketplace.com/name":"redhat-marketplace-operator"},"name":"remoteresources3s.marketplace.redhat.com"},"spec":{"group":"marketplace.redhat.com","names":{"kind":"RemoteResourceS3","listKind":"RemoteResourceS3List","plural":"remoteresources3s","singular":"remoteresources3"},"preserveUnknownFields":true,"scope":"Namespaced","subresources":{"status":{}},"validation":{"openAPIV3Schema":{"description":"RemoteResourceS3 is the Schema for the remoteresources3s API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"RemoteResourceS3Spec defines the desired state of RemoteResourceS3","properties":{"auth":{"description":"Auth provides options to authenticate to a remote location","properties":{"hmac":{"description":"Hmac is the credentials to access the storage location.","properties":{"accessKeyId":{"description":"AccessKeyID is a unique identifier for an AWS account and is used by AWS to look up your Secret Access Key","type":"string"},"accessKeyIdRef":{"description":"AccessKeyIDRef holds reference information to an AccessKeyID stored in a secret on your cluster","properties":{"valueFrom":{"description":"ValueFrom is the pointer to the secret key ref","properties":{"secretKeyRef":{"description":"SecretKeyRef is the pointer to the secret key ref","properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"required":["key"],"type":"object"}},"type":"object"}},"type":"object"},"secretAccessKey":{"description":"SecretAccessKey is used by AWS to calculate a request signature. Your SecretAccessKey is a shared secret known only to you and AWS","type":"string"},"secretAccessKeyRef":{"description":"SecretAccessKeyRef holds reference information to an SecretAccessKey stored in a secret on your cluster","properties":{"valueFrom":{"description":"ValueFrom is the pointer to the secret key ref","properties":{"secretKeyRef":{"description":"SecretKeyRef is the pointer to the secret key ref","properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"required":["key"],"type":"object"}},"type":"object"}},"type":"object"}},"type":"object"},"iam":{"description":"Iam is the credentials for Iam auth.","properties":{"apiKey":{"description":"APIKey is the API Key used to authenticate to your IBM Cloud Object Storage instance","type":"string"},"apiKeyRef":{"description":"APIKeyRef holds reference information used to locate a secret which contains your IBM COS api key","properties":{"valueFrom":{"description":"ValueFrom is the pointer to the secret key ref","properties":{"secretKeyRef":{"description":"SecretKeyRef is the pointer to the secret key ref","properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"required":["key"],"type":"object"}},"type":"object"}},"type":"object"},"grantType":{"description":"GrantType determines what authentication flow will be used to generate an access token. GrantType for IAM will usually be \" \"urn:ibm:params:oauth:grant-type:apikey\"\"","type":"string"},"responseType":{"description":"ResponseType specifies which grant type your application is requesting. ResponseType for IAM will usually be \"cloud_iam\"","type":"string"},"url":{"description":"URL is the auth endpoint. URL for IAM will usually be \"https://iam.cloud.ibm.com/identity/token\"","type":"string"}},"type":"object"}},"type":"object"},"requests":{"description":"Requests array contains information regarding the location of your remote resource","items":{"description":"Request holds requests that populate the Requests array","properties":{"optional":{"description":"Optional if downloading or applying a child resource fails, RemoteResource will stop execution and report error to .status. You can allow execution to continue by marking a reference as optional.","type":"boolean"},"options":{"description":"Options is the configurable options for the request","properties":{"headers":{"additionalProperties":{"additionalProperties":{"type":"string"},"description":"Header allows you to provide additional information with your request","type":"object"},"description":"Headers of the request","type":"object"},"uri":{"description":"URI of the request","type":"string"},"url":{"description":"URL of the request","type":"string"}},"type":"object"}},"type":"object"},"type":"array"}},"type":"object"},"status":{"description":"RemoteResourceS3Status defines the observed state of RemoteResourceS3","properties":{"razee-logs":{"description":"RazeeLogs is the logs from the controller","properties":{"error":{"additionalProperties":{"type":"string"},"description":"Log is a line of log from the controller","type":"object"}},"type":"object"},"touched":{"description":"Touched is if the status has been touched","type":"boolean"}},"type":"object"}},"type":"object"}},"version":"v1alpha1","versions":[{"name":"v1alpha1","served":true,"storage":true}]},"status":{"acceptedNames":{"kind":"","plural":""},"conditions":[],"storedVersions":[]}}
      meta.helm.sh/release-name: rhm-operator
      meta.helm.sh/release-namespace: openshift-redhat-marketplace
    creationTimestamp: "2021-01-12T17:45:19Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      redhat.marketplace.com/name: redhat-marketplace-operator
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:listKind: {}
            f:singular: {}
      manager: kube-apiserver
      operation: Update
      time: "2021-01-12T17:45:19Z"
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:controller-gen.kubebuilder.io/version: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
            f:redhat.marketplace.com/name: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:auth:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:hmac:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:accessKeyId:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:accessKeyIdRef:
                              .: {}
                              f:description: {}
                              f:properties:
                                .: {}
                                f:valueFrom:
                                  .: {}
                                  f:description: {}
                                  f:properties:
                                    .: {}
                                    f:secretKeyRef:
                                      .: {}
                                      f:description: {}
                                      f:properties:
                                        .: {}
                                        f:key:
                                          .: {}
                                          f:description: {}
                                          f:type: {}
                                        f:name:
                                          .: {}
                                          f:description: {}
                                          f:type: {}
                                        f:optional:
                                          .: {}
                                          f:description: {}
                                          f:type: {}
                                      f:required: {}
                                      f:type: {}
                                  f:type: {}
                              f:type: {}
                            f:secretAccessKey:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:secretAccessKeyRef:
                              .: {}
                              f:description: {}
                              f:properties:
                                .: {}
                                f:valueFrom:
                                  .: {}
                                  f:description: {}
                                  f:properties:
                                    .: {}
                                    f:secretKeyRef:
                                      .: {}
                                      f:description: {}
                                      f:properties:
                                        .: {}
                                        f:key:
                                          .: {}
                                          f:description: {}
                                          f:type: {}
                                        f:name:
                                          .: {}
                                          f:description: {}
                                          f:type: {}
                                        f:optional:
                                          .: {}
                                          f:description: {}
                                          f:type: {}
                                      f:required: {}
                                      f:type: {}
                                  f:type: {}
                              f:type: {}
                          f:type: {}
                        f:iam:
                          .: {}
                          f:description: {}
                          f:properties:
                            .: {}
                            f:apiKey:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:apiKeyRef:
                              .: {}
                              f:description: {}
                              f:properties:
                                .: {}
                                f:valueFrom:
                                  .: {}
                                  f:description: {}
                                  f:properties:
                                    .: {}
                                    f:secretKeyRef:
                                      .: {}
                                      f:description: {}
                                      f:properties:
                                        .: {}
                                        f:key:
                                          .: {}
                                          f:description: {}
                                          f:type: {}
                                        f:name:
                                          .: {}
                                          f:description: {}
                                          f:type: {}
                                        f:optional:
                                          .: {}
                                          f:description: {}
                                          f:type: {}
                                      f:required: {}
                                      f:type: {}
                                  f:type: {}
                              f:type: {}
                            f:grantType:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:responseType:
                              .: {}
                              f:description: {}
                              f:type: {}
                            f:url:
                              .: {}
                              f:description: {}
                              f:type: {}
                          f:type: {}
                      f:type: {}
                    f:requests:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:razee-logs:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:error:
                          .: {}
                          f:additionalProperties: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                    f:touched:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:type: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
          f:storedVersions: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2021-01-12T17:47:25Z"
    name: remoteresources3s.marketplace.redhat.com
    resourceVersion: "36610220"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/remoteresources3s.marketplace.redhat.com
    uid: f3bf2d82-d38e-46ef-a46e-597d51c524fc
  spec:
    conversion:
      strategy: None
    group: marketplace.redhat.com
    names:
      kind: RemoteResourceS3
      listKind: RemoteResourceS3List
      plural: remoteresources3s
      singular: remoteresources3
    preserveUnknownFields: true
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: RemoteResourceS3 is the Schema for the remoteresources3s API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: RemoteResourceS3Spec defines the desired state of RemoteResourceS3
              properties:
                auth:
                  description: Auth provides options to authenticate to a remote location
                  properties:
                    hmac:
                      description: Hmac is the credentials to access the storage location.
                      properties:
                        accessKeyId:
                          description: AccessKeyID is a unique identifier for an AWS
                            account and is used by AWS to look up your Secret Access
                            Key
                          type: string
                        accessKeyIdRef:
                          description: AccessKeyIDRef holds reference information
                            to an AccessKeyID stored in a secret on your cluster
                          properties:
                            valueFrom:
                              description: ValueFrom is the pointer to the secret
                                key ref
                              properties:
                                secretKeyRef:
                                  description: SecretKeyRef is the pointer to the
                                    secret key ref
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          type: object
                        secretAccessKey:
                          description: SecretAccessKey is used by AWS to calculate
                            a request signature. Your SecretAccessKey is a shared
                            secret known only to you and AWS
                          type: string
                        secretAccessKeyRef:
                          description: SecretAccessKeyRef holds reference information
                            to an SecretAccessKey stored in a secret on your cluster
                          properties:
                            valueFrom:
                              description: ValueFrom is the pointer to the secret
                                key ref
                              properties:
                                secretKeyRef:
                                  description: SecretKeyRef is the pointer to the
                                    secret key ref
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          type: object
                      type: object
                    iam:
                      description: Iam is the credentials for Iam auth.
                      properties:
                        apiKey:
                          description: APIKey is the API Key used to authenticate
                            to your IBM Cloud Object Storage instance
                          type: string
                        apiKeyRef:
                          description: APIKeyRef holds reference information used
                            to locate a secret which contains your IBM COS api key
                          properties:
                            valueFrom:
                              description: ValueFrom is the pointer to the secret
                                key ref
                              properties:
                                secretKeyRef:
                                  description: SecretKeyRef is the pointer to the
                                    secret key ref
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          type: object
                        grantType:
                          description: GrantType determines what authentication flow
                            will be used to generate an access token. GrantType for
                            IAM will usually be " "urn:ibm:params:oauth:grant-type:apikey""
                          type: string
                        responseType:
                          description: ResponseType specifies which grant type your
                            application is requesting. ResponseType for IAM will usually
                            be "cloud_iam"
                          type: string
                        url:
                          description: URL is the auth endpoint. URL for IAM will
                            usually be "https://iam.cloud.ibm.com/identity/token"
                          type: string
                      type: object
                  type: object
                requests:
                  description: Requests array contains information regarding the location
                    of your remote resource
                  items:
                    description: Request holds requests that populate the Requests
                      array
                    properties:
                      optional:
                        description: Optional if downloading or applying a child resource
                          fails, RemoteResource will stop execution and report error
                          to .status. You can allow execution to continue by marking
                          a reference as optional.
                        type: boolean
                      options:
                        description: Options is the configurable options for the request
                        properties:
                          headers:
                            additionalProperties:
                              additionalProperties:
                                type: string
                              description: Header allows you to provide additional
                                information with your request
                              type: object
                            description: Headers of the request
                            type: object
                          uri:
                            description: URI of the request
                            type: string
                          url:
                            description: URL of the request
                            type: string
                        type: object
                    type: object
                  type: array
              type: object
            status:
              description: RemoteResourceS3Status defines the observed state of RemoteResourceS3
              properties:
                razee-logs:
                  description: RazeeLogs is the logs from the controller
                  properties:
                    error:
                      additionalProperties:
                        type: string
                      description: Log is a line of log from the controller
                      type: object
                  type: object
                touched:
                  description: Touched is if the status has been touched
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: RemoteResourceS3
      listKind: RemoteResourceS3List
      plural: remoteresources3s
      singular: remoteresources3
    conditions:
    - lastTransitionTime: "2021-01-12T17:45:19Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-01-12T17:45:19Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.3.0
    creationTimestamp: "2020-12-08T20:24:12Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: robin
      app.kubernetes.io/managed-by: robin.io
      app.kubernetes.io/name: robin
      operators.coreos.com/robin-operator.zach-test: ""
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:controller-gen.kubebuilder.io/version: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:host_type:
                      .: {}
                      f:enum: {}
                      f:type: {}
                    f:image_provisioner:
                      .: {}
                      f:type: {}
                    f:image_provisioner_v04:
                      .: {}
                      f:type: {}
                    f:image_provisioner_v10:
                      .: {}
                      f:type: {}
                    f:image_robin:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:image_ubbagent:
                      .: {}
                      f:type: {}
                    f:k8s_provider:
                      .: {}
                      f:enum: {}
                      f:type: {}
                    f:kms:
                      .: {}
                      f:enum: {}
                      f:type: {}
                    f:kms_keyring:
                      .: {}
                      f:type: {}
                    f:limits:
                      .: {}
                      f:additionalProperties: {}
                      f:type: {}
                    f:node_selector:
                      .: {}
                      f:additionalProperties: {}
                      f:type: {}
                    f:options:
                      .: {}
                      f:additionalProperties: {}
                      f:type: {}
                    f:ports:
                      .: {}
                      f:additionalProperties: {}
                      f:type: {}
                    f:reporting_secret:
                      .: {}
                      f:type: {}
                    f:requests:
                      .: {}
                      f:additionalProperties: {}
                      f:type: {}
                    f:roles:
                      .: {}
                      f:type: {}
                    f:rootPasswordSecret:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:name:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                    f:source:
                      .: {}
                      f:type: {}
                    f:storage_disks:
                      .: {}
                      f:type: {}
                    f:vip:
                      .: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:connect_command:
                      .: {}
                      f:type: {}
                    f:get_robin_client:
                      .: {}
                      f:type: {}
                    f:master_ip:
                      .: {}
                      f:type: {}
                    f:phase:
                      .: {}
                      f:type: {}
                    f:pod_status:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:robin_node_status:
                      .: {}
                      f:items: {}
                      f:type: {}
                  f:type: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: catalog
      operation: Update
      time: "2020-12-08T20:24:12Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-12-08T20:24:12Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            f:operators.coreos.com/robin-operator.zach-test: {}
      manager: olm
      operation: Update
      time: "2020-12-08T20:24:13Z"
    name: robinclusters.manage.robin.io
    resourceVersion: "10952688"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/robinclusters.manage.robin.io
    uid: dfefbeb1-2de0-48d6-bdd0-0880c1b105a0
  spec:
    conversion:
      strategy: None
    group: manage.robin.io
    names:
      kind: RobinCluster
      listKind: RobinClusterList
      plural: robinclusters
      singular: robincluster
    preserveUnknownFields: true
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: RobinCluster is the Schema for the robinclusters API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: RobinClusterSpec defines the desired state of RobinCluster
              properties:
                host_type:
                  enum:
                  - physical
                  - gcp
                  - ec2
                  - azure
                  - ibm
                  type: string
                image_provisioner:
                  type: string
                image_provisioner_v04:
                  type: string
                image_provisioner_v10:
                  type: string
                image_robin:
                  description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                    Important: Run "make" to regenerate code after modifying this
                    file'
                  type: string
                image_ubbagent:
                  type: string
                k8s_provider:
                  enum:
                  - robin
                  - gke
                  - openshift
                  - aks
                  - iks
                  - eks
                  type: string
                kms:
                  enum:
                  - robin
                  - google
                  type: string
                kms_keyring:
                  type: string
                limits:
                  additionalProperties:
                    type: string
                  type: object
                node_selector:
                  additionalProperties:
                    type: string
                  type: object
                options:
                  additionalProperties:
                    type: string
                  type: object
                ports:
                  additionalProperties:
                    type: string
                  type: object
                reporting_secret:
                  type: string
                requests:
                  additionalProperties:
                    type: string
                  type: object
                roles:
                  type: string
                rootPasswordSecret:
                  description: Username            string                       `json:"username,omitempty"`
                    Password            string                       `json:"password,omitempty"`
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                source:
                  type: string
                storage_disks:
                  type: string
                vip:
                  type: string
              required:
              - image_robin
              type: object
            status:
              description: RobinClusterStatus defines the observed state of RobinCluster
              properties:
                connect_command:
                  type: string
                get_robin_client:
                  type: string
                master_ip:
                  type: string
                phase:
                  type: string
                pod_status:
                  description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                    of cluster Important: Run "make" to regenerate code after modifying
                    this file'
                  items:
                    type: string
                  type: array
                robin_node_status:
                  items:
                    description: RNodeStatus Individual robin node status
                    properties:
                      host_name:
                        type: string
                      join_time:
                        type: integer
                      k8s_node_name:
                        type: string
                      roles:
                        type: string
                      rpool:
                        type: string
                      state:
                        type: string
                      status:
                        type: string
                    required:
                    - host_name
                    - join_time
                    - k8s_node_name
                    - roles
                    - rpool
                    - state
                    - status
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: RobinCluster
      listKind: RobinClusterList
      plural: robinclusters
      singular: robincluster
    conditions:
    - lastTransitionTime: "2020-12-08T20:24:12Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-12-08T20:24:12Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:29Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:grouprestriction:
                      .: {}
                      f:description: {}
                      f:nullable: {}
                      f:properties:
                        .: {}
                        f:groups:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:nullable: {}
                          f:type: {}
                        f:labels:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:nullable: {}
                          f:type: {}
                      f:type: {}
                    f:serviceaccountrestriction:
                      .: {}
                      f:description: {}
                      f:nullable: {}
                      f:properties:
                        .: {}
                        f:namespaces:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                        f:serviceaccounts:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                      f:type: {}
                    f:userrestriction:
                      .: {}
                      f:description: {}
                      f:nullable: {}
                      f:properties:
                        .: {}
                        f:groups:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:nullable: {}
                          f:type: {}
                        f:labels:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:nullable: {}
                          f:type: {}
                        f:users:
                          .: {}
                          f:description: {}
                          f:items: {}
                          f:type: {}
                      f:type: {}
                  f:type: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:29Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:29Z"
    name: rolebindingrestrictions.authorization.openshift.io
    resourceVersion: "277"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/rolebindingrestrictions.authorization.openshift.io
    uid: 3c172e80-1327-4303-9707-8da05f3d5595
  spec:
    conversion:
      strategy: None
    group: authorization.openshift.io
    names:
      kind: RoleBindingRestriction
      listKind: RoleBindingRestrictionList
      plural: rolebindingrestrictions
      singular: rolebindingrestriction
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: RoleBindingRestriction is an object that can be matched against
            a subject (user, group, or service account) to determine whether rolebindings
            on that subject are allowed in the namespace to which the RoleBindingRestriction
            belongs.  If any one of those RoleBindingRestriction objects matches a
            subject, rolebindings on that subject in the namespace are allowed.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the matcher.
              properties:
                grouprestriction:
                  description: GroupRestriction matches against group subjects.
                  nullable: true
                  properties:
                    groups:
                      description: Groups is a list of groups used to match against
                        an individual user's groups. If the user is a member of one
                        of the whitelisted groups, the user is allowed to be bound
                        to a role.
                      items:
                        type: string
                      nullable: true
                      type: array
                    labels:
                      description: Selectors specifies a list of label selectors over
                        group labels.
                      items:
                        description: A label selector is a label query over a set
                          of resources. The result of matchLabels and matchExpressions
                          are ANDed. An empty label selector matches all objects.
                          A null label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      nullable: true
                      type: array
                  type: object
                serviceaccountrestriction:
                  description: ServiceAccountRestriction matches against service-account
                    subjects.
                  nullable: true
                  properties:
                    namespaces:
                      description: Namespaces specifies a list of literal namespace
                        names.
                      items:
                        type: string
                      type: array
                    serviceaccounts:
                      description: ServiceAccounts specifies a list of literal service-account
                        names.
                      items:
                        description: ServiceAccountReference specifies a service account
                          and namespace by their names.
                        properties:
                          name:
                            description: Name is the name of the service account.
                            type: string
                          namespace:
                            description: Namespace is the namespace of the service
                              account.  Service accounts from inside the whitelisted
                              namespaces are allowed to be bound to roles.  If Namespace
                              is empty, then the namespace of the RoleBindingRestriction
                              in which the ServiceAccountReference is embedded is
                              used.
                            type: string
                        type: object
                      type: array
                  type: object
                userrestriction:
                  description: UserRestriction matches against user subjects.
                  nullable: true
                  properties:
                    groups:
                      description: Groups specifies a list of literal group names.
                      items:
                        type: string
                      nullable: true
                      type: array
                    labels:
                      description: Selectors specifies a list of label selectors over
                        user labels.
                      items:
                        description: A label selector is a label query over a set
                          of resources. The result of matchLabels and matchExpressions
                          are ANDed. An empty label selector matches all objects.
                          A null label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      nullable: true
                      type: array
                    users:
                      description: Users specifies a list of literal user names.
                      items:
                        type: string
                      type: array
                  type: object
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: RoleBindingRestriction
      listKind: RoleBindingRestrictionList
      plural: rolebindingrestrictions
      singular: rolebindingrestriction
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:29Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:29Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"default","app.kubernetes.io/part-of":"tekton-pipelines","pipeline.tekton.dev/release":"v0.18.1","version":"v0.18.1"},"name":"runs.tekton.dev"},"spec":{"group":"tekton.dev","names":{"categories":["tekton","tekton-pipelines"],"kind":"Run","plural":"runs"},"preserveUnknownFields":false,"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".status.conditions[?(@.type==\"Succeeded\")].status","name":"Succeeded","type":"string"},{"jsonPath":".status.conditions[?(@.type==\"Succeeded\")].reason","name":"Reason","type":"string"},{"jsonPath":".status.startTime","name":"StartTime","type":"date"},{"jsonPath":".status.completionTime","name":"CompletionTime","type":"date"}],"name":"v1alpha1","schema":{"openAPIV3Schema":{"type":"object","x-kubernetes-preserve-unknown-fields":true}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
    creationTimestamp: "2020-12-01T17:28:11Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines
      pipeline.tekton.dev/release: v0.18.1
      version: v0.18.1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-12-01T17:28:11Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:pipeline.tekton.dev/release: {}
            f:version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: oc
      operation: Update
      time: "2020-12-01T17:28:11Z"
    name: runs.tekton.dev
    resourceVersion: "5635258"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/runs.tekton.dev
    uid: 19bd0df8-77f7-4785-8d5e-b0467b5af5dc
  spec:
    conversion:
      strategy: None
    group: tekton.dev
    names:
      categories:
      - tekton
      - tekton-pipelines
      kind: Run
      listKind: RunList
      plural: runs
      singular: run
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Succeeded")].status
        name: Succeeded
        type: string
      - jsonPath: .status.conditions[?(@.type=="Succeeded")].reason
        name: Reason
        type: string
      - jsonPath: .status.startTime
        name: StartTime
        type: date
      - jsonPath: .status.completionTime
        name: CompletionTime
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-pipelines
      kind: Run
      listKind: RunList
      plural: runs
      singular: run
    conditions:
    - lastTransitionTime: "2020-12-01T17:28:11Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-12-01T17:28:11Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:33Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:defaultNodeSelector:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:mastersSchedulable:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:policy:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:name:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:required: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:33Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:33Z"
    name: schedulers.config.openshift.io
    resourceVersion: "367"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/schedulers.config.openshift.io
    uid: c44506ce-26a3-4943-b028-7933d0fb6a26
  spec:
    conversion:
      strategy: None
    group: config.openshift.io
    names:
      kind: Scheduler
      listKind: SchedulerList
      plural: schedulers
      singular: scheduler
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Scheduler holds cluster-wide config information to run the
            Kubernetes Scheduler and influence its placement decisions. The canonical
            name for this config is `cluster`.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec holds user settable values for configuration
              properties:
                defaultNodeSelector:
                  description: 'defaultNodeSelector helps set the cluster-wide default
                    node selector to restrict pod placement to specific nodes. This
                    is applied to the pods created in all namespaces and creates an
                    intersection with any existing nodeSelectors already set on a
                    pod, additionally constraining that pod''s selector. For example,
                    defaultNodeSelector: "type=user-node,region=east" would set nodeSelector
                    field in pod spec to "type=user-node,region=east" to all pods
                    created in all namespaces. Namespaces having project-wide node
                    selectors won''t be impacted even if this field is set. This adds
                    an annotation section to the namespace. For example, if a new
                    namespace is created with node-selector=''type=user-node,region=east'',
                    the annotation openshift.io/node-selector: type=user-node,region=east
                    gets added to the project. When the openshift.io/node-selector
                    annotation is set on the project the value is used in preference
                    to the value we are setting for defaultNodeSelector field. For
                    instance, openshift.io/node-selector: "type=user-node,region=west"
                    means that the default of "type=user-node,region=east" set in
                    defaultNodeSelector would not be applied.'
                  type: string
                mastersSchedulable:
                  description: 'MastersSchedulable allows masters nodes to be schedulable.
                    When this flag is turned on, all the master nodes in the cluster
                    will be made schedulable, so that workload pods can run on them.
                    The default value for this field is false, meaning none of the
                    master nodes are schedulable. Important Note: Once the workload
                    pods start running on the master nodes, extreme care must be taken
                    to ensure that cluster-critical control plane components are not
                    impacted. Please turn on this field after doing due diligence.'
                  type: boolean
                policy:
                  description: policy is a reference to a ConfigMap containing scheduler
                    policy which has user specified predicates and priorities. If
                    this ConfigMap is not available scheduler will default to use
                    DefaultAlgorithmProvider. The namespace for this configmap is
                    openshift-config.
                  properties:
                    name:
                      description: name is the metadata.name of the referenced config
                        map
                      type: string
                  required:
                  - name
                  type: object
              type: object
            status:
              description: status holds observed values from the cluster. They may
                not be overridden.
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Scheduler
      listKind: SchedulerList
      plural: schedulers
      singular: scheduler
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:33Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:33Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:30Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:additionalPrinterColumns: {}
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:allowHostDirVolumePlugin:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:allowHostIPC:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:allowHostNetwork:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:allowHostPID:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:allowHostPorts:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:allowPrivilegeEscalation:
                  .: {}
                  f:description: {}
                  f:nullable: {}
                  f:type: {}
                f:allowPrivilegedContainer:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:allowedCapabilities:
                  .: {}
                  f:description: {}
                  f:items: {}
                  f:nullable: {}
                  f:type: {}
                f:allowedFlexVolumes:
                  .: {}
                  f:description: {}
                  f:items: {}
                  f:nullable: {}
                  f:type: {}
                f:allowedUnsafeSysctls:
                  .: {}
                  f:description: {}
                  f:items: {}
                  f:nullable: {}
                  f:type: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:defaultAddCapabilities:
                  .: {}
                  f:description: {}
                  f:items: {}
                  f:nullable: {}
                  f:type: {}
                f:defaultAllowPrivilegeEscalation:
                  .: {}
                  f:description: {}
                  f:nullable: {}
                  f:type: {}
                f:forbiddenSysctls:
                  .: {}
                  f:description: {}
                  f:items: {}
                  f:nullable: {}
                  f:type: {}
                f:fsGroup:
                  .: {}
                  f:description: {}
                  f:nullable: {}
                  f:properties:
                    .: {}
                    f:ranges:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:type:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:type: {}
                f:groups:
                  .: {}
                  f:description: {}
                  f:items: {}
                  f:nullable: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:priority:
                  .: {}
                  f:description: {}
                  f:format: {}
                  f:nullable: {}
                  f:type: {}
                f:readOnlyRootFilesystem:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:requiredDropCapabilities:
                  .: {}
                  f:description: {}
                  f:items: {}
                  f:nullable: {}
                  f:type: {}
                f:runAsUser:
                  .: {}
                  f:description: {}
                  f:nullable: {}
                  f:properties:
                    .: {}
                    f:type:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:uid:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                    f:uidRangeMax:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                    f:uidRangeMin:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                  f:type: {}
                f:seLinuxContext:
                  .: {}
                  f:description: {}
                  f:nullable: {}
                  f:properties:
                    .: {}
                    f:seLinuxOptions:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:level:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:role:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:type:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:user:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                    f:type:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:type: {}
                f:seccompProfiles:
                  .: {}
                  f:description: {}
                  f:items: {}
                  f:nullable: {}
                  f:type: {}
                f:supplementalGroups:
                  .: {}
                  f:description: {}
                  f:nullable: {}
                  f:properties:
                    .: {}
                    f:ranges:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                    f:type:
                      .: {}
                      f:description: {}
                      f:type: {}
                  f:type: {}
                f:users:
                  .: {}
                  f:description: {}
                  f:items: {}
                  f:nullable: {}
                  f:type: {}
                f:volumes:
                  .: {}
                  f:description: {}
                  f:items: {}
                  f:nullable: {}
                  f:type: {}
              f:required: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-bootstrap
      operation: Update
      time: "2020-11-18T12:58:30Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:30Z"
    name: securitycontextconstraints.security.openshift.io
    resourceVersion: "290"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/securitycontextconstraints.security.openshift.io
    uid: 1f6ba7a9-1d0a-473b-9250-ecfed8e2c7b7
  spec:
    conversion:
      strategy: None
    group: security.openshift.io
    names:
      kind: SecurityContextConstraints
      listKind: SecurityContextConstraintsList
      plural: securitycontextconstraints
      singular: securitycontextconstraints
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - description: Determines if a container can request to be run as privileged
        jsonPath: .allowPrivilegedContainer
        name: Priv
        type: string
      - description: A list of capabilities that can be requested to add to the container
        jsonPath: .allowedCapabilities
        name: Caps
        type: string
      - description: Strategy that will dictate what labels will be set in the SecurityContext
        jsonPath: .seLinuxContext.type
        name: SELinux
        type: string
      - description: Strategy that will dictate what RunAsUser is used in the SecurityContext
        jsonPath: .runAsUser.type
        name: RunAsUser
        type: string
      - description: Strategy that will dictate what fs group is used by the SecurityContext
        jsonPath: .fsGroup.type
        name: FSGroup
        type: string
      - description: Strategy that will dictate what supplemental groups are used
          by the SecurityContext
        jsonPath: .supplementalGroups.type
        name: SupGroup
        type: string
      - description: Sort order of SCCs
        jsonPath: .priority
        name: Priority
        type: string
      - description: Force containers to run with a read only root file system
        jsonPath: .readOnlyRootFilesystem
        name: ReadOnlyRootFS
        type: string
      - description: White list of allowed volume plugins
        jsonPath: .volumes
        name: Volumes
        type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: SecurityContextConstraints governs the ability to make requests
            that affect the SecurityContext that will be applied to a container. For
            historical reasons SCC was exposed under the core Kubernetes API group.
            That exposure is deprecated and will be removed in a future release -
            users should instead use the security.openshift.io group to manage SecurityContextConstraints.
          properties:
            allowHostDirVolumePlugin:
              description: AllowHostDirVolumePlugin determines if the policy allow
                containers to use the HostDir volume plugin
              type: boolean
            allowHostIPC:
              description: AllowHostIPC determines if the policy allows host ipc in
                the containers.
              type: boolean
            allowHostNetwork:
              description: AllowHostNetwork determines if the policy allows the use
                of HostNetwork in the pod spec.
              type: boolean
            allowHostPID:
              description: AllowHostPID determines if the policy allows host pid in
                the containers.
              type: boolean
            allowHostPorts:
              description: AllowHostPorts determines if the policy allows host ports
                in the containers.
              type: boolean
            allowPrivilegeEscalation:
              description: AllowPrivilegeEscalation determines if a pod can request
                to allow privilege escalation. If unspecified, defaults to true.
              nullable: true
              type: boolean
            allowPrivilegedContainer:
              description: AllowPrivilegedContainer determines if a container can
                request to be run as privileged.
              type: boolean
            allowedCapabilities:
              description: AllowedCapabilities is a list of capabilities that can
                be requested to add to the container. Capabilities in this field maybe
                added at the pod author's discretion. You must not list a capability
                in both AllowedCapabilities and RequiredDropCapabilities. To allow
                all capabilities you may use '*'.
              items:
                description: Capability represent POSIX capabilities type
                type: string
              nullable: true
              type: array
            allowedFlexVolumes:
              description: AllowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty
                or nil indicates that all Flexvolumes may be used.  This parameter
                is effective only when the usage of the Flexvolumes is allowed in
                the "Volumes" field.
              items:
                description: AllowedFlexVolume represents a single Flexvolume that
                  is allowed to be used.
                properties:
                  driver:
                    description: Driver is the name of the Flexvolume driver.
                    type: string
                required:
                - driver
                type: object
              nullable: true
              type: array
            allowedUnsafeSysctls:
              description: "AllowedUnsafeSysctls is a list of explicitly allowed unsafe
                sysctls, defaults to none. Each entry is either a plain sysctl name
                or ends in \"*\" in which case it is considered as a prefix of allowed
                sysctls. Single * means all unsafe sysctls are allowed. Kubelet has
                to whitelist all allowed unsafe sysctls explicitly to avoid rejection.
                \n Examples: e.g. \"foo/*\" allows \"foo/bar\", \"foo/baz\", etc.
                e.g. \"foo.*\" allows \"foo.bar\", \"foo.baz\", etc."
              items:
                type: string
              nullable: true
              type: array
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            defaultAddCapabilities:
              description: DefaultAddCapabilities is the default set of capabilities
                that will be added to the container unless the pod spec specifically
                drops the capability.  You may not list a capabiility in both DefaultAddCapabilities
                and RequiredDropCapabilities.
              items:
                description: Capability represent POSIX capabilities type
                type: string
              nullable: true
              type: array
            defaultAllowPrivilegeEscalation:
              description: DefaultAllowPrivilegeEscalation controls the default setting
                for whether a process can gain more privileges than its parent process.
              nullable: true
              type: boolean
            forbiddenSysctls:
              description: "ForbiddenSysctls is a list of explicitly forbidden sysctls,
                defaults to none. Each entry is either a plain sysctl name or ends
                in \"*\" in which case it is considered as a prefix of forbidden sysctls.
                Single * means all sysctls are forbidden. \n Examples: e.g. \"foo/*\"
                forbids \"foo/bar\", \"foo/baz\", etc. e.g. \"foo.*\" forbids \"foo.bar\",
                \"foo.baz\", etc."
              items:
                type: string
              nullable: true
              type: array
            fsGroup:
              description: FSGroup is the strategy that will dictate what fs group
                is used by the SecurityContext.
              nullable: true
              properties:
                ranges:
                  description: Ranges are the allowed ranges of fs groups.  If you
                    would like to force a single fs group then supply a single range
                    with the same start and end.
                  items:
                    description: 'IDRange provides a min/max of an allowed range of
                      IDs. TODO: this could be reused for UIDs.'
                    properties:
                      max:
                        description: Max is the end of the range, inclusive.
                        format: int64
                        type: integer
                      min:
                        description: Min is the start of the range, inclusive.
                        format: int64
                        type: integer
                    type: object
                  type: array
                type:
                  description: Type is the strategy that will dictate what FSGroup
                    is used in the SecurityContext.
                  type: string
              type: object
            groups:
              description: The groups that have permission to use this security context
                constraints
              items:
                type: string
              nullable: true
              type: array
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            priority:
              description: Priority influences the sort order of SCCs when evaluating
                which SCCs to try first for a given pod request based on access in
                the Users and Groups fields.  The higher the int, the higher priority.
                An unset value is considered a 0 priority. If scores for multiple
                SCCs are equal they will be sorted from most restrictive to least
                restrictive. If both priorities and restrictions are equal the SCCs
                will be sorted by name.
              format: int32
              nullable: true
              type: integer
            readOnlyRootFilesystem:
              description: ReadOnlyRootFilesystem when set to true will force containers
                to run with a read only root file system.  If the container specifically
                requests to run with a non-read only root file system the SCC should
                deny the pod. If set to false the container may run with a read only
                root file system if it wishes but it will not be forced to.
              type: boolean
            requiredDropCapabilities:
              description: RequiredDropCapabilities are the capabilities that will
                be dropped from the container.  These are required to be dropped and
                cannot be added.
              items:
                description: Capability represent POSIX capabilities type
                type: string
              nullable: true
              type: array
            runAsUser:
              description: RunAsUser is the strategy that will dictate what RunAsUser
                is used in the SecurityContext.
              nullable: true
              properties:
                type:
                  description: Type is the strategy that will dictate what RunAsUser
                    is used in the SecurityContext.
                  type: string
                uid:
                  description: UID is the user id that containers must run as.  Required
                    for the MustRunAs strategy if not using namespace/service account
                    allocated uids.
                  format: int64
                  type: integer
                uidRangeMax:
                  description: UIDRangeMax defines the max value for a strategy that
                    allocates by range.
                  format: int64
                  type: integer
                uidRangeMin:
                  description: UIDRangeMin defines the min value for a strategy that
                    allocates by range.
                  format: int64
                  type: integer
              type: object
            seLinuxContext:
              description: SELinuxContext is the strategy that will dictate what labels
                will be set in the SecurityContext.
              nullable: true
              properties:
                seLinuxOptions:
                  description: seLinuxOptions required to run as; required for MustRunAs
                  properties:
                    level:
                      description: Level is SELinux level label that applies to the
                        container.
                      type: string
                    role:
                      description: Role is a SELinux role label that applies to the
                        container.
                      type: string
                    type:
                      description: Type is a SELinux type label that applies to the
                        container.
                      type: string
                    user:
                      description: User is a SELinux user label that applies to the
                        container.
                      type: string
                  type: object
                type:
                  description: Type is the strategy that will dictate what SELinux
                    context is used in the SecurityContext.
                  type: string
              type: object
            seccompProfiles:
              description: "SeccompProfiles lists the allowed profiles that may be
                set for the pod or container's seccomp annotations.  An unset (nil)
                or empty value means that no profiles may be specifid by the pod or
                container.\tThe wildcard '*' may be used to allow all profiles.  When
                used to generate a value for a pod the first non-wildcard profile
                will be used as the default."
              items:
                type: string
              nullable: true
              type: array
            supplementalGroups:
              description: SupplementalGroups is the strategy that will dictate what
                supplemental groups are used by the SecurityContext.
              nullable: true
              properties:
                ranges:
                  description: Ranges are the allowed ranges of supplemental groups.  If
                    you would like to force a single supplemental group then supply
                    a single range with the same start and end.
                  items:
                    description: 'IDRange provides a min/max of an allowed range of
                      IDs. TODO: this could be reused for UIDs.'
                    properties:
                      max:
                        description: Max is the end of the range, inclusive.
                        format: int64
                        type: integer
                      min:
                        description: Min is the start of the range, inclusive.
                        format: int64
                        type: integer
                    type: object
                  type: array
                type:
                  description: Type is the strategy that will dictate what supplemental
                    groups is used in the SecurityContext.
                  type: string
              type: object
            users:
              description: The users who have permissions to use this security context
                constraints
              items:
                type: string
              nullable: true
              type: array
            volumes:
              description: Volumes is a white list of allowed volume plugins.  FSType
                corresponds directly with the field names of a VolumeSource (azureFile,
                configMap, emptyDir).  To allow all volumes you may use "*". To allow
                no volumes, set to ["none"].
              items:
                description: FS Type gives strong typing to different file systems
                  that are used by volumes.
                type: string
              nullable: true
              type: array
          required:
          - allowHostDirVolumePlugin
          - allowHostIPC
          - allowHostNetwork
          - allowHostPID
          - allowHostPorts
          - allowPrivilegedContainer
          - allowedCapabilities
          - defaultAddCapabilities
          - priority
          - readOnlyRootFilesystem
          - requiredDropCapabilities
          - volumes
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: SecurityContextConstraints
      listKind: SecurityContextConstraintsList
      plural: securitycontextconstraints
      singular: securitycontextconstraints
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:30Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:30Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:58:54Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:54Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:55Z"
    name: servicecas.operator.openshift.io
    resourceVersion: "927"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/servicecas.operator.openshift.io
    uid: 06641182-2381-49ec-89b6-85070fda159a
  spec:
    conversion:
      strategy: None
    group: operator.openshift.io
    names:
      kind: ServiceCA
      listKind: ServiceCAList
      plural: servicecas
      singular: serviceca
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: ServiceCA provides information to configure an operator to
            manage the service cert controllers
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec holds user settable values for configuration
              properties:
                logLevel:
                  default: Normal
                  description: "logLevel is an intent based logging for an overall
                    component.  It does not give fine grained control, but it is a
                    simple way to manage coarse grained logging choices that operators
                    have to interpret for their operands. \n Valid values are: \"Normal\",
                    \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                managementState:
                  description: managementState indicates whether and how the operator
                    should manage the component
                  pattern: ^(Managed|Unmanaged|Force|Removed)$
                  type: string
                observedConfig:
                  description: observedConfig holds a sparse config that controller
                    has observed from the cluster state.  It exists in spec because
                    it is an input to the level for the operator
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                operatorLogLevel:
                  default: Normal
                  description: "operatorLogLevel is an intent based logging for the
                    operator itself.  It does not give fine grained control, but it
                    is a simple way to manage coarse grained logging choices that
                    operators have to interpret for themselves. \n Valid values are:
                    \"Normal\", \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                unsupportedConfigOverrides:
                  description: 'unsupportedConfigOverrides holds a sparse config that
                    will override any previously set options.  It only needs to be
                    the fields to override it will end up overlaying in the following
                    order: 1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides'
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              type: object
            status:
              description: status holds observed values from the cluster. They may
                not be overridden.
              properties:
                conditions:
                  description: conditions is a list of conditions and their status
                  items:
                    description: OperatorCondition is just the standard condition
                      fields.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
                generations:
                  description: generations are used to determine when an item needs
                    to be reconciled or has changed in a way that needs a reaction.
                  items:
                    description: GenerationStatus keeps track of the generation for
                      a given resource so that decisions about forced updates can
                      be made.
                    properties:
                      group:
                        description: group is the group of the thing you're tracking
                        type: string
                      hash:
                        description: hash is an optional field set for resources without
                          generation that are content sensitive like secrets and configmaps
                        type: string
                      lastGeneration:
                        description: lastGeneration is the last generation of the
                          workload controller involved
                        format: int64
                        type: integer
                      name:
                        description: name is the name of the thing you're tracking
                        type: string
                      namespace:
                        description: namespace is where the thing you're tracking
                          is
                        type: string
                      resource:
                        description: resource is the resource type of the thing you're
                          tracking
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration is the last generation change you've
                    dealt with
                  format: int64
                  type: integer
                readyReplicas:
                  description: readyReplicas indicates how many replicas are ready
                    and at the desired state
                  format: int32
                  type: integer
                version:
                  description: version is the level this availability applies to
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ServiceCA
      listKind: ServiceCAList
      plural: servicecas
      singular: serviceca
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:54Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:55Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: "2020-11-18T12:59:00Z"
    generation: 53
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
      manager: register.test
      operation: Update
      time: "2020-11-20T22:16:08Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:controller-gen.kubebuilder.io/version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-20T22:18:50Z"
    name: servicemonitors.monitoring.coreos.com
    resourceVersion: "1040773"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/servicemonitors.monitoring.coreos.com
    uid: 58bb3141-0020-44f0-ab85-130994f43c61
  spec:
    conversion:
      strategy: None
    group: monitoring.coreos.com
    names:
      kind: ServiceMonitor
      listKind: ServiceMonitorList
      plural: servicemonitors
      singular: servicemonitor
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: ServiceMonitor defines monitoring for a set of services.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of desired Service selection for target discovery
                by Prometheus.
              properties:
                endpoints:
                  description: A list of endpoints allowed as part of this ServiceMonitor.
                  items:
                    description: Endpoint defines a scrapeable endpoint serving Prometheus
                      metrics.
                    properties:
                      basicAuth:
                        description: 'BasicAuth allow an endpoint to authenticate
                          over basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints'
                        properties:
                          password:
                            description: The secret in the service monitor namespace
                              that contains the password for authentication.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          username:
                            description: The secret in the service monitor namespace
                              that contains the username for authentication.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                      bearerTokenFile:
                        description: File to read bearer token for scraping targets.
                        type: string
                      bearerTokenSecret:
                        description: Secret to mount to read bearer token for scraping
                          targets. The secret needs to be in the same namespace as
                          the service monitor and accessible by the Prometheus Operator.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      honorLabels:
                        description: HonorLabels chooses the metric's labels on collisions
                          with target labels.
                        type: boolean
                      honorTimestamps:
                        description: HonorTimestamps controls whether Prometheus respects
                          the timestamps present in scraped data.
                        type: boolean
                      interval:
                        description: Interval at which metrics should be scraped
                        type: string
                      metricRelabelings:
                        description: MetricRelabelConfigs to apply to samples before
                          ingestion.
                        items:
                          description: 'RelabelConfig allows dynamic rewriting of
                            the label set, being applied to samples before ingestion.
                            It defines `<metric_relabel_configs>`-section of Prometheus
                            configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                          properties:
                            action:
                              description: Action to perform based on regex matching.
                                Default is 'replace'
                              type: string
                            modulus:
                              description: Modulus to take of the hash of the source
                                label values.
                              format: int64
                              type: integer
                            regex:
                              description: Regular expression against which the extracted
                                value is matched. Default is '(.*)'
                              type: string
                            replacement:
                              description: Replacement value against which a regex
                                replace is performed if the regular expression matches.
                                Regex capture groups are available. Default is '$1'
                              type: string
                            separator:
                              description: Separator placed between concatenated source
                                label values. default is ';'.
                              type: string
                            sourceLabels:
                              description: The source labels select values from existing
                                labels. Their content is concatenated using the configured
                                separator and matched against the configured regular
                                expression for the replace, keep, and drop actions.
                              items:
                                type: string
                              type: array
                            targetLabel:
                              description: Label to which the resulting value is written
                                in a replace action. It is mandatory for replace actions.
                                Regex capture groups are available.
                              type: string
                          type: object
                        type: array
                      params:
                        additionalProperties:
                          items:
                            type: string
                          type: array
                        description: Optional HTTP URL parameters
                        type: object
                      path:
                        description: HTTP path to scrape for metrics.
                        type: string
                      port:
                        description: Name of the service port this endpoint refers
                          to. Mutually exclusive with targetPort.
                        type: string
                      proxyUrl:
                        description: ProxyURL eg http://proxyserver:2195 Directs scrapes
                          to proxy through this endpoint.
                        type: string
                      relabelings:
                        description: 'RelabelConfigs to apply to samples before scraping.
                          More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
                        items:
                          description: 'RelabelConfig allows dynamic rewriting of
                            the label set, being applied to samples before ingestion.
                            It defines `<metric_relabel_configs>`-section of Prometheus
                            configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                          properties:
                            action:
                              description: Action to perform based on regex matching.
                                Default is 'replace'
                              type: string
                            modulus:
                              description: Modulus to take of the hash of the source
                                label values.
                              format: int64
                              type: integer
                            regex:
                              description: Regular expression against which the extracted
                                value is matched. Default is '(.*)'
                              type: string
                            replacement:
                              description: Replacement value against which a regex
                                replace is performed if the regular expression matches.
                                Regex capture groups are available. Default is '$1'
                              type: string
                            separator:
                              description: Separator placed between concatenated source
                                label values. default is ';'.
                              type: string
                            sourceLabels:
                              description: The source labels select values from existing
                                labels. Their content is concatenated using the configured
                                separator and matched against the configured regular
                                expression for the replace, keep, and drop actions.
                              items:
                                type: string
                              type: array
                            targetLabel:
                              description: Label to which the resulting value is written
                                in a replace action. It is mandatory for replace actions.
                                Regex capture groups are available.
                              type: string
                          type: object
                        type: array
                      scheme:
                        description: HTTP scheme to use for scraping.
                        type: string
                      scrapeTimeout:
                        description: Timeout after which the scrape is ended
                        type: string
                      targetPort:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Name or number of the target port of the Pod
                          behind the Service, the port must be specified with container
                          port property. Mutually exclusive with port.
                        x-kubernetes-int-or-string: true
                      tlsConfig:
                        description: TLS configuration to use when scraping the endpoint
                        properties:
                          ca:
                            description: Stuct containing the CA cert to use for the
                              targets.
                            properties:
                              configMap:
                                description: ConfigMap containing data to use for
                                  the targets.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              secret:
                                description: Secret containing data to use for the
                                  targets.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                          caFile:
                            description: Path to the CA cert in the Prometheus container
                              to use for the targets.
                            type: string
                          cert:
                            description: Struct containing the client cert file for
                              the targets.
                            properties:
                              configMap:
                                description: ConfigMap containing data to use for
                                  the targets.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              secret:
                                description: Secret containing data to use for the
                                  targets.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                          certFile:
                            description: Path to the client cert file in the Prometheus
                              container for the targets.
                            type: string
                          insecureSkipVerify:
                            description: Disable target certificate validation.
                            type: boolean
                          keyFile:
                            description: Path to the client key file in the Prometheus
                              container for the targets.
                            type: string
                          keySecret:
                            description: Secret containing the client key file for
                              the targets.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          serverName:
                            description: Used to verify the hostname for the targets.
                            type: string
                        type: object
                    type: object
                  type: array
                jobLabel:
                  description: The label to use to retrieve the job name from.
                  type: string
                namespaceSelector:
                  description: Selector to select which namespaces the Endpoints objects
                    are discovered from.
                  properties:
                    any:
                      description: Boolean describing whether all namespaces are selected
                        in contrast to a list restricting them.
                      type: boolean
                    matchNames:
                      description: List of namespace names.
                      items:
                        type: string
                      type: array
                  type: object
                podTargetLabels:
                  description: PodTargetLabels transfers labels on the Kubernetes
                    Pod onto the target.
                  items:
                    type: string
                  type: array
                sampleLimit:
                  description: SampleLimit defines per-scrape limit on number of scraped
                    samples that will be accepted.
                  format: int64
                  type: integer
                selector:
                  description: Selector to select Endpoints objects.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                targetLabels:
                  description: TargetLabels transfers labels on the Kubernetes Service
                    onto the target.
                  items:
                    type: string
                  type: array
              required:
              - endpoints
              - selector
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ServiceMonitor
      listKind: ServiceMonitorList
      plural: servicemonitors
      singular: servicemonitor
    conditions:
    - lastTransitionTime: "2020-11-18T12:59:01Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:59:01Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2020-11-18T12:59:17Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:59:17Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:59:17Z"
    name: storages.operator.openshift.io
    resourceVersion: "1638"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/storages.operator.openshift.io
    uid: c37a4bae-601c-42ff-bd3f-5b90d6d87a2f
  spec:
    conversion:
      strategy: None
    group: operator.openshift.io
    names:
      kind: Storage
      listKind: StorageList
      plural: storages
      singular: storage
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Storage provides a means to configure an operator to manage
            the cluster storage operator. `cluster` is the canonical name.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec holds user settable values for configuration
              properties:
                logLevel:
                  default: Normal
                  description: "logLevel is an intent based logging for an overall
                    component.  It does not give fine grained control, but it is a
                    simple way to manage coarse grained logging choices that operators
                    have to interpret for their operands. \n Valid values are: \"Normal\",
                    \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                managementState:
                  description: managementState indicates whether and how the operator
                    should manage the component
                  pattern: ^(Managed|Unmanaged|Force|Removed)$
                  type: string
                observedConfig:
                  description: observedConfig holds a sparse config that controller
                    has observed from the cluster state.  It exists in spec because
                    it is an input to the level for the operator
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                operatorLogLevel:
                  default: Normal
                  description: "operatorLogLevel is an intent based logging for the
                    operator itself.  It does not give fine grained control, but it
                    is a simple way to manage coarse grained logging choices that
                    operators have to interpret for themselves. \n Valid values are:
                    \"Normal\", \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                  enum:
                  - ""
                  - Normal
                  - Debug
                  - Trace
                  - TraceAll
                  type: string
                unsupportedConfigOverrides:
                  description: 'unsupportedConfigOverrides holds a sparse config that
                    will override any previously set options.  It only needs to be
                    the fields to override it will end up overlaying in the following
                    order: 1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides'
                  nullable: true
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              type: object
            status:
              description: status holds observed values from the cluster. They may
                not be overridden.
              properties:
                conditions:
                  description: conditions is a list of conditions and their status
                  items:
                    description: OperatorCondition is just the standard condition
                      fields.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
                generations:
                  description: generations are used to determine when an item needs
                    to be reconciled or has changed in a way that needs a reaction.
                  items:
                    description: GenerationStatus keeps track of the generation for
                      a given resource so that decisions about forced updates can
                      be made.
                    properties:
                      group:
                        description: group is the group of the thing you're tracking
                        type: string
                      hash:
                        description: hash is an optional field set for resources without
                          generation that are content sensitive like secrets and configmaps
                        type: string
                      lastGeneration:
                        description: lastGeneration is the last generation of the
                          workload controller involved
                        format: int64
                        type: integer
                      name:
                        description: name is the name of the thing you're tracking
                        type: string
                      namespace:
                        description: namespace is where the thing you're tracking
                          is
                        type: string
                      resource:
                        description: resource is the resource type of the thing you're
                          tracking
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration is the last generation change you've
                    dealt with
                  format: int64
                  type: integer
                readyReplicas:
                  description: readyReplicas indicates how many replicas are ready
                    and at the desired state
                  format: int32
                  type: integer
                version:
                  description: version is the level this availability applies to
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Storage
      listKind: StorageList
      plural: storages
      singular: storage
    conditions:
    - lastTransitionTime: "2020-11-18T12:59:17Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:59:17Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      api-approved.kubernetes.io: unapproved
    creationTimestamp: "2020-11-18T12:58:54Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:api-approved.kubernetes.io: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:resource:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:group:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:resource:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:currentStorageVersionHash:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:lastHeartbeatTime:
                      .: {}
                      f:description: {}
                      f:format: {}
                      f:type: {}
                    f:persistedStorageVersionHashes:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                  f:type: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:54Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:54Z"
    name: storagestates.migration.k8s.io
    resourceVersion: "888"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/storagestates.migration.k8s.io
    uid: 6034e7ed-15af-4606-a9ac-0e5d985e6af4
  spec:
    conversion:
      strategy: None
    group: migration.k8s.io
    names:
      kind: StorageState
      listKind: StorageStateList
      plural: storagestates
      singular: storagestate
    scope: Cluster
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: The state of the storage of a specific resource.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of the storage state.
              properties:
                resource:
                  description: The resource this storageState is about.
                  properties:
                    group:
                      description: The name of the group.
                      type: string
                    resource:
                      description: The name of the resource.
                      type: string
                  type: object
              type: object
            status:
              description: Status of the storage state.
              properties:
                currentStorageVersionHash:
                  description: The hash value of the current storage version, as shown
                    in the discovery document served by the API server. Storage Version
                    is the version to which objects are converted to before persisted.
                  type: string
                lastHeartbeatTime:
                  description: LastHeartbeatTime is the last time the storage migration
                    triggering controller checks the storage version hash of this
                    resource in the discovery document and updates this field.
                  format: date-time
                  type: string
                persistedStorageVersionHashes:
                  description: The hash values of storage versions that persisted
                    instances of spec.resource might still be encoded in. "Unknown"
                    is a valid value in the list, and is the default value. It is
                    not safe to upgrade or downgrade to an apiserver binary that does
                    not support all versions listed in this field, or if "Unknown"
                    is listed. Once the storage version migration for this resource
                    has completed, the value of this field is refined to only contain
                    the currentStorageVersionHash. Once the apiserver has changed
                    the storage version, the new storage version is appended to the
                    list.
                  items:
                    type: string
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: StorageState
      listKind: StorageStateList
      plural: storagestates
      singular: storagestate
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:54Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:54Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    - lastTransitionTime: "2020-11-18T12:58:54Z"
      message: 'not approved: "unapproved"'
      reason: UnapprovedAnnotation
      status: "False"
      type: KubernetesAPIApprovalPolicyConformant
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      api-approved.kubernetes.io: unapproved
    creationTimestamp: "2020-11-18T12:58:51Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:api-approved.kubernetes.io: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:preserveUnknownFields: {}
          f:scope: {}
          f:subresources:
            .: {}
            f:status: {}
          f:validation:
            .: {}
            f:openAPIV3Schema:
              .: {}
              f:description: {}
              f:properties:
                .: {}
                f:apiVersion:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:kind:
                  .: {}
                  f:description: {}
                  f:type: {}
                f:metadata:
                  .: {}
                  f:type: {}
                f:spec:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:continueToken:
                      .: {}
                      f:description: {}
                      f:type: {}
                    f:resource:
                      .: {}
                      f:description: {}
                      f:properties:
                        .: {}
                        f:group:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:resource:
                          .: {}
                          f:description: {}
                          f:type: {}
                        f:version:
                          .: {}
                          f:description: {}
                          f:type: {}
                      f:type: {}
                  f:required: {}
                  f:type: {}
                f:status:
                  .: {}
                  f:description: {}
                  f:properties:
                    .: {}
                    f:conditions:
                      .: {}
                      f:description: {}
                      f:items: {}
                      f:type: {}
                  f:type: {}
              f:type: {}
          f:version: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:51Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:51Z"
    name: storageversionmigrations.migration.k8s.io
    resourceVersion: "829"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/storageversionmigrations.migration.k8s.io
    uid: 5ddeaa5f-ddc1-47a8-938b-c62718df2f2e
  spec:
    conversion:
      strategy: None
    group: migration.k8s.io
    names:
      kind: StorageVersionMigration
      listKind: StorageVersionMigrationList
      plural: storageversionmigrations
      singular: storageversionmigration
    scope: Cluster
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: StorageVersionMigration represents a migration of stored data
            to the latest storage version.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of the migration.
              properties:
                continueToken:
                  description: The token used in the list options to get the next
                    chunk of objects to migrate. When the .status.conditions indicates
                    the migration is "Running", users can use this token to check
                    the progress of the migration.
                  type: string
                resource:
                  description: The resource that is being migrated. The migrator sends
                    requests to the endpoint serving the resource. Immutable.
                  properties:
                    group:
                      description: The name of the group.
                      type: string
                    resource:
                      description: The name of the resource.
                      type: string
                    version:
                      description: The name of the version.
                      type: string
                  type: object
              required:
              - resource
              type: object
            status:
              description: Status of the migration.
              properties:
                conditions:
                  description: The latest available observations of the migration's
                    current state.
                  items:
                    description: Describes the state of a migration at a certain point.
                    properties:
                      lastUpdateTime:
                        description: The last time this condition was updated.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of the condition.
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: StorageVersionMigration
      listKind: StorageVersionMigrationList
      plural: storageversionmigrations
      singular: storageversionmigration
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: 'not approved: "unapproved"'
      reason: UnapprovedAnnotation
      status: "False"
      type: KubernetesAPIApprovalPolicyConformant
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:51Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.3.0
    creationTimestamp: "2020-11-18T12:59:05Z"
    generation: 43
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
      manager: register.test
      operation: Update
      time: "2020-11-20T22:16:09Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:controller-gen.kubebuilder.io/version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-20T22:18:53Z"
    name: subscriptions.operators.coreos.com
    resourceVersion: "1040783"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/subscriptions.operators.coreos.com
    uid: 0cf496a9-e0a2-44c0-a01e-0658396a756d
  spec:
    conversion:
      strategy: None
    group: operators.coreos.com
    names:
      categories:
      - olm
      kind: Subscription
      listKind: SubscriptionList
      plural: subscriptions
      shortNames:
      - sub
      - subs
      singular: subscription
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: The package subscribed to
        jsonPath: .spec.name
        name: Package
        type: string
      - description: The catalog source for the specified package
        jsonPath: .spec.source
        name: Source
        type: string
      - description: The channel of updates to subscribe to
        jsonPath: .spec.channel
        name: Channel
        type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Subscription keeps operators up to date by tracking changes
            to Catalogs.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SubscriptionSpec defines an Application that can be installed
              properties:
                channel:
                  type: string
                config:
                  description: SubscriptionConfig contains configuration specified
                    for a subscription.
                  properties:
                    env:
                      description: Env is a list of environment variables to set in
                        the container. Cannot be updated.
                      items:
                        description: EnvVar represents an environment variable present
                          in a Container.
                        properties:
                          name:
                            description: Name of the environment variable. Must be
                              a C_IDENTIFIER.
                            type: string
                          value:
                            description: 'Variable references $(VAR_NAME) are expanded
                              using the previous defined environment variables in
                              the container and any service environment variables.
                              If a variable cannot be resolved, the reference in the
                              input string will be unchanged. The $(VAR_NAME) syntax
                              can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
                              references will never be expanded, regardless of whether
                              the variable exists or not. Defaults to "".'
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              fieldRef:
                                description: 'Selects a field of the pod: supports
                                  metadata.name, metadata.namespace, metadata.labels,
                                  metadata.annotations, spec.nodeName, spec.serviceAccountName,
                                  status.hostIP, status.podIP, status.podIPs.'
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath
                                      is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the
                                      specified API version.
                                    type: string
                                required:
                                - fieldPath
                                type: object
                              resourceFieldRef:
                                description: 'Selects a resource of the container:
                                  only resources limits and requests (limits.cpu,
                                  limits.memory, limits.ephemeral-storage, requests.cpu,
                                  requests.memory and requests.ephemeral-storage)
                                  are currently supported.'
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes,
                                      optional for env vars'
                                    type: string
                                  divisor:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Specifies the output format of the
                                      exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                                required:
                                - resource
                                type: object
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's
                                  namespace
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                        required:
                        - name
                        type: object
                      type: array
                    envFrom:
                      description: EnvFrom is a list of sources to populate environment
                        variables in the container. The keys defined within a source
                        must be a C_IDENTIFIER. All invalid keys will be reported
                        as an event when the container is starting. When a key exists
                        in multiple sources, the value associated with the last source
                        will take precedence. Values defined by an Env with a duplicate
                        key will take precedence. Immutable.
                      items:
                        description: EnvFromSource represents the source of a set
                          of ConfigMaps
                        properties:
                          configMapRef:
                            description: The ConfigMap to select from
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap must be
                                  defined
                                type: boolean
                            type: object
                          prefix:
                            description: An optional identifier to prepend to each
                              key in the ConfigMap. Must be a C_IDENTIFIER.
                            type: string
                          secretRef:
                            description: The Secret to select from
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret must be defined
                                type: boolean
                            type: object
                        type: object
                      type: array
                    nodeSelector:
                      additionalProperties:
                        type: string
                      description: 'NodeSelector is a selector which must be true
                        for the pod to fit on a node. Selector which must match a
                        node''s labels for the pod to be scheduled on that node. More
                        info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                      type: object
                    resources:
                      description: 'Resources represents compute resources required
                        by this container. Immutable. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                      type: object
                    selector:
                      description: Selector is the label selector for pods to be configured.
                        Existing ReplicaSets whose pods are selected by this will
                        be the ones affected by this deployment. It must match the
                        pod template's labels.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                    tolerations:
                      description: Tolerations are the pod's tolerations.
                      items:
                        description: The pod this Toleration is attached to tolerates
                          any taint that matches the triple <key,value,effect> using
                          the matching operator <operator>.
                        properties:
                          effect:
                            description: Effect indicates the taint effect to match.
                              Empty means match all taint effects. When specified,
                              allowed values are NoSchedule, PreferNoSchedule and
                              NoExecute.
                            type: string
                          key:
                            description: Key is the taint key that the toleration
                              applies to. Empty means match all taint keys. If the
                              key is empty, operator must be Exists; this combination
                              means to match all values and all keys.
                            type: string
                          operator:
                            description: Operator represents a key's relationship
                              to the value. Valid operators are Exists and Equal.
                              Defaults to Equal. Exists is equivalent to wildcard
                              for value, so that a pod can tolerate all taints of
                              a particular category.
                            type: string
                          tolerationSeconds:
                            description: TolerationSeconds represents the period of
                              time the toleration (which must be of effect NoExecute,
                              otherwise this field is ignored) tolerates the taint.
                              By default, it is not set, which means tolerate the
                              taint forever (do not evict). Zero and negative values
                              will be treated as 0 (evict immediately) by the system.
                            format: int64
                            type: integer
                          value:
                            description: Value is the taint value the toleration matches
                              to. If the operator is Exists, the value should be empty,
                              otherwise just a regular string.
                            type: string
                        type: object
                      type: array
                    volumeMounts:
                      description: List of VolumeMounts to set in the container.
                      items:
                        description: VolumeMount describes a mounting of a Volume
                          within a container.
                        properties:
                          mountPath:
                            description: Path within the container at which the volume
                              should be mounted.  Must not contain ':'.
                            type: string
                          mountPropagation:
                            description: mountPropagation determines how mounts are
                              propagated from the host to container and the other
                              way around. When not set, MountPropagationNone is used.
                              This field is beta in 1.10.
                            type: string
                          name:
                            description: This must match the Name of a Volume.
                            type: string
                          readOnly:
                            description: Mounted read-only if true, read-write otherwise
                              (false or unspecified). Defaults to false.
                            type: boolean
                          subPath:
                            description: Path within the volume from which the container's
                              volume should be mounted. Defaults to "" (volume's root).
                            type: string
                          subPathExpr:
                            description: Expanded path within the volume from which
                              the container's volume should be mounted. Behaves similarly
                              to SubPath but environment variable references $(VAR_NAME)
                              are expanded using the container's environment. Defaults
                              to "" (volume's root). SubPathExpr and SubPath are mutually
                              exclusive.
                            type: string
                        required:
                        - mountPath
                        - name
                        type: object
                      type: array
                    volumes:
                      description: List of Volumes to set in the podSpec.
                      items:
                        description: Volume represents a named volume in a pod that
                          may be accessed by any container in the pod.
                        properties:
                          awsElasticBlockStore:
                            description: 'AWSElasticBlockStore represents an AWS Disk
                              resource that is attached to a kubelet''s host machine
                              and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                            properties:
                              fsType:
                                description: 'Filesystem type of the volume that you
                                  want to mount. Tip: Ensure that the filesystem type
                                  is supported by the host operating system. Examples:
                                  "ext4", "xfs", "ntfs". Implicitly inferred to be
                                  "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                  TODO: how do we prevent errors in the filesystem
                                  from compromising the machine'
                                type: string
                              partition:
                                description: 'The partition in the volume that you
                                  want to mount. If omitted, the default is to mount
                                  by volume name. Examples: For volume /dev/sda1,
                                  you specify the partition as "1". Similarly, the
                                  volume partition for /dev/sda is "0" (or you can
                                  leave the property empty).'
                                format: int32
                                type: integer
                              readOnly:
                                description: 'Specify "true" to force and set the
                                  ReadOnly property in VolumeMounts to "true". If
                                  omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                type: boolean
                              volumeID:
                                description: 'Unique ID of the persistent disk resource
                                  in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                type: string
                            required:
                            - volumeID
                            type: object
                          azureDisk:
                            description: AzureDisk represents an Azure Data Disk mount
                              on the host and bind mount to the pod.
                            properties:
                              cachingMode:
                                description: 'Host Caching mode: None, Read Only,
                                  Read Write.'
                                type: string
                              diskName:
                                description: The Name of the data disk in the blob
                                  storage
                                type: string
                              diskURI:
                                description: The URI the data disk in the blob storage
                                type: string
                              fsType:
                                description: Filesystem type to mount. Must be a filesystem
                                  type supported by the host operating system. Ex.
                                  "ext4", "xfs", "ntfs". Implicitly inferred to be
                                  "ext4" if unspecified.
                                type: string
                              kind:
                                description: 'Expected values Shared: multiple blob
                                  disks per storage account  Dedicated: single blob
                                  disk per storage account  Managed: azure managed
                                  data disk (only in managed availability set). defaults
                                  to shared'
                                type: string
                              readOnly:
                                description: Defaults to false (read/write). ReadOnly
                                  here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                            required:
                            - diskName
                            - diskURI
                            type: object
                          azureFile:
                            description: AzureFile represents an Azure File Service
                              mount on the host and bind mount to the pod.
                            properties:
                              readOnly:
                                description: Defaults to false (read/write). ReadOnly
                                  here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                              secretName:
                                description: the name of secret that contains Azure
                                  Storage Account Name and Key
                                type: string
                              shareName:
                                description: Share Name
                                type: string
                            required:
                            - secretName
                            - shareName
                            type: object
                          cephfs:
                            description: CephFS represents a Ceph FS mount on the
                              host that shares a pod's lifetime
                            properties:
                              monitors:
                                description: 'Required: Monitors is a collection of
                                  Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                items:
                                  type: string
                                type: array
                              path:
                                description: 'Optional: Used as the mounted root,
                                  rather than the full Ceph tree, default is /'
                                type: string
                              readOnly:
                                description: 'Optional: Defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting in
                                  VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                type: boolean
                              secretFile:
                                description: 'Optional: SecretFile is the path to
                                  key ring for User, default is /etc/ceph/user.secret
                                  More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                type: string
                              secretRef:
                                description: 'Optional: SecretRef is reference to
                                  the authentication secret for User, default is empty.
                                  More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                type: object
                              user:
                                description: 'Optional: User is the rados user name,
                                  default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                type: string
                            required:
                            - monitors
                            type: object
                          cinder:
                            description: 'Cinder represents a cinder volume attached
                              and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            properties:
                              fsType:
                                description: 'Filesystem type to mount. Must be a
                                  filesystem type supported by the host operating
                                  system. Examples: "ext4", "xfs", "ntfs". Implicitly
                                  inferred to be "ext4" if unspecified. More info:
                                  https://examples.k8s.io/mysql-cinder-pd/README.md'
                                type: string
                              readOnly:
                                description: 'Optional: Defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting in
                                  VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                type: boolean
                              secretRef:
                                description: 'Optional: points to a secret object
                                  containing parameters used to connect to OpenStack.'
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                type: object
                              volumeID:
                                description: 'volume id used to identify the volume
                                  in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                type: string
                            required:
                            - volumeID
                            type: object
                          configMap:
                            description: ConfigMap represents a configMap that should
                              populate this volume
                            properties:
                              defaultMode:
                                description: 'Optional: mode bits to use on created
                                  files by default. Must be a value between 0 and
                                  0777. Defaults to 0644. Directories within the path
                                  are not affected by this setting. This might be
                                  in conflict with other options that affect the file
                                  mode, like fsGroup, and the result can be other
                                  mode bits set.'
                                format: int32
                                type: integer
                              items:
                                description: If unspecified, each key-value pair in
                                  the Data field of the referenced ConfigMap will
                                  be projected into the volume as a file whose name
                                  is the key and content is the value. If specified,
                                  the listed keys will be projected into the specified
                                  paths, and unlisted keys will not be present. If
                                  a key is specified which is not present in the ConfigMap,
                                  the volume setup will error unless it is marked
                                  optional. Paths must be relative and may not contain
                                  the '..' path or start with '..'.
                                items:
                                  description: Maps a string key to a path within
                                    a volume.
                                  properties:
                                    key:
                                      description: The key to project.
                                      type: string
                                    mode:
                                      description: 'Optional: mode bits to use on
                                        this file, must be a value between 0 and 0777.
                                        If not specified, the volume defaultMode will
                                        be used. This might be in conflict with other
                                        options that affect the file mode, like fsGroup,
                                        and the result can be other mode bits set.'
                                      format: int32
                                      type: integer
                                    path:
                                      description: The relative path of the file to
                                        map the key to. May not be an absolute path.
                                        May not contain the path element '..'. May
                                        not start with the string '..'.
                                      type: string
                                  required:
                                  - key
                                  - path
                                  type: object
                                type: array
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  keys must be defined
                                type: boolean
                            type: object
                          csi:
                            description: CSI (Container Storage Interface) represents
                              storage that is handled by an external CSI driver (Alpha
                              feature).
                            properties:
                              driver:
                                description: Driver is the name of the CSI driver
                                  that handles this volume. Consult with your admin
                                  for the correct name as registered in the cluster.
                                type: string
                              fsType:
                                description: Filesystem type to mount. Ex. "ext4",
                                  "xfs", "ntfs". If not provided, the empty value
                                  is passed to the associated CSI driver which will
                                  determine the default filesystem to apply.
                                type: string
                              nodePublishSecretRef:
                                description: NodePublishSecretRef is a reference to
                                  the secret object containing sensitive information
                                  to pass to the CSI driver to complete the CSI NodePublishVolume
                                  and NodeUnpublishVolume calls. This field is optional,
                                  and  may be empty if no secret is required. If the
                                  secret object contains more than one secret, all
                                  secret references are passed.
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                type: object
                              readOnly:
                                description: Specifies a read-only configuration for
                                  the volume. Defaults to false (read/write).
                                type: boolean
                              volumeAttributes:
                                additionalProperties:
                                  type: string
                                description: VolumeAttributes stores driver-specific
                                  properties that are passed to the CSI driver. Consult
                                  your driver's documentation for supported values.
                                type: object
                            required:
                            - driver
                            type: object
                          downwardAPI:
                            description: DownwardAPI represents downward API about
                              the pod that should populate this volume
                            properties:
                              defaultMode:
                                description: 'Optional: mode bits to use on created
                                  files by default. Must be a value between 0 and
                                  0777. Defaults to 0644. Directories within the path
                                  are not affected by this setting. This might be
                                  in conflict with other options that affect the file
                                  mode, like fsGroup, and the result can be other
                                  mode bits set.'
                                format: int32
                                type: integer
                              items:
                                description: Items is a list of downward API volume
                                  file
                                items:
                                  description: DownwardAPIVolumeFile represents information
                                    to create the file containing the pod field
                                  properties:
                                    fieldRef:
                                      description: 'Required: Selects a field of the
                                        pod: only annotations, labels, name and namespace
                                        are supported.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                    mode:
                                      description: 'Optional: mode bits to use on
                                        this file, must be a value between 0 and 0777.
                                        If not specified, the volume defaultMode will
                                        be used. This might be in conflict with other
                                        options that affect the file mode, like fsGroup,
                                        and the result can be other mode bits set.'
                                      format: int32
                                      type: integer
                                    path:
                                      description: 'Required: Path is  the relative
                                        path name of the file to be created. Must
                                        not be absolute or contain the ''..'' path.
                                        Must be utf-8 encoded. The first item of the
                                        relative path must not start with ''..'''
                                      type: string
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, requests.cpu and requests.memory)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                  required:
                                  - path
                                  type: object
                                type: array
                            type: object
                          emptyDir:
                            description: 'EmptyDir represents a temporary directory
                              that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                            properties:
                              medium:
                                description: 'What type of storage medium should back
                                  this directory. The default is "" which means to
                                  use the node''s default medium. Must be an empty
                                  string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                type: string
                              sizeLimit:
                                anyOf:
                                - type: integer
                                - type: string
                                description: 'Total amount of local storage required
                                  for this EmptyDir volume. The size limit is also
                                  applicable for memory medium. The maximum usage
                                  on memory medium EmptyDir would be the minimum value
                                  between the SizeLimit specified here and the sum
                                  of memory limits of all containers in a pod. The
                                  default is nil which means that the limit is undefined.
                                  More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                            type: object
                          fc:
                            description: FC represents a Fibre Channel resource that
                              is attached to a kubelet's host machine and then exposed
                              to the pod.
                            properties:
                              fsType:
                                description: 'Filesystem type to mount. Must be a
                                  filesystem type supported by the host operating
                                  system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                  to be "ext4" if unspecified. TODO: how do we prevent
                                  errors in the filesystem from compromising the machine'
                                type: string
                              lun:
                                description: 'Optional: FC target lun number'
                                format: int32
                                type: integer
                              readOnly:
                                description: 'Optional: Defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting in
                                  VolumeMounts.'
                                type: boolean
                              targetWWNs:
                                description: 'Optional: FC target worldwide names
                                  (WWNs)'
                                items:
                                  type: string
                                type: array
                              wwids:
                                description: 'Optional: FC volume world wide identifiers
                                  (wwids) Either wwids or combination of targetWWNs
                                  and lun must be set, but not both simultaneously.'
                                items:
                                  type: string
                                type: array
                            type: object
                          flexVolume:
                            description: FlexVolume represents a generic volume resource
                              that is provisioned/attached using an exec based plugin.
                            properties:
                              driver:
                                description: Driver is the name of the driver to use
                                  for this volume.
                                type: string
                              fsType:
                                description: Filesystem type to mount. Must be a filesystem
                                  type supported by the host operating system. Ex.
                                  "ext4", "xfs", "ntfs". The default filesystem depends
                                  on FlexVolume script.
                                type: string
                              options:
                                additionalProperties:
                                  type: string
                                description: 'Optional: Extra command options if any.'
                                type: object
                              readOnly:
                                description: 'Optional: Defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting in
                                  VolumeMounts.'
                                type: boolean
                              secretRef:
                                description: 'Optional: SecretRef is reference to
                                  the secret object containing sensitive information
                                  to pass to the plugin scripts. This may be empty
                                  if no secret object is specified. If the secret
                                  object contains more than one secret, all secrets
                                  are passed to the plugin scripts.'
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                type: object
                            required:
                            - driver
                            type: object
                          flocker:
                            description: Flocker represents a Flocker volume attached
                              to a kubelet's host machine. This depends on the Flocker
                              control service being running
                            properties:
                              datasetName:
                                description: Name of the dataset stored as metadata
                                  -> name on the dataset for Flocker should be considered
                                  as deprecated
                                type: string
                              datasetUUID:
                                description: UUID of the dataset. This is unique identifier
                                  of a Flocker dataset
                                type: string
                            type: object
                          gcePersistentDisk:
                            description: 'GCEPersistentDisk represents a GCE Disk
                              resource that is attached to a kubelet''s host machine
                              and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            properties:
                              fsType:
                                description: 'Filesystem type of the volume that you
                                  want to mount. Tip: Ensure that the filesystem type
                                  is supported by the host operating system. Examples:
                                  "ext4", "xfs", "ntfs". Implicitly inferred to be
                                  "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                  TODO: how do we prevent errors in the filesystem
                                  from compromising the machine'
                                type: string
                              partition:
                                description: 'The partition in the volume that you
                                  want to mount. If omitted, the default is to mount
                                  by volume name. Examples: For volume /dev/sda1,
                                  you specify the partition as "1". Similarly, the
                                  volume partition for /dev/sda is "0" (or you can
                                  leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                format: int32
                                type: integer
                              pdName:
                                description: 'Unique name of the PD resource in GCE.
                                  Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                type: string
                              readOnly:
                                description: 'ReadOnly here will force the ReadOnly
                                  setting in VolumeMounts. Defaults to false. More
                                  info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                type: boolean
                            required:
                            - pdName
                            type: object
                          gitRepo:
                            description: 'GitRepo represents a git repository at a
                              particular revision. DEPRECATED: GitRepo is deprecated.
                              To provision a container with a git repo, mount an EmptyDir
                              into an InitContainer that clones the repo using git,
                              then mount the EmptyDir into the Pod''s container.'
                            properties:
                              directory:
                                description: Target directory name. Must not contain
                                  or start with '..'.  If '.' is supplied, the volume
                                  directory will be the git repository.  Otherwise,
                                  if specified, the volume will contain the git repository
                                  in the subdirectory with the given name.
                                type: string
                              repository:
                                description: Repository URL
                                type: string
                              revision:
                                description: Commit hash for the specified revision.
                                type: string
                            required:
                            - repository
                            type: object
                          glusterfs:
                            description: 'Glusterfs represents a Glusterfs mount on
                              the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                            properties:
                              endpoints:
                                description: 'EndpointsName is the endpoint name that
                                  details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                type: string
                              path:
                                description: 'Path is the Glusterfs volume path. More
                                  info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                type: string
                              readOnly:
                                description: 'ReadOnly here will force the Glusterfs
                                  volume to be mounted with read-only permissions.
                                  Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                type: boolean
                            required:
                            - endpoints
                            - path
                            type: object
                          hostPath:
                            description: 'HostPath represents a pre-existing file
                              or directory on the host machine that is directly exposed
                              to the container. This is generally used for system
                              agents or other privileged things that are allowed to
                              see the host machine. Most containers will NOT need
                              this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                              --- TODO(jonesdl) We need to restrict who can use host
                              directory mounts and who can/can not mount host directories
                              as read/write.'
                            properties:
                              path:
                                description: 'Path of the directory on the host. If
                                  the path is a symlink, it will follow the link to
                                  the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                type: string
                              type:
                                description: 'Type for HostPath Volume Defaults to
                                  "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                type: string
                            required:
                            - path
                            type: object
                          iscsi:
                            description: 'ISCSI represents an ISCSI Disk resource
                              that is attached to a kubelet''s host machine and then
                              exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                            properties:
                              chapAuthDiscovery:
                                description: whether support iSCSI Discovery CHAP
                                  authentication
                                type: boolean
                              chapAuthSession:
                                description: whether support iSCSI Session CHAP authentication
                                type: boolean
                              fsType:
                                description: 'Filesystem type of the volume that you
                                  want to mount. Tip: Ensure that the filesystem type
                                  is supported by the host operating system. Examples:
                                  "ext4", "xfs", "ntfs". Implicitly inferred to be
                                  "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                  TODO: how do we prevent errors in the filesystem
                                  from compromising the machine'
                                type: string
                              initiatorName:
                                description: Custom iSCSI Initiator Name. If initiatorName
                                  is specified with iscsiInterface simultaneously,
                                  new iSCSI interface <target portal>:<volume name>
                                  will be created for the connection.
                                type: string
                              iqn:
                                description: Target iSCSI Qualified Name.
                                type: string
                              iscsiInterface:
                                description: iSCSI Interface Name that uses an iSCSI
                                  transport. Defaults to 'default' (tcp).
                                type: string
                              lun:
                                description: iSCSI Target Lun number.
                                format: int32
                                type: integer
                              portals:
                                description: iSCSI Target Portal List. The portal
                                  is either an IP or ip_addr:port if the port is other
                                  than default (typically TCP ports 860 and 3260).
                                items:
                                  type: string
                                type: array
                              readOnly:
                                description: ReadOnly here will force the ReadOnly
                                  setting in VolumeMounts. Defaults to false.
                                type: boolean
                              secretRef:
                                description: CHAP Secret for iSCSI target and initiator
                                  authentication
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                type: object
                              targetPortal:
                                description: iSCSI Target Portal. The Portal is either
                                  an IP or ip_addr:port if the port is other than
                                  default (typically TCP ports 860 and 3260).
                                type: string
                            required:
                            - iqn
                            - lun
                            - targetPortal
                            type: object
                          name:
                            description: 'Volume''s name. Must be a DNS_LABEL and
                              unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          nfs:
                            description: 'NFS represents an NFS mount on the host
                              that shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                            properties:
                              path:
                                description: 'Path that is exported by the NFS server.
                                  More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                type: string
                              readOnly:
                                description: 'ReadOnly here will force the NFS export
                                  to be mounted with read-only permissions. Defaults
                                  to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                type: boolean
                              server:
                                description: 'Server is the hostname or IP address
                                  of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                type: string
                            required:
                            - path
                            - server
                            type: object
                          persistentVolumeClaim:
                            description: 'PersistentVolumeClaimVolumeSource represents
                              a reference to a PersistentVolumeClaim in the same namespace.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                            properties:
                              claimName:
                                description: 'ClaimName is the name of a PersistentVolumeClaim
                                  in the same namespace as the pod using this volume.
                                  More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                type: string
                              readOnly:
                                description: Will force the ReadOnly setting in VolumeMounts.
                                  Default false.
                                type: boolean
                            required:
                            - claimName
                            type: object
                          photonPersistentDisk:
                            description: PhotonPersistentDisk represents a PhotonController
                              persistent disk attached and mounted on kubelets host
                              machine
                            properties:
                              fsType:
                                description: Filesystem type to mount. Must be a filesystem
                                  type supported by the host operating system. Ex.
                                  "ext4", "xfs", "ntfs". Implicitly inferred to be
                                  "ext4" if unspecified.
                                type: string
                              pdID:
                                description: ID that identifies Photon Controller
                                  persistent disk
                                type: string
                            required:
                            - pdID
                            type: object
                          portworxVolume:
                            description: PortworxVolume represents a portworx volume
                              attached and mounted on kubelets host machine
                            properties:
                              fsType:
                                description: FSType represents the filesystem type
                                  to mount Must be a filesystem type supported by
                                  the host operating system. Ex. "ext4", "xfs". Implicitly
                                  inferred to be "ext4" if unspecified.
                                type: string
                              readOnly:
                                description: Defaults to false (read/write). ReadOnly
                                  here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                              volumeID:
                                description: VolumeID uniquely identifies a Portworx
                                  volume
                                type: string
                            required:
                            - volumeID
                            type: object
                          projected:
                            description: Items for all in one resources secrets, configmaps,
                              and downward API
                            properties:
                              defaultMode:
                                description: Mode bits to use on created files by
                                  default. Must be a value between 0 and 0777. Directories
                                  within the path are not affected by this setting.
                                  This might be in conflict with other options that
                                  affect the file mode, like fsGroup, and the result
                                  can be other mode bits set.
                                format: int32
                                type: integer
                              sources:
                                description: list of volume projections
                                items:
                                  description: Projection that may be projected along
                                    with other supported volume types
                                  properties:
                                    configMap:
                                      description: information about the configMap
                                        data to project
                                      properties:
                                        items:
                                          description: If unspecified, each key-value
                                            pair in the Data field of the referenced
                                            ConfigMap will be projected into the volume
                                            as a file whose name is the key and content
                                            is the value. If specified, the listed
                                            keys will be projected into the specified
                                            paths, and unlisted keys will not be present.
                                            If a key is specified which is not present
                                            in the ConfigMap, the volume setup will
                                            error unless it is marked optional. Paths
                                            must be relative and may not contain the
                                            '..' path or start with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: The key to project.
                                                type: string
                                              mode:
                                                description: 'Optional: mode bits
                                                  to use on this file, must be a value
                                                  between 0 and 0777. If not specified,
                                                  the volume defaultMode will be used.
                                                  This might be in conflict with other
                                                  options that affect the file mode,
                                                  like fsGroup, and the result can
                                                  be other mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: The relative path of
                                                  the file to map the key to. May
                                                  not be an absolute path. May not
                                                  contain the path element '..'. May
                                                  not start with the string '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its keys must be defined
                                          type: boolean
                                      type: object
                                    downwardAPI:
                                      description: information about the downwardAPI
                                        data to project
                                      properties:
                                        items:
                                          description: Items is a list of DownwardAPIVolume
                                            file
                                          items:
                                            description: DownwardAPIVolumeFile represents
                                              information to create the file containing
                                              the pod field
                                            properties:
                                              fieldRef:
                                                description: 'Required: Selects a
                                                  field of the pod: only annotations,
                                                  labels, name and namespace are supported.'
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                              mode:
                                                description: 'Optional: mode bits
                                                  to use on this file, must be a value
                                                  between 0 and 0777. If not specified,
                                                  the volume defaultMode will be used.
                                                  This might be in conflict with other
                                                  options that affect the file mode,
                                                  like fsGroup, and the result can
                                                  be other mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: 'Required: Path is  the
                                                  relative path name of the file to
                                                  be created. Must not be absolute
                                                  or contain the ''..'' path. Must
                                                  be utf-8 encoded. The first item
                                                  of the relative path must not start
                                                  with ''..'''
                                                type: string
                                              resourceFieldRef:
                                                description: 'Selects a resource of
                                                  the container: only resources limits
                                                  and requests (limits.cpu, limits.memory,
                                                  requests.cpu and requests.memory)
                                                  are currently supported.'
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                            required:
                                            - path
                                            type: object
                                          type: array
                                      type: object
                                    secret:
                                      description: information about the secret data
                                        to project
                                      properties:
                                        items:
                                          description: If unspecified, each key-value
                                            pair in the Data field of the referenced
                                            Secret will be projected into the volume
                                            as a file whose name is the key and content
                                            is the value. If specified, the listed
                                            keys will be projected into the specified
                                            paths, and unlisted keys will not be present.
                                            If a key is specified which is not present
                                            in the Secret, the volume setup will error
                                            unless it is marked optional. Paths must
                                            be relative and may not contain the '..'
                                            path or start with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: The key to project.
                                                type: string
                                              mode:
                                                description: 'Optional: mode bits
                                                  to use on this file, must be a value
                                                  between 0 and 0777. If not specified,
                                                  the volume defaultMode will be used.
                                                  This might be in conflict with other
                                                  options that affect the file mode,
                                                  like fsGroup, and the result can
                                                  be other mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: The relative path of
                                                  the file to map the key to. May
                                                  not be an absolute path. May not
                                                  contain the path element '..'. May
                                                  not start with the string '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      type: object
                                    serviceAccountToken:
                                      description: information about the serviceAccountToken
                                        data to project
                                      properties:
                                        audience:
                                          description: Audience is the intended audience
                                            of the token. A recipient of a token must
                                            identify itself with an identifier specified
                                            in the audience of the token, and otherwise
                                            should reject the token. The audience
                                            defaults to the identifier of the apiserver.
                                          type: string
                                        expirationSeconds:
                                          description: ExpirationSeconds is the requested
                                            duration of validity of the service account
                                            token. As the token approaches expiration,
                                            the kubelet volume plugin will proactively
                                            rotate the service account token. The
                                            kubelet will start trying to rotate the
                                            token if the token is older than 80 percent
                                            of its time to live or if the token is
                                            older than 24 hours.Defaults to 1 hour
                                            and must be at least 10 minutes.
                                          format: int64
                                          type: integer
                                        path:
                                          description: Path is the path relative to
                                            the mount point of the file to project
                                            the token into.
                                          type: string
                                      required:
                                      - path
                                      type: object
                                  type: object
                                type: array
                            required:
                            - sources
                            type: object
                          quobyte:
                            description: Quobyte represents a Quobyte mount on the
                              host that shares a pod's lifetime
                            properties:
                              group:
                                description: Group to map volume access to Default
                                  is no group
                                type: string
                              readOnly:
                                description: ReadOnly here will force the Quobyte
                                  volume to be mounted with read-only permissions.
                                  Defaults to false.
                                type: boolean
                              registry:
                                description: Registry represents a single or multiple
                                  Quobyte Registry services specified as a string
                                  as host:port pair (multiple entries are separated
                                  with commas) which acts as the central registry
                                  for volumes
                                type: string
                              tenant:
                                description: Tenant owning the given Quobyte volume
                                  in the Backend Used with dynamically provisioned
                                  Quobyte volumes, value is set by the plugin
                                type: string
                              user:
                                description: User to map volume access to Defaults
                                  to serivceaccount user
                                type: string
                              volume:
                                description: Volume is a string that references an
                                  already created Quobyte volume by name.
                                type: string
                            required:
                            - registry
                            - volume
                            type: object
                          rbd:
                            description: 'RBD represents a Rados Block Device mount
                              on the host that shares a pod''s lifetime. More info:
                              https://examples.k8s.io/volumes/rbd/README.md'
                            properties:
                              fsType:
                                description: 'Filesystem type of the volume that you
                                  want to mount. Tip: Ensure that the filesystem type
                                  is supported by the host operating system. Examples:
                                  "ext4", "xfs", "ntfs". Implicitly inferred to be
                                  "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                  TODO: how do we prevent errors in the filesystem
                                  from compromising the machine'
                                type: string
                              image:
                                description: 'The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                              keyring:
                                description: 'Keyring is the path to key ring for
                                  RBDUser. Default is /etc/ceph/keyring. More info:
                                  https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                              monitors:
                                description: 'A collection of Ceph monitors. More
                                  info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                items:
                                  type: string
                                type: array
                              pool:
                                description: 'The rados pool name. Default is rbd.
                                  More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                              readOnly:
                                description: 'ReadOnly here will force the ReadOnly
                                  setting in VolumeMounts. Defaults to false. More
                                  info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: boolean
                              secretRef:
                                description: 'SecretRef is name of the authentication
                                  secret for RBDUser. If provided overrides keyring.
                                  Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                type: object
                              user:
                                description: 'The rados user name. Default is admin.
                                  More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                            required:
                            - image
                            - monitors
                            type: object
                          scaleIO:
                            description: ScaleIO represents a ScaleIO persistent volume
                              attached and mounted on Kubernetes nodes.
                            properties:
                              fsType:
                                description: Filesystem type to mount. Must be a filesystem
                                  type supported by the host operating system. Ex.
                                  "ext4", "xfs", "ntfs". Default is "xfs".
                                type: string
                              gateway:
                                description: The host address of the ScaleIO API Gateway.
                                type: string
                              protectionDomain:
                                description: The name of the ScaleIO Protection Domain
                                  for the configured storage.
                                type: string
                              readOnly:
                                description: Defaults to false (read/write). ReadOnly
                                  here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                              secretRef:
                                description: SecretRef references to the secret for
                                  ScaleIO user and other sensitive information. If
                                  this is not provided, Login operation will fail.
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                type: object
                              sslEnabled:
                                description: Flag to enable/disable SSL communication
                                  with Gateway, default false
                                type: boolean
                              storageMode:
                                description: Indicates whether the storage for a volume
                                  should be ThickProvisioned or ThinProvisioned. Default
                                  is ThinProvisioned.
                                type: string
                              storagePool:
                                description: The ScaleIO Storage Pool associated with
                                  the protection domain.
                                type: string
                              system:
                                description: The name of the storage system as configured
                                  in ScaleIO.
                                type: string
                              volumeName:
                                description: The name of a volume already created
                                  in the ScaleIO system that is associated with this
                                  volume source.
                                type: string
                            required:
                            - gateway
                            - secretRef
                            - system
                            type: object
                          secret:
                            description: 'Secret represents a secret that should populate
                              this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                            properties:
                              defaultMode:
                                description: 'Optional: mode bits to use on created
                                  files by default. Must be a value between 0 and
                                  0777. Defaults to 0644. Directories within the path
                                  are not affected by this setting. This might be
                                  in conflict with other options that affect the file
                                  mode, like fsGroup, and the result can be other
                                  mode bits set.'
                                format: int32
                                type: integer
                              items:
                                description: If unspecified, each key-value pair in
                                  the Data field of the referenced Secret will be
                                  projected into the volume as a file whose name is
                                  the key and content is the value. If specified,
                                  the listed keys will be projected into the specified
                                  paths, and unlisted keys will not be present. If
                                  a key is specified which is not present in the Secret,
                                  the volume setup will error unless it is marked
                                  optional. Paths must be relative and may not contain
                                  the '..' path or start with '..'.
                                items:
                                  description: Maps a string key to a path within
                                    a volume.
                                  properties:
                                    key:
                                      description: The key to project.
                                      type: string
                                    mode:
                                      description: 'Optional: mode bits to use on
                                        this file, must be a value between 0 and 0777.
                                        If not specified, the volume defaultMode will
                                        be used. This might be in conflict with other
                                        options that affect the file mode, like fsGroup,
                                        and the result can be other mode bits set.'
                                      format: int32
                                      type: integer
                                    path:
                                      description: The relative path of the file to
                                        map the key to. May not be an absolute path.
                                        May not contain the path element '..'. May
                                        not start with the string '..'.
                                      type: string
                                  required:
                                  - key
                                  - path
                                  type: object
                                type: array
                              optional:
                                description: Specify whether the Secret or its keys
                                  must be defined
                                type: boolean
                              secretName:
                                description: 'Name of the secret in the pod''s namespace
                                  to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                type: string
                            type: object
                          storageos:
                            description: StorageOS represents a StorageOS volume attached
                              and mounted on Kubernetes nodes.
                            properties:
                              fsType:
                                description: Filesystem type to mount. Must be a filesystem
                                  type supported by the host operating system. Ex.
                                  "ext4", "xfs", "ntfs". Implicitly inferred to be
                                  "ext4" if unspecified.
                                type: string
                              readOnly:
                                description: Defaults to false (read/write). ReadOnly
                                  here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                              secretRef:
                                description: SecretRef specifies the secret to use
                                  for obtaining the StorageOS API credentials.  If
                                  not specified, default values will be attempted.
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                type: object
                              volumeName:
                                description: VolumeName is the human-readable name
                                  of the StorageOS volume.  Volume names are only
                                  unique within a namespace.
                                type: string
                              volumeNamespace:
                                description: VolumeNamespace specifies the scope of
                                  the volume within StorageOS.  If no namespace is
                                  specified then the Pod's namespace will be used.  This
                                  allows the Kubernetes name scoping to be mirrored
                                  within StorageOS for tighter integration. Set VolumeName
                                  to any name to override the default behaviour. Set
                                  to "default" if you are not using namespaces within
                                  StorageOS. Namespaces that do not pre-exist within
                                  StorageOS will be created.
                                type: string
                            type: object
                          vsphereVolume:
                            description: VsphereVolume represents a vSphere volume
                              attached and mounted on kubelets host machine
                            properties:
                              fsType:
                                description: Filesystem type to mount. Must be a filesystem
                                  type supported by the host operating system. Ex.
                                  "ext4", "xfs", "ntfs". Implicitly inferred to be
                                  "ext4" if unspecified.
                                type: string
                              storagePolicyID:
                                description: Storage Policy Based Management (SPBM)
                                  profile ID associated with the StoragePolicyName.
                                type: string
                              storagePolicyName:
                                description: Storage Policy Based Management (SPBM)
                                  profile name.
                                type: string
                              volumePath:
                                description: Path that identifies vSphere volume vmdk
                                type: string
                            required:
                            - volumePath
                            type: object
                        required:
                        - name
                        type: object
                      type: array
                  type: object
                installPlanApproval:
                  description: Approval is the user approval policy for an InstallPlan.
                    It must be one of "Automatic" or "Manual".
                  type: string
                name:
                  type: string
                source:
                  type: string
                sourceNamespace:
                  type: string
                startingCSV:
                  type: string
              required:
              - name
              - source
              - sourceNamespace
              type: object
            status:
              properties:
                catalogHealth:
                  description: CatalogHealth contains the Subscription's view of its
                    relevant CatalogSources' status. It is used to determine SubscriptionStatusConditions
                    related to CatalogSources.
                  items:
                    description: SubscriptionCatalogHealth describes the health of
                      a CatalogSource the Subscription knows about.
                    properties:
                      catalogSourceRef:
                        description: CatalogSourceRef is a reference to a CatalogSource.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      healthy:
                        description: Healthy is true if the CatalogSource is healthy;
                          false otherwise.
                        type: boolean
                      lastUpdated:
                        description: LastUpdated represents the last time that the
                          CatalogSourceHealth changed
                        format: date-time
                        type: string
                    required:
                    - catalogSourceRef
                    - healthy
                    - lastUpdated
                    type: object
                  type: array
                conditions:
                  description: Conditions is a list of the latest available observations
                    about a Subscription's current state.
                  items:
                    description: SubscriptionCondition represents the latest available
                      observations of a Subscription's state.
                    properties:
                      lastHeartbeatTime:
                        description: LastHeartbeatTime is the last time we got an
                          update on a given condition
                        format: date-time
                        type: string
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transit from one status to another
                        format: date-time
                        type: string
                      message:
                        description: Message is a human-readable message indicating
                          details about last transition.
                        type: string
                      reason:
                        description: Reason is a one-word CamelCase reason for the
                          condition's last transition.
                        type: string
                      status:
                        description: Status is the status of the condition, one of
                          True, False, Unknown.
                        type: string
                      type:
                        description: Type is the type of Subscription condition.
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                currentCSV:
                  description: CurrentCSV is the CSV the Subscription is progressing
                    to.
                  type: string
                installPlanGeneration:
                  description: InstallPlanGeneration is the current generation of
                    the installplan
                  type: integer
                installPlanRef:
                  description: InstallPlanRef is a reference to the latest InstallPlan
                    that contains the Subscription's current CSV.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                installedCSV:
                  description: InstalledCSV is the CSV currently installed by the
                    Subscription.
                  type: string
                installplan:
                  description: 'Install is a reference to the latest InstallPlan generated
                    for the Subscription. DEPRECATED: InstallPlanRef'
                  properties:
                    apiVersion:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                    uuid:
                      description: UID is a type that holds unique ID values, including
                        UUIDs.  Because we don't ONLY use UUIDs, this is an alias
                        to string.  Being a type captures intent and helps make sure
                        that UIDs and names do not get conflated.
                      type: string
                  required:
                  - apiVersion
                  - kind
                  - name
                  - uuid
                  type: object
                lastUpdated:
                  description: LastUpdated represents the last time that the Subscription
                    status was updated.
                  format: date-time
                  type: string
                reason:
                  description: Reason is the reason the Subscription was transitioned
                    to its current state.
                  type: string
                state:
                  description: State represents the current state of the Subscription
                  type: string
              required:
              - lastUpdated
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - olm
      kind: Subscription
      listKind: SubscriptionList
      plural: subscriptions
      shortNames:
      - sub
      - subs
      singular: subscription
    conditions:
    - lastTransitionTime: "2020-11-18T12:59:05Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:59:07Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"default","app.kubernetes.io/part-of":"tekton-pipelines","pipeline.tekton.dev/release":"v0.18.1","version":"v0.18.1"},"name":"taskruns.tekton.dev"},"spec":{"conversion":{"strategy":"Webhook","webhook":{"clientConfig":{"service":{"name":"tekton-pipelines-webhook","namespace":"tekton-pipelines"}},"conversionReviewVersions":["v1beta1"]}},"group":"tekton.dev","names":{"categories":["tekton","tekton-pipelines"],"kind":"TaskRun","plural":"taskruns","shortNames":["tr","trs"]},"preserveUnknownFields":false,"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".status.conditions[?(@.type==\"Succeeded\")].status","name":"Succeeded","type":"string"},{"jsonPath":".status.conditions[?(@.type==\"Succeeded\")].reason","name":"Reason","type":"string"},{"jsonPath":".status.startTime","name":"StartTime","type":"date"},{"jsonPath":".status.completionTime","name":"CompletionTime","type":"date"}],"name":"v1alpha1","schema":{"openAPIV3Schema":{"type":"object","x-kubernetes-preserve-unknown-fields":true}},"served":true,"storage":false,"subresources":{"status":{}}},{"additionalPrinterColumns":[{"jsonPath":".status.conditions[?(@.type==\"Succeeded\")].status","name":"Succeeded","type":"string"},{"jsonPath":".status.conditions[?(@.type==\"Succeeded\")].reason","name":"Reason","type":"string"},{"jsonPath":".status.startTime","name":"StartTime","type":"date"},{"jsonPath":".status.completionTime","name":"CompletionTime","type":"date"}],"name":"v1beta1","schema":{"openAPIV3Schema":{"type":"object","x-kubernetes-preserve-unknown-fields":true}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
    creationTimestamp: "2020-12-01T17:28:11Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines
      pipeline.tekton.dev/release: v0.18.1
      version: v0.18.1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-12-01T17:28:11Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:pipeline.tekton.dev/release: {}
            f:version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
            f:webhook:
              .: {}
              f:clientConfig:
                .: {}
                f:service:
                  .: {}
                  f:name: {}
                  f:namespace: {}
                  f:port: {}
              f:conversionReviewVersions: {}
          f:group: {}
          f:names:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: oc
      operation: Update
      time: "2020-12-01T17:28:11Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:conversion:
            f:webhook:
              f:clientConfig:
                f:caBundle: {}
                f:service:
                  f:path: {}
      manager: webhook
      operation: Update
      time: "2020-12-01T17:28:20Z"
    name: taskruns.tekton.dev
    resourceVersion: "5635430"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/taskruns.tekton.dev
    uid: 676d22c7-7450-40af-9b7f-3938435b5d87
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVTakNDQXpLZ0F3SUJBZ0lRQzJVdUlZK2lWem4zNlFCaFJJSENEREFOQmdrcWhraUc5dzBCQVFzRkFEQk8KTVJRd0VnWURWUVFLRXd0cmJtRjBhWFpsTG1SbGRqRTJNRFFHQTFVRUF4TXRkR1ZyZEc5dUxYQnBjR1ZzYVc1bApjeTEzWldKb2IyOXJMblJsYTNSdmJpMXdhWEJsYkdsdVpYTXVjM1pqTUI0WERUSXdNVEl3TVRFM01qZ3hPVm9YCkRUSXhNVEl3TVRFM01qZ3hPRm93VGpFVU1CSUdBMVVFQ2hNTGEyNWhkR2wyWlM1a1pYWXhOakEwQmdOVkJBTVQKTFhSbGEzUnZiaTF3YVhCbGJHbHVaWE10ZDJWaWFHOXZheTUwWld0MGIyNHRjR2x3Wld4cGJtVnpMbk4yWXpDQwpBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtlbDJTVXhOM2NGT1BnWUdVTExEdW1YCnQvL3RMWXhmY2h5ZWI3bGVvMmRWZWFRQUNUYXRoMFpnR0JQTFB1NlJ1WW8vTWdZUHUvaHJ6a3liRU9OcjhnLzYKRTJ6R0FhY2ZZcHlqaktzOWI3c2d3ME1CS2hwYmxpdnFHSHR2TVE0cGlUSjUwcUU1UUtiSVh0WkZzY3NlS1M2dQpJcE9lWW9oSER2V3Z5RDY0U01sVExsTHl6T0JZWTd3YlNYZER5clNUMjEvcmlFbndDaVlIcFZ1Q2VoY1RxdmNBCjFnUkxoSldGTFNZbGFUMGluQUNMbExFd2JLYmN0M0xPeU5lVW01SVF4Zm1XTlRYOUl4VnZoNXVYVG15clBLNy8KaEgwNDJyUXI0b21TbEMva1dTN3RzS0s2SzZHYlVsWUxhNW5pU09LQlkyQTAvNEtGUXJwcldTOVlSY2Y4ejkwQwpBd0VBQWFPQ0FTSXdnZ0VlTUE0R0ExVWREd0VCL3dRRUF3SUNoREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNECkFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVhaUJoczlmM2JwL0cKQ3dRYTJBdE0wRkJwRjlNd2did0dBMVVkRVFTQnREQ0JzWUlZZEdWcmRHOXVMWEJwY0dWc2FXNWxjeTEzWldKbwpiMjlyZ2lsMFpXdDBiMjR0Y0dsd1pXeHBibVZ6TFhkbFltaHZiMnN1ZEdWcmRHOXVMWEJwY0dWc2FXNWxjNEl0CmRHVnJkRzl1TFhCcGNHVnNhVzVsY3kxM1pXSm9iMjlyTG5SbGEzUnZiaTF3YVhCbGJHbHVaWE11YzNaamdqdDAKWld0MGIyNHRjR2x3Wld4cGJtVnpMWGRsWW1odmIyc3VkR1ZyZEc5dUxYQnBjR1ZzYVc1bGN5NXpkbU11WTJ4MQpjM1JsY2k1c2IyTmhiREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBTnZKNFh1M0V3Qm5FQ0xBYUZBVkVMRXRNClVoby9sQitLZzcveHF4OEdJeGNTY0VoVUJTYk1YM0xHaCtvT0p1ZmthenVRb2UxRDMvdDdrWVEyYStBY2graWQKTHgveEo5STdSeHJPMHRId2x2Y2RLaHRpalRxMVBhK3BXdkdKSlh1U0tQWnZaalVWL2Q0RnZSMVFYc2Y4UVRxcQptMGFsU2kzdUxEQ0puOXJwdURlWmNNVHAyVXRobFpWby9qUDFnbGRTclVyZkltKzNWaWlKbVBDdnY3NVJ1VklxCmZNcU56SXhHWkNQUjFGNnJKNUd3cno3ZmRUNFViYnU5eE8xUXk2ZE9KYzNhVXR4dWVsSEwxRGhic1k3aGNDYlgKRWV5d0svaEFwZktRV1VzaW1icXdnRVpvNkZBQml5ZFdHaWxVa3BncUwrY3pSQ1d4V1dlMXppYWdwY3dNVWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          service:
            name: tekton-pipelines-webhook
            namespace: tekton-pipelines
            path: /resource-conversion
            port: 443
        conversionReviewVersions:
        - v1beta1
    group: tekton.dev
    names:
      categories:
      - tekton
      - tekton-pipelines
      kind: TaskRun
      listKind: TaskRunList
      plural: taskruns
      shortNames:
      - tr
      - trs
      singular: taskrun
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Succeeded")].status
        name: Succeeded
        type: string
      - jsonPath: .status.conditions[?(@.type=="Succeeded")].reason
        name: Reason
        type: string
      - jsonPath: .status.startTime
        name: StartTime
        type: date
      - jsonPath: .status.completionTime
        name: CompletionTime
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Succeeded")].status
        name: Succeeded
        type: string
      - jsonPath: .status.conditions[?(@.type=="Succeeded")].reason
        name: Reason
        type: string
      - jsonPath: .status.startTime
        name: StartTime
        type: date
      - jsonPath: .status.completionTime
        name: CompletionTime
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-pipelines
      kind: TaskRun
      listKind: TaskRunList
      plural: taskruns
      shortNames:
      - tr
      - trs
      singular: taskrun
    conditions:
    - lastTransitionTime: "2020-12-01T17:28:11Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-12-01T17:28:11Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"default","app.kubernetes.io/part-of":"tekton-pipelines","pipeline.tekton.dev/release":"v0.18.1","version":"v0.18.1"},"name":"tasks.tekton.dev"},"spec":{"conversion":{"strategy":"Webhook","webhook":{"clientConfig":{"service":{"name":"tekton-pipelines-webhook","namespace":"tekton-pipelines"}},"conversionReviewVersions":["v1beta1"]}},"group":"tekton.dev","names":{"categories":["tekton","tekton-pipelines"],"kind":"Task","plural":"tasks"},"preserveUnknownFields":false,"scope":"Namespaced","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"type":"object","x-kubernetes-preserve-unknown-fields":true}},"served":true,"storage":false,"subresources":{"status":{}}},{"name":"v1beta1","schema":{"openAPIV3Schema":{"type":"object","x-kubernetes-preserve-unknown-fields":true}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
    creationTimestamp: "2020-12-01T17:28:11Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines
      pipeline.tekton.dev/release: v0.18.1
      version: v0.18.1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-12-01T17:28:11Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:pipeline.tekton.dev/release: {}
            f:version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
            f:webhook:
              .: {}
              f:clientConfig:
                .: {}
                f:service:
                  .: {}
                  f:name: {}
                  f:namespace: {}
                  f:port: {}
              f:conversionReviewVersions: {}
          f:group: {}
          f:names:
            f:categories: {}
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: oc
      operation: Update
      time: "2020-12-01T17:28:11Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:conversion:
            f:webhook:
              f:clientConfig:
                f:caBundle: {}
                f:service:
                  f:path: {}
      manager: webhook
      operation: Update
      time: "2020-12-01T17:28:20Z"
    name: tasks.tekton.dev
    resourceVersion: "5635434"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/tasks.tekton.dev
    uid: 880603cb-18c3-4b2c-bb84-a031f35b66f3
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVTakNDQXpLZ0F3SUJBZ0lRQzJVdUlZK2lWem4zNlFCaFJJSENEREFOQmdrcWhraUc5dzBCQVFzRkFEQk8KTVJRd0VnWURWUVFLRXd0cmJtRjBhWFpsTG1SbGRqRTJNRFFHQTFVRUF4TXRkR1ZyZEc5dUxYQnBjR1ZzYVc1bApjeTEzWldKb2IyOXJMblJsYTNSdmJpMXdhWEJsYkdsdVpYTXVjM1pqTUI0WERUSXdNVEl3TVRFM01qZ3hPVm9YCkRUSXhNVEl3TVRFM01qZ3hPRm93VGpFVU1CSUdBMVVFQ2hNTGEyNWhkR2wyWlM1a1pYWXhOakEwQmdOVkJBTVQKTFhSbGEzUnZiaTF3YVhCbGJHbHVaWE10ZDJWaWFHOXZheTUwWld0MGIyNHRjR2x3Wld4cGJtVnpMbk4yWXpDQwpBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtlbDJTVXhOM2NGT1BnWUdVTExEdW1YCnQvL3RMWXhmY2h5ZWI3bGVvMmRWZWFRQUNUYXRoMFpnR0JQTFB1NlJ1WW8vTWdZUHUvaHJ6a3liRU9OcjhnLzYKRTJ6R0FhY2ZZcHlqaktzOWI3c2d3ME1CS2hwYmxpdnFHSHR2TVE0cGlUSjUwcUU1UUtiSVh0WkZzY3NlS1M2dQpJcE9lWW9oSER2V3Z5RDY0U01sVExsTHl6T0JZWTd3YlNYZER5clNUMjEvcmlFbndDaVlIcFZ1Q2VoY1RxdmNBCjFnUkxoSldGTFNZbGFUMGluQUNMbExFd2JLYmN0M0xPeU5lVW01SVF4Zm1XTlRYOUl4VnZoNXVYVG15clBLNy8KaEgwNDJyUXI0b21TbEMva1dTN3RzS0s2SzZHYlVsWUxhNW5pU09LQlkyQTAvNEtGUXJwcldTOVlSY2Y4ejkwQwpBd0VBQWFPQ0FTSXdnZ0VlTUE0R0ExVWREd0VCL3dRRUF3SUNoREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNECkFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVhaUJoczlmM2JwL0cKQ3dRYTJBdE0wRkJwRjlNd2did0dBMVVkRVFTQnREQ0JzWUlZZEdWcmRHOXVMWEJwY0dWc2FXNWxjeTEzWldKbwpiMjlyZ2lsMFpXdDBiMjR0Y0dsd1pXeHBibVZ6TFhkbFltaHZiMnN1ZEdWcmRHOXVMWEJwY0dWc2FXNWxjNEl0CmRHVnJkRzl1TFhCcGNHVnNhVzVsY3kxM1pXSm9iMjlyTG5SbGEzUnZiaTF3YVhCbGJHbHVaWE11YzNaamdqdDAKWld0MGIyNHRjR2x3Wld4cGJtVnpMWGRsWW1odmIyc3VkR1ZyZEc5dUxYQnBjR1ZzYVc1bGN5NXpkbU11WTJ4MQpjM1JsY2k1c2IyTmhiREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBTnZKNFh1M0V3Qm5FQ0xBYUZBVkVMRXRNClVoby9sQitLZzcveHF4OEdJeGNTY0VoVUJTYk1YM0xHaCtvT0p1ZmthenVRb2UxRDMvdDdrWVEyYStBY2graWQKTHgveEo5STdSeHJPMHRId2x2Y2RLaHRpalRxMVBhK3BXdkdKSlh1U0tQWnZaalVWL2Q0RnZSMVFYc2Y4UVRxcQptMGFsU2kzdUxEQ0puOXJwdURlWmNNVHAyVXRobFpWby9qUDFnbGRTclVyZkltKzNWaWlKbVBDdnY3NVJ1VklxCmZNcU56SXhHWkNQUjFGNnJKNUd3cno3ZmRUNFViYnU5eE8xUXk2ZE9KYzNhVXR4dWVsSEwxRGhic1k3aGNDYlgKRWV5d0svaEFwZktRV1VzaW1icXdnRVpvNkZBQml5ZFdHaWxVa3BncUwrY3pSQ1d4V1dlMXppYWdwY3dNVWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          service:
            name: tekton-pipelines-webhook
            namespace: tekton-pipelines
            path: /resource-conversion
            port: 443
        conversionReviewVersions:
        - v1beta1
    group: tekton.dev
    names:
      categories:
      - tekton
      - tekton-pipelines
      kind: Task
      listKind: TaskList
      plural: tasks
      singular: task
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: false
      subresources:
        status: {}
    - name: v1beta1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-pipelines
      kind: Task
      listKind: TaskList
      plural: tasks
      singular: task
    conditions:
    - lastTransitionTime: "2020-12-01T17:28:11Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-12-01T17:28:11Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: "2020-11-18T12:59:02Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:controller-gen.kubebuilder.io/version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:59:02Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:plural: {}
          f:conditions: {}
      manager: register.test
      operation: Update
      time: "2020-11-20T22:16:10Z"
    name: thanosrulers.monitoring.coreos.com
    resourceVersion: "1040014"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/thanosrulers.monitoring.coreos.com
    uid: 08edfe3d-be70-4b3e-98f2-e0dda4cdbd84
  spec:
    conversion:
      strategy: None
    group: monitoring.coreos.com
    names:
      kind: ThanosRuler
      listKind: ThanosRulerList
      plural: thanosrulers
      singular: thanosruler
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: ThanosRuler defines a ThanosRuler deployment.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: 'Specification of the desired behavior of the ThanosRuler
                cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
              properties:
                affinity:
                  description: If specified, the pod's scheduling constraints.
                  properties:
                    nodeAffinity:
                      description: Describes node affinity scheduling rules for the
                        pod.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            matches the corresponding matchExpressions; the node(s)
                            with the highest sum are the most preferred.
                          items:
                            description: An empty preferred scheduling term matches
                              all objects with implicit weight 0 (i.e. it's a no-op).
                              A null preferred scheduling term matches no objects
                              (i.e. is also a no-op).
                            properties:
                              preference:
                                description: A node selector term, associated with
                                  the corresponding weight.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              weight:
                                description: Weight associated with matching the corresponding
                                  nodeSelectorTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - preference
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by this
                            field are not met at scheduling time, the pod will not
                            be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to an update), the system
                            may or may not try to eventually evict the pod from its
                            node.
                          properties:
                            nodeSelectorTerms:
                              description: Required. A list of node selector terms.
                                The terms are ORed.
                              items:
                                description: A null or empty node selector term matches
                                  no objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a subset
                                  of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              type: array
                          required:
                          - nodeSelectorTerms
                          type: object
                      type: object
                    podAffinity:
                      description: Describes pod affinity scheduling rules (e.g. co-locate
                        this pod in the same node, zone, etc. as some other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            has pods which matches the corresponding podAffinityTerm;
                            the node(s) with the highest sum are the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Required. A pod affinity term, associated
                                  with the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - podAffinityTerm
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by this
                            field are not met at scheduling time, the pod will not
                            be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to a pod label update),
                            the system may or may not try to eventually evict the
                            pod from its node. When there are multiple elements, the
                            lists of nodes corresponding to each podAffinityTerm are
                            intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label query over a set of resources,
                                  in this case pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      description: Describes pod anti-affinity scheduling rules (e.g.
                        avoid putting this pod in the same node, zone, etc. as some
                        other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the anti-affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling anti-affinity
                            expressions, etc.), compute a sum by iterating through
                            the elements of this field and adding "weight" to the
                            sum if the node has pods which matches the corresponding
                            podAffinityTerm; the node(s) with the highest sum are
                            the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Required. A pod affinity term, associated
                                  with the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - podAffinityTerm
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the anti-affinity requirements specified
                            by this field are not met at scheduling time, the pod
                            will not be scheduled onto the node. If the anti-affinity
                            requirements specified by this field cease to be met at
                            some point during pod execution (e.g. due to a pod label
                            update), the system may or may not try to eventually evict
                            the pod from its node. When there are multiple elements,
                            the lists of nodes corresponding to each podAffinityTerm
                            are intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label query over a set of resources,
                                  in this case pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                  type: object
                alertDropLabels:
                  description: AlertDropLabels configure the label names which should
                    be dropped in ThanosRuler alerts. If `labels` field is not provided,
                    `thanos_ruler_replica` will be dropped in alerts by default.
                  items:
                    type: string
                  type: array
                alertQueryUrl:
                  description: The external Query URL the Thanos Ruler will set in
                    the 'Source' field of all alerts. Maps to the '--alert.query-url'
                    CLI arg.
                  type: string
                alertmanagersConfig:
                  description: Define configuration for connecting to alertmanager.  Only
                    available with thanos v0.10.0 and higher.  Maps to the `alertmanagers.config`
                    arg.
                  properties:
                    key:
                      description: The key of the secret to select from.  Must be
                        a valid secret key.
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                    optional:
                      description: Specify whether the Secret or its key must be defined
                      type: boolean
                  required:
                  - key
                  type: object
                alertmanagersUrl:
                  description: 'Define URLs to send alerts to Alertmanager.  For Thanos
                    v0.10.0 and higher, AlertManagersConfig should be used instead.  Note:
                    this field will be ignored if AlertManagersConfig is specified.
                    Maps to the `alertmanagers.url` arg.'
                  items:
                    type: string
                  type: array
                containers:
                  description: 'Containers allows injecting additional containers
                    or modifying operator generated containers. This can be used to
                    allow adding an authentication proxy to a ThanosRuler pod or to
                    change the behavior of an operator generated container. Containers
                    described here modify an operator generated container if they
                    share the same name and modifications are done via a strategic
                    merge patch. The current container names are: `thanos-ruler` and
                    `rules-configmap-reloader`. Overriding containers is entirely
                    outside the scope of what the maintainers will support and by
                    doing so, you accept that this behaviour may break at any time
                    without notice.'
                  items:
                    description: A single application container that you want to run
                      within a pod.
                    properties:
                      args:
                        description: 'Arguments to the entrypoint. The docker image''s
                          CMD is used if this is not provided. Variable references
                          $(VAR_NAME) are expanded using the container''s environment.
                          If a variable cannot be resolved, the reference in the input
                          string will be unchanged. The $(VAR_NAME) syntax can be
                          escaped with a double $$, ie: $$(VAR_NAME). Escaped references
                          will never be expanded, regardless of whether the variable
                          exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        items:
                          type: string
                        type: array
                      command:
                        description: 'Entrypoint array. Not executed within a shell.
                          The docker image''s ENTRYPOINT is used if this is not provided.
                          Variable references $(VAR_NAME) are expanded using the container''s
                          environment. If a variable cannot be resolved, the reference
                          in the input string will be unchanged. The $(VAR_NAME) syntax
                          can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
                          references will never be expanded, regardless of whether
                          the variable exists or not. Cannot be updated. More info:
                          https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        items:
                          type: string
                        type: array
                      env:
                        description: List of environment variables to set in the container.
                          Cannot be updated.
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previous defined environment variables in
                                the container and any service environment variables.
                                If a variable cannot be resolved, the reference in
                                the input string will be unchanged. The $(VAR_NAME)
                                syntax can be escaped with a double $$, ie: $$(VAR_NAME).
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to
                                "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, metadata.labels,
                                    metadata.annotations, spec.nodeName, spec.serviceAccountName,
                                    status.hostIP, status.podIP, status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      type: string
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      envFrom:
                        description: List of sources to populate environment variables
                          in the container. The keys defined within a source must
                          be a C_IDENTIFIER. All invalid keys will be reported as
                          an event when the container is starting. When a key exists
                          in multiple sources, the value associated with the last
                          source will take precedence. Values defined by an Env with
                          a duplicate key will take precedence. Cannot be updated.
                        items:
                          description: EnvFromSource represents the source of a set
                            of ConfigMaps
                          properties:
                            configMapRef:
                              description: The ConfigMap to select from
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap must
                                    be defined
                                  type: boolean
                              type: object
                            prefix:
                              description: An optional identifier to prepend to each
                                key in the ConfigMap. Must be a C_IDENTIFIER.
                              type: string
                            secretRef:
                              description: The Secret to select from
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret must be
                                    defined
                                  type: boolean
                              type: object
                          type: object
                        type: array
                      image:
                        description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                          This field is optional to allow higher level config management
                          to default or override container images in workload controllers
                          like Deployments and StatefulSets.'
                        type: string
                      imagePullPolicy:
                        description: 'Image pull policy. One of Always, Never, IfNotPresent.
                          Defaults to Always if :latest tag is specified, or IfNotPresent
                          otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                        type: string
                      lifecycle:
                        description: Actions that the management system should take
                          in response to container lifecycle events. Cannot be updated.
                        properties:
                          postStart:
                            description: 'PostStart is called immediately after a
                              container is created. If the handler fails, the container
                              is terminated and restarted according to its restart
                              policy. Other management of the container blocks until
                              the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                            type: object
                          preStop:
                            description: 'PreStop is called immediately before a container
                              is terminated due to an API request or management event
                              such as liveness/startup probe failure, preemption,
                              resource contention, etc. The handler is not called
                              if the container crashes or exits. The reason for termination
                              is passed to the handler. The Pod''s termination grace
                              period countdown begins before the PreStop hooked is
                              executed. Regardless of the outcome of the handler,
                              the container will eventually terminate within the Pod''s
                              termination grace period. Other management of the container
                              blocks until the hook completes or until the termination
                              grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                            type: object
                        type: object
                      livenessProbe:
                        description: 'Periodic probe of container liveness. Container
                          will be restarted if the probe fails. Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      name:
                        description: Name of the container specified as a DNS_LABEL.
                          Each container in a pod must have a unique name (DNS_LABEL).
                          Cannot be updated.
                        type: string
                      ports:
                        description: List of ports to expose from the container. Exposing
                          a port here gives the system additional information about
                          the network connections a container uses, but is primarily
                          informational. Not specifying a port here DOES NOT prevent
                          that port from being exposed. Any port which is listening
                          on the default "0.0.0.0" address inside a container will
                          be accessible from the network. Cannot be updated.
                        items:
                          description: ContainerPort represents a network port in
                            a single container.
                          properties:
                            containerPort:
                              description: Number of port to expose on the pod's IP
                                address. This must be a valid port number, 0 < x <
                                65536.
                              format: int32
                              type: integer
                            hostIP:
                              description: What host IP to bind the external port
                                to.
                              type: string
                            hostPort:
                              description: Number of port to expose on the host. If
                                specified, this must be a valid port number, 0 < x
                                < 65536. If HostNetwork is specified, this must match
                                ContainerPort. Most containers do not need this.
                              format: int32
                              type: integer
                            name:
                              description: If specified, this must be an IANA_SVC_NAME
                                and unique within the pod. Each named port in a pod
                                must have a unique name. Name for the port that can
                                be referred to by services.
                              type: string
                            protocol:
                              description: Protocol for port. Must be UDP, TCP, or
                                SCTP. Defaults to "TCP".
                              type: string
                          required:
                          - containerPort
                          type: object
                        type: array
                      readinessProbe:
                        description: 'Periodic probe of container service readiness.
                          Container will be removed from service endpoints if the
                          probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      resources:
                        description: 'Compute Resources required by this container.
                          Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        properties:
                          limits:
                            additionalProperties:
                              type: string
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                          requests:
                            additionalProperties:
                              type: string
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                        type: object
                      securityContext:
                        description: 'Security options the pod should run with. More
                          info: https://kubernetes.io/docs/concepts/policy/security-context/
                          More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                        properties:
                          allowPrivilegeEscalation:
                            description: 'AllowPrivilegeEscalation controls whether
                              a process can gain more privileges than its parent process.
                              This bool directly controls if the no_new_privs flag
                              will be set on the container process. AllowPrivilegeEscalation
                              is true always when the container is: 1) run as Privileged
                              2) has CAP_SYS_ADMIN'
                            type: boolean
                          capabilities:
                            description: The capabilities to add/drop when running
                              containers. Defaults to the default set of capabilities
                              granted by the container runtime.
                            properties:
                              add:
                                description: Added capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                              drop:
                                description: Removed capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                            type: object
                          privileged:
                            description: Run container in privileged mode. Processes
                              in privileged containers are essentially equivalent
                              to root on the host. Defaults to false.
                            type: boolean
                          procMount:
                            description: procMount denotes the type of proc mount
                              to use for the containers. The default is DefaultProcMount
                              which uses the container runtime defaults for readonly
                              paths and masked paths. This requires the ProcMountType
                              feature flag to be enabled.
                            type: string
                          readOnlyRootFilesystem:
                            description: Whether this container has a read-only root
                              filesystem. Default is false.
                            type: boolean
                          runAsGroup:
                            description: The GID to run the entrypoint of the container
                              process. Uses runtime default if unset. May also be
                              set in PodSecurityContext.  If set in both SecurityContext
                              and PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            format: int64
                            type: integer
                          runAsNonRoot:
                            description: Indicates that the container must run as
                              a non-root user. If true, the Kubelet will validate
                              the image at runtime to ensure that it does not run
                              as UID 0 (root) and fail to start the container if it
                              does. If unset or false, no such validation will be
                              performed. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: The UID to run the entrypoint of the container
                              process. Defaults to user specified in image metadata
                              if unspecified. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence.
                            format: int64
                            type: integer
                          seLinuxOptions:
                            description: The SELinux context to be applied to the
                              container. If unspecified, the container runtime will
                              allocate a random SELinux context for each container.  May
                              also be set in PodSecurityContext.  If set in both SecurityContext
                              and PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          windowsOptions:
                            description: The Windows specific settings applied to
                              all containers. If unspecified, the options from the
                              PodSecurityContext will be used. If set in both SecurityContext
                              and PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            properties:
                              gmsaCredentialSpec:
                                description: GMSACredentialSpec is where the GMSA
                                  admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                  inlines the contents of the GMSA credential spec
                                  named by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of
                                  the GMSA credential spec to use.
                                type: string
                              runAsUserName:
                                description: The UserName in Windows to run the entrypoint
                                  of the container process. Defaults to the user specified
                                  in image metadata if unspecified. May also be set
                                  in PodSecurityContext. If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                type: string
                            type: object
                        type: object
                      startupProbe:
                        description: 'StartupProbe indicates that the Pod has successfully
                          initialized. If specified, no other probes are executed
                          until this completes successfully. If this probe fails,
                          the Pod will be restarted, just as if the livenessProbe
                          failed. This can be used to provide different probe parameters
                          at the beginning of a Pod''s lifecycle, when it might take
                          a long time to load data or warm a cache, than during steady-state
                          operation. This cannot be updated. This is a beta feature
                          enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      stdin:
                        description: Whether this container should allocate a buffer
                          for stdin in the container runtime. If this is not set,
                          reads from stdin in the container will always result in
                          EOF. Default is false.
                        type: boolean
                      stdinOnce:
                        description: Whether the container runtime should close the
                          stdin channel after it has been opened by a single attach.
                          When stdin is true the stdin stream will remain open across
                          multiple attach sessions. If stdinOnce is set to true, stdin
                          is opened on container start, is empty until the first client
                          attaches to stdin, and then remains open and accepts data
                          until the client disconnects, at which time stdin is closed
                          and remains closed until the container is restarted. If
                          this flag is false, a container processes that reads from
                          stdin will never receive an EOF. Default is false
                        type: boolean
                      terminationMessagePath:
                        description: 'Optional: Path at which the file to which the
                          container''s termination message will be written is mounted
                          into the container''s filesystem. Message written is intended
                          to be brief final status, such as an assertion failure message.
                          Will be truncated by the node if greater than 4096 bytes.
                          The total message length across all containers will be limited
                          to 12kb. Defaults to /dev/termination-log. Cannot be updated.'
                        type: string
                      terminationMessagePolicy:
                        description: Indicate how the termination message should be
                          populated. File will use the contents of terminationMessagePath
                          to populate the container status message on both success
                          and failure. FallbackToLogsOnError will use the last chunk
                          of container log output if the termination message file
                          is empty and the container exited with an error. The log
                          output is limited to 2048 bytes or 80 lines, whichever is
                          smaller. Defaults to File. Cannot be updated.
                        type: string
                      tty:
                        description: Whether this container should allocate a TTY
                          for itself, also requires 'stdin' to be true. Default is
                          false.
                        type: boolean
                      volumeDevices:
                        description: volumeDevices is the list of block devices to
                          be used by the container.
                        items:
                          description: volumeDevice describes a mapping of a raw block
                            device within a container.
                          properties:
                            devicePath:
                              description: devicePath is the path inside of the container
                                that the device will be mapped to.
                              type: string
                            name:
                              description: name must match the name of a persistentVolumeClaim
                                in the pod
                              type: string
                          required:
                          - devicePath
                          - name
                          type: object
                        type: array
                      volumeMounts:
                        description: Pod volumes to mount into the container's filesystem.
                          Cannot be updated.
                        items:
                          description: VolumeMount describes a mounting of a Volume
                            within a container.
                          properties:
                            mountPath:
                              description: Path within the container at which the
                                volume should be mounted.  Must not contain ':'.
                              type: string
                            mountPropagation:
                              description: mountPropagation determines how mounts
                                are propagated from the host to container and the
                                other way around. When not set, MountPropagationNone
                                is used. This field is beta in 1.10.
                              type: string
                            name:
                              description: This must match the Name of a Volume.
                              type: string
                            readOnly:
                              description: Mounted read-only if true, read-write otherwise
                                (false or unspecified). Defaults to false.
                              type: boolean
                            subPath:
                              description: Path within the volume from which the container's
                                volume should be mounted. Defaults to "" (volume's
                                root).
                              type: string
                            subPathExpr:
                              description: Expanded path within the volume from which
                                the container's volume should be mounted. Behaves
                                similarly to SubPath but environment variable references
                                $(VAR_NAME) are expanded using the container's environment.
                                Defaults to "" (volume's root). SubPathExpr and SubPath
                                are mutually exclusive.
                              type: string
                          required:
                          - mountPath
                          - name
                          type: object
                        type: array
                      workingDir:
                        description: Container's working directory. If not specified,
                          the container runtime's default will be used, which might
                          be configured in the container image. Cannot be updated.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                enforcedNamespaceLabel:
                  description: EnforcedNamespaceLabel enforces adding a namespace
                    label of origin for each alert and metric that is user created.
                    The label value will always be the namespace of the object that
                    is being created.
                  type: string
                evaluationInterval:
                  description: Interval between consecutive evaluations.
                  type: string
                externalPrefix:
                  description: The external URL the Thanos Ruler instances will be
                    available under. This is necessary to generate correct URLs. This
                    is necessary if Thanos Ruler is not served from root of a DNS
                    name.
                  type: string
                grpcServerTlsConfig:
                  description: 'GRPCServerTLSConfig configures the gRPC server from
                    which Thanos Querier reads recorded rule data. Note: Currently
                    only the CAFile, CertFile, and KeyFile fields are supported. Maps
                    to the ''--grpc-server-tls-*'' CLI args.'
                  properties:
                    ca:
                      description: Stuct containing the CA cert to use for the targets.
                      properties:
                        configMap:
                          description: ConfigMap containing data to use for the targets.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        secret:
                          description: Secret containing data to use for the targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    caFile:
                      description: Path to the CA cert in the Prometheus container
                        to use for the targets.
                      type: string
                    cert:
                      description: Struct containing the client cert file for the
                        targets.
                      properties:
                        configMap:
                          description: ConfigMap containing data to use for the targets.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        secret:
                          description: Secret containing data to use for the targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    certFile:
                      description: Path to the client cert file in the Prometheus
                        container for the targets.
                      type: string
                    insecureSkipVerify:
                      description: Disable target certificate validation.
                      type: boolean
                    keyFile:
                      description: Path to the client key file in the Prometheus container
                        for the targets.
                      type: string
                    keySecret:
                      description: Secret containing the client key file for the targets.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                    serverName:
                      description: Used to verify the hostname for the targets.
                      type: string
                  type: object
                image:
                  description: Thanos container image URL.
                  type: string
                imagePullSecrets:
                  description: An optional list of references to secrets in the same
                    namespace to use for pulling thanos images from registries see
                    http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
                  items:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  type: array
                initContainers:
                  description: 'InitContainers allows adding initContainers to the
                    pod definition. Those can be used to e.g. fetch secrets for injection
                    into the ThanosRuler configuration from external sources. Any
                    errors during the execution of an initContainer will lead to a
                    restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                    Using initContainers for any use case other then secret fetching
                    is entirely outside the scope of what the maintainers will support
                    and by doing so, you accept that this behaviour may break at any
                    time without notice.'
                  items:
                    description: A single application container that you want to run
                      within a pod.
                    properties:
                      args:
                        description: 'Arguments to the entrypoint. The docker image''s
                          CMD is used if this is not provided. Variable references
                          $(VAR_NAME) are expanded using the container''s environment.
                          If a variable cannot be resolved, the reference in the input
                          string will be unchanged. The $(VAR_NAME) syntax can be
                          escaped with a double $$, ie: $$(VAR_NAME). Escaped references
                          will never be expanded, regardless of whether the variable
                          exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        items:
                          type: string
                        type: array
                      command:
                        description: 'Entrypoint array. Not executed within a shell.
                          The docker image''s ENTRYPOINT is used if this is not provided.
                          Variable references $(VAR_NAME) are expanded using the container''s
                          environment. If a variable cannot be resolved, the reference
                          in the input string will be unchanged. The $(VAR_NAME) syntax
                          can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
                          references will never be expanded, regardless of whether
                          the variable exists or not. Cannot be updated. More info:
                          https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        items:
                          type: string
                        type: array
                      env:
                        description: List of environment variables to set in the container.
                          Cannot be updated.
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previous defined environment variables in
                                the container and any service environment variables.
                                If a variable cannot be resolved, the reference in
                                the input string will be unchanged. The $(VAR_NAME)
                                syntax can be escaped with a double $$, ie: $$(VAR_NAME).
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to
                                "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, metadata.labels,
                                    metadata.annotations, spec.nodeName, spec.serviceAccountName,
                                    status.hostIP, status.podIP, status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      type: string
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      envFrom:
                        description: List of sources to populate environment variables
                          in the container. The keys defined within a source must
                          be a C_IDENTIFIER. All invalid keys will be reported as
                          an event when the container is starting. When a key exists
                          in multiple sources, the value associated with the last
                          source will take precedence. Values defined by an Env with
                          a duplicate key will take precedence. Cannot be updated.
                        items:
                          description: EnvFromSource represents the source of a set
                            of ConfigMaps
                          properties:
                            configMapRef:
                              description: The ConfigMap to select from
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap must
                                    be defined
                                  type: boolean
                              type: object
                            prefix:
                              description: An optional identifier to prepend to each
                                key in the ConfigMap. Must be a C_IDENTIFIER.
                              type: string
                            secretRef:
                              description: The Secret to select from
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret must be
                                    defined
                                  type: boolean
                              type: object
                          type: object
                        type: array
                      image:
                        description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                          This field is optional to allow higher level config management
                          to default or override container images in workload controllers
                          like Deployments and StatefulSets.'
                        type: string
                      imagePullPolicy:
                        description: 'Image pull policy. One of Always, Never, IfNotPresent.
                          Defaults to Always if :latest tag is specified, or IfNotPresent
                          otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                        type: string
                      lifecycle:
                        description: Actions that the management system should take
                          in response to container lifecycle events. Cannot be updated.
                        properties:
                          postStart:
                            description: 'PostStart is called immediately after a
                              container is created. If the handler fails, the container
                              is terminated and restarted according to its restart
                              policy. Other management of the container blocks until
                              the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                            type: object
                          preStop:
                            description: 'PreStop is called immediately before a container
                              is terminated due to an API request or management event
                              such as liveness/startup probe failure, preemption,
                              resource contention, etc. The handler is not called
                              if the container crashes or exits. The reason for termination
                              is passed to the handler. The Pod''s termination grace
                              period countdown begins before the PreStop hooked is
                              executed. Regardless of the outcome of the handler,
                              the container will eventually terminate within the Pod''s
                              termination grace period. Other management of the container
                              blocks until the hook completes or until the termination
                              grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                            type: object
                        type: object
                      livenessProbe:
                        description: 'Periodic probe of container liveness. Container
                          will be restarted if the probe fails. Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      name:
                        description: Name of the container specified as a DNS_LABEL.
                          Each container in a pod must have a unique name (DNS_LABEL).
                          Cannot be updated.
                        type: string
                      ports:
                        description: List of ports to expose from the container. Exposing
                          a port here gives the system additional information about
                          the network connections a container uses, but is primarily
                          informational. Not specifying a port here DOES NOT prevent
                          that port from being exposed. Any port which is listening
                          on the default "0.0.0.0" address inside a container will
                          be accessible from the network. Cannot be updated.
                        items:
                          description: ContainerPort represents a network port in
                            a single container.
                          properties:
                            containerPort:
                              description: Number of port to expose on the pod's IP
                                address. This must be a valid port number, 0 < x <
                                65536.
                              format: int32
                              type: integer
                            hostIP:
                              description: What host IP to bind the external port
                                to.
                              type: string
                            hostPort:
                              description: Number of port to expose on the host. If
                                specified, this must be a valid port number, 0 < x
                                < 65536. If HostNetwork is specified, this must match
                                ContainerPort. Most containers do not need this.
                              format: int32
                              type: integer
                            name:
                              description: If specified, this must be an IANA_SVC_NAME
                                and unique within the pod. Each named port in a pod
                                must have a unique name. Name for the port that can
                                be referred to by services.
                              type: string
                            protocol:
                              description: Protocol for port. Must be UDP, TCP, or
                                SCTP. Defaults to "TCP".
                              type: string
                          required:
                          - containerPort
                          type: object
                        type: array
                      readinessProbe:
                        description: 'Periodic probe of container service readiness.
                          Container will be removed from service endpoints if the
                          probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      resources:
                        description: 'Compute Resources required by this container.
                          Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        properties:
                          limits:
                            additionalProperties:
                              type: string
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                          requests:
                            additionalProperties:
                              type: string
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                        type: object
                      securityContext:
                        description: 'Security options the pod should run with. More
                          info: https://kubernetes.io/docs/concepts/policy/security-context/
                          More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                        properties:
                          allowPrivilegeEscalation:
                            description: 'AllowPrivilegeEscalation controls whether
                              a process can gain more privileges than its parent process.
                              This bool directly controls if the no_new_privs flag
                              will be set on the container process. AllowPrivilegeEscalation
                              is true always when the container is: 1) run as Privileged
                              2) has CAP_SYS_ADMIN'
                            type: boolean
                          capabilities:
                            description: The capabilities to add/drop when running
                              containers. Defaults to the default set of capabilities
                              granted by the container runtime.
                            properties:
                              add:
                                description: Added capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                              drop:
                                description: Removed capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                            type: object
                          privileged:
                            description: Run container in privileged mode. Processes
                              in privileged containers are essentially equivalent
                              to root on the host. Defaults to false.
                            type: boolean
                          procMount:
                            description: procMount denotes the type of proc mount
                              to use for the containers. The default is DefaultProcMount
                              which uses the container runtime defaults for readonly
                              paths and masked paths. This requires the ProcMountType
                              feature flag to be enabled.
                            type: string
                          readOnlyRootFilesystem:
                            description: Whether this container has a read-only root
                              filesystem. Default is false.
                            type: boolean
                          runAsGroup:
                            description: The GID to run the entrypoint of the container
                              process. Uses runtime default if unset. May also be
                              set in PodSecurityContext.  If set in both SecurityContext
                              and PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            format: int64
                            type: integer
                          runAsNonRoot:
                            description: Indicates that the container must run as
                              a non-root user. If true, the Kubelet will validate
                              the image at runtime to ensure that it does not run
                              as UID 0 (root) and fail to start the container if it
                              does. If unset or false, no such validation will be
                              performed. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: The UID to run the entrypoint of the container
                              process. Defaults to user specified in image metadata
                              if unspecified. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence.
                            format: int64
                            type: integer
                          seLinuxOptions:
                            description: The SELinux context to be applied to the
                              container. If unspecified, the container runtime will
                              allocate a random SELinux context for each container.  May
                              also be set in PodSecurityContext.  If set in both SecurityContext
                              and PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          windowsOptions:
                            description: The Windows specific settings applied to
                              all containers. If unspecified, the options from the
                              PodSecurityContext will be used. If set in both SecurityContext
                              and PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            properties:
                              gmsaCredentialSpec:
                                description: GMSACredentialSpec is where the GMSA
                                  admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                  inlines the contents of the GMSA credential spec
                                  named by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of
                                  the GMSA credential spec to use.
                                type: string
                              runAsUserName:
                                description: The UserName in Windows to run the entrypoint
                                  of the container process. Defaults to the user specified
                                  in image metadata if unspecified. May also be set
                                  in PodSecurityContext. If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                type: string
                            type: object
                        type: object
                      startupProbe:
                        description: 'StartupProbe indicates that the Pod has successfully
                          initialized. If specified, no other probes are executed
                          until this completes successfully. If this probe fails,
                          the Pod will be restarted, just as if the livenessProbe
                          failed. This can be used to provide different probe parameters
                          at the beginning of a Pod''s lifecycle, when it might take
                          a long time to load data or warm a cache, than during steady-state
                          operation. This cannot be updated. This is a beta feature
                          enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      stdin:
                        description: Whether this container should allocate a buffer
                          for stdin in the container runtime. If this is not set,
                          reads from stdin in the container will always result in
                          EOF. Default is false.
                        type: boolean
                      stdinOnce:
                        description: Whether the container runtime should close the
                          stdin channel after it has been opened by a single attach.
                          When stdin is true the stdin stream will remain open across
                          multiple attach sessions. If stdinOnce is set to true, stdin
                          is opened on container start, is empty until the first client
                          attaches to stdin, and then remains open and accepts data
                          until the client disconnects, at which time stdin is closed
                          and remains closed until the container is restarted. If
                          this flag is false, a container processes that reads from
                          stdin will never receive an EOF. Default is false
                        type: boolean
                      terminationMessagePath:
                        description: 'Optional: Path at which the file to which the
                          container''s termination message will be written is mounted
                          into the container''s filesystem. Message written is intended
                          to be brief final status, such as an assertion failure message.
                          Will be truncated by the node if greater than 4096 bytes.
                          The total message length across all containers will be limited
                          to 12kb. Defaults to /dev/termination-log. Cannot be updated.'
                        type: string
                      terminationMessagePolicy:
                        description: Indicate how the termination message should be
                          populated. File will use the contents of terminationMessagePath
                          to populate the container status message on both success
                          and failure. FallbackToLogsOnError will use the last chunk
                          of container log output if the termination message file
                          is empty and the container exited with an error. The log
                          output is limited to 2048 bytes or 80 lines, whichever is
                          smaller. Defaults to File. Cannot be updated.
                        type: string
                      tty:
                        description: Whether this container should allocate a TTY
                          for itself, also requires 'stdin' to be true. Default is
                          false.
                        type: boolean
                      volumeDevices:
                        description: volumeDevices is the list of block devices to
                          be used by the container.
                        items:
                          description: volumeDevice describes a mapping of a raw block
                            device within a container.
                          properties:
                            devicePath:
                              description: devicePath is the path inside of the container
                                that the device will be mapped to.
                              type: string
                            name:
                              description: name must match the name of a persistentVolumeClaim
                                in the pod
                              type: string
                          required:
                          - devicePath
                          - name
                          type: object
                        type: array
                      volumeMounts:
                        description: Pod volumes to mount into the container's filesystem.
                          Cannot be updated.
                        items:
                          description: VolumeMount describes a mounting of a Volume
                            within a container.
                          properties:
                            mountPath:
                              description: Path within the container at which the
                                volume should be mounted.  Must not contain ':'.
                              type: string
                            mountPropagation:
                              description: mountPropagation determines how mounts
                                are propagated from the host to container and the
                                other way around. When not set, MountPropagationNone
                                is used. This field is beta in 1.10.
                              type: string
                            name:
                              description: This must match the Name of a Volume.
                              type: string
                            readOnly:
                              description: Mounted read-only if true, read-write otherwise
                                (false or unspecified). Defaults to false.
                              type: boolean
                            subPath:
                              description: Path within the volume from which the container's
                                volume should be mounted. Defaults to "" (volume's
                                root).
                              type: string
                            subPathExpr:
                              description: Expanded path within the volume from which
                                the container's volume should be mounted. Behaves
                                similarly to SubPath but environment variable references
                                $(VAR_NAME) are expanded using the container's environment.
                                Defaults to "" (volume's root). SubPathExpr and SubPath
                                are mutually exclusive.
                              type: string
                          required:
                          - mountPath
                          - name
                          type: object
                        type: array
                      workingDir:
                        description: Container's working directory. If not specified,
                          the container runtime's default will be used, which might
                          be configured in the container image. Cannot be updated.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                labels:
                  additionalProperties:
                    type: string
                  description: Labels configure the external label pairs to ThanosRuler.
                    If not provided, default replica label `thanos_ruler_replica`
                    will be added as a label and be dropped in alerts.
                  type: object
                listenLocal:
                  description: ListenLocal makes the Thanos ruler listen on loopback,
                    so that it does not bind against the Pod IP.
                  type: boolean
                logFormat:
                  description: Log format for ThanosRuler to be configured with.
                  type: string
                logLevel:
                  description: Log level for ThanosRuler to be configured with.
                  type: string
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: Define which Nodes the Pods are scheduled on.
                  type: object
                objectStorageConfig:
                  description: ObjectStorageConfig configures object storage in Thanos.
                  properties:
                    key:
                      description: The key of the secret to select from.  Must be
                        a valid secret key.
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                    optional:
                      description: Specify whether the Secret or its key must be defined
                      type: boolean
                  required:
                  - key
                  type: object
                paused:
                  description: When a ThanosRuler deployment is paused, no actions
                    except for deletion will be performed on the underlying objects.
                  type: boolean
                podMetadata:
                  description: PodMetadata contains Labels and Annotations gets propagated
                    to the thanos ruler pods.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: 'Annotations is an unstructured key value map stored
                        with a resource that may be set by external tools to store
                        and retrieve arbitrary metadata. They are not queryable and
                        should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: 'Map of string keys and values that can be used
                        to organize and categorize (scope and select) objects. May
                        match selectors of replication controllers and services. More
                        info: http://kubernetes.io/docs/user-guide/labels'
                      type: object
                    name:
                      description: 'Name must be unique within a namespace. Is required
                        when creating resources, although some resources may allow
                        a client to request the generation of an appropriate name
                        automatically. Name is primarily intended for creation idempotence
                        and configuration definition. Cannot be updated. More info:
                        http://kubernetes.io/docs/user-guide/identifiers#names'
                      type: string
                  type: object
                portName:
                  description: Port name used for the pods and governing service.
                    This defaults to web
                  type: string
                priorityClassName:
                  description: Priority class assigned to the Pods
                  type: string
                prometheusRulesExcludedFromEnforce:
                  description: PrometheusRulesExcludedFromEnforce - list of Prometheus
                    rules to be excluded from enforcing of adding namespace labels.
                    Works only if enforcedNamespaceLabel set to true. Make sure both
                    ruleNamespace and ruleName are set for each pair
                  items:
                    description: PrometheusRuleExcludeConfig enables users to configure
                      excluded PrometheusRule names and their namespaces to be ignored
                      while enforcing namespace label for alerts and metrics.
                    properties:
                      ruleName:
                        description: RuleNamespace - name of excluded rule
                        type: string
                      ruleNamespace:
                        description: RuleNamespace - namespace of excluded rule
                        type: string
                    required:
                    - ruleName
                    - ruleNamespace
                    type: object
                  type: array
                queryConfig:
                  description: Define configuration for connecting to thanos query
                    instances. If this is defined, the QueryEndpoints field will be
                    ignored. Maps to the `query.config` CLI argument. Only available
                    with thanos v0.11.0 and higher.
                  properties:
                    key:
                      description: The key of the secret to select from.  Must be
                        a valid secret key.
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                    optional:
                      description: Specify whether the Secret or its key must be defined
                      type: boolean
                  required:
                  - key
                  type: object
                queryEndpoints:
                  description: QueryEndpoints defines Thanos querier endpoints from
                    which to query metrics. Maps to the --query flag of thanos ruler.
                  items:
                    type: string
                  type: array
                replicas:
                  description: Number of thanos ruler instances to deploy.
                  format: int32
                  type: integer
                resources:
                  description: Resources defines the resource requirements for single
                    Pods. If not provided, no requests/limits will be set
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                retention:
                  description: Time duration ThanosRuler shall retain data for. Default
                    is '24h', and must match the regular expression `[0-9]+(ms|s|m|h|d|w|y)`
                    (milliseconds seconds minutes hours days weeks years).
                  type: string
                routePrefix:
                  description: The route prefix ThanosRuler registers HTTP handlers
                    for. This allows thanos UI to be served on a sub-path.
                  type: string
                ruleNamespaceSelector:
                  description: Namespaces to be selected for Rules discovery. If unspecified,
                    only the same namespace as the ThanosRuler object is in is used.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                ruleSelector:
                  description: A label selector to select which PrometheusRules to
                    mount for alerting and recording.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                securityContext:
                  description: SecurityContext holds pod-level security attributes
                    and common container settings. This defaults to the default PodSecurityContext.
                  properties:
                    fsGroup:
                      description: "A special supplemental group that applies to all
                        containers in a pod. Some volume types allow the Kubelet to
                        change the ownership of that volume to be owned by the pod:
                        \n 1. The owning GID will be the FSGroup 2. The setgid bit
                        is set (new files created in the volume will be owned by FSGroup)
                        3. The permission bits are OR'd with rw-rw---- \n If unset,
                        the Kubelet will not modify the ownership and permissions
                        of any volume."
                      format: int64
                      type: integer
                    fsGroupChangePolicy:
                      description: 'fsGroupChangePolicy defines behavior of changing
                        ownership and permission of the volume before being exposed
                        inside Pod. This field will only apply to volume types which
                        support fsGroup based ownership(and permissions). It will
                        have no effect on ephemeral volume types such as: secret,
                        configmaps and emptydir. Valid values are "OnRootMismatch"
                        and "Always". If not specified defaults to "Always".'
                      type: string
                    runAsGroup:
                      description: The GID to run the entrypoint of the container
                        process. Uses runtime default if unset. May also be set in
                        SecurityContext.  If set in both SecurityContext and PodSecurityContext,
                        the value specified in SecurityContext takes precedence for
                        that container.
                      format: int64
                      type: integer
                    runAsNonRoot:
                      description: Indicates that the container must run as a non-root
                        user. If true, the Kubelet will validate the image at runtime
                        to ensure that it does not run as UID 0 (root) and fail to
                        start the container if it does. If unset or false, no such
                        validation will be performed. May also be set in SecurityContext.  If
                        set in both SecurityContext and PodSecurityContext, the value
                        specified in SecurityContext takes precedence.
                      type: boolean
                    runAsUser:
                      description: The UID to run the entrypoint of the container
                        process. Defaults to user specified in image metadata if unspecified.
                        May also be set in SecurityContext.  If set in both SecurityContext
                        and PodSecurityContext, the value specified in SecurityContext
                        takes precedence for that container.
                      format: int64
                      type: integer
                    seLinuxOptions:
                      description: The SELinux context to be applied to all containers.
                        If unspecified, the container runtime will allocate a random
                        SELinux context for each container.  May also be set in SecurityContext.  If
                        set in both SecurityContext and PodSecurityContext, the value
                        specified in SecurityContext takes precedence for that container.
                      properties:
                        level:
                          description: Level is SELinux level label that applies to
                            the container.
                          type: string
                        role:
                          description: Role is a SELinux role label that applies to
                            the container.
                          type: string
                        type:
                          description: Type is a SELinux type label that applies to
                            the container.
                          type: string
                        user:
                          description: User is a SELinux user label that applies to
                            the container.
                          type: string
                      type: object
                    supplementalGroups:
                      description: A list of groups applied to the first process run
                        in each container, in addition to the container's primary
                        GID.  If unspecified, no groups will be added to any container.
                      items:
                        format: int64
                        type: integer
                      type: array
                    sysctls:
                      description: Sysctls hold a list of namespaced sysctls used
                        for the pod. Pods with unsupported sysctls (by the container
                        runtime) might fail to launch.
                      items:
                        description: Sysctl defines a kernel parameter to be set
                        properties:
                          name:
                            description: Name of a property to set
                            type: string
                          value:
                            description: Value of a property to set
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    windowsOptions:
                      description: The Windows specific settings applied to all containers.
                        If unspecified, the options within a container's SecurityContext
                        will be used. If set in both SecurityContext and PodSecurityContext,
                        the value specified in SecurityContext takes precedence.
                      properties:
                        gmsaCredentialSpec:
                          description: GMSACredentialSpec is where the GMSA admission
                            webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                            inlines the contents of the GMSA credential spec named
                            by the GMSACredentialSpecName field.
                          type: string
                        gmsaCredentialSpecName:
                          description: GMSACredentialSpecName is the name of the GMSA
                            credential spec to use.
                          type: string
                        runAsUserName:
                          description: The UserName in Windows to run the entrypoint
                            of the container process. Defaults to the user specified
                            in image metadata if unspecified. May also be set in PodSecurityContext.
                            If set in both SecurityContext and PodSecurityContext,
                            the value specified in SecurityContext takes precedence.
                          type: string
                      type: object
                  type: object
                serviceAccountName:
                  description: ServiceAccountName is the name of the ServiceAccount
                    to use to run the Thanos Ruler Pods.
                  type: string
                storage:
                  description: Storage spec to specify how storage shall be used.
                  properties:
                    disableMountSubPath:
                      description: 'Deprecated: subPath usage will be disabled by
                        default in a future release, this option will become unnecessary.
                        DisableMountSubPath allows to remove any subPath usage in
                        volume mounts.'
                      type: boolean
                    emptyDir:
                      description: 'EmptyDirVolumeSource to be used by the Prometheus
                        StatefulSets. If specified, used in place of any volumeClaimTemplate.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir'
                      properties:
                        medium:
                          description: 'What type of storage medium should back this
                            directory. The default is "" which means to use the node''s
                            default medium. Must be an empty string (default) or Memory.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                          type: string
                        sizeLimit:
                          description: 'Total amount of local storage required for
                            this EmptyDir volume. The size limit is also applicable
                            for memory medium. The maximum usage on memory medium
                            EmptyDir would be the minimum value between the SizeLimit
                            specified here and the sum of memory limits of all containers
                            in a pod. The default is nil which means that the limit
                            is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                          type: string
                      type: object
                    volumeClaimTemplate:
                      description: A PVC spec to be used by the Prometheus StatefulSets.
                      properties:
                        apiVersion:
                          description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                        kind:
                          description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        metadata:
                          description: EmbeddedMetadata contains metadata relevant
                            to an EmbeddedResource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: 'Annotations is an unstructured key value
                                map stored with a resource that may be set by external
                                tools to store and retrieve arbitrary metadata. They
                                are not queryable and should be preserved when modifying
                                objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: 'Map of string keys and values that can
                                be used to organize and categorize (scope and select)
                                objects. May match selectors of replication controllers
                                and services. More info: http://kubernetes.io/docs/user-guide/labels'
                              type: object
                            name:
                              description: 'Name must be unique within a namespace.
                                Is required when creating resources, although some
                                resources may allow a client to request the generation
                                of an appropriate name automatically. Name is primarily
                                intended for creation idempotence and configuration
                                definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                              type: string
                          type: object
                        spec:
                          description: 'Spec defines the desired characteristics of
                            a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          properties:
                            accessModes:
                              description: 'AccessModes contains the desired access
                                modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                              items:
                                type: string
                              type: array
                            dataSource:
                              description: 'This field can be used to specify either:
                                * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot
                                - Beta) * An existing PVC (PersistentVolumeClaim)
                                * An existing custom resource/object that implements
                                data population (Alpha) In order to use VolumeSnapshot
                                object types, the appropriate feature gate must be
                                enabled (VolumeSnapshotDataSource or AnyVolumeDataSource)
                                If the provisioner or an external controller can support
                                the specified data source, it will create a new volume
                                based on the contents of the specified data source.
                                If the specified data source is not supported, the
                                volume will not be created and the failure will be
                                reported as an event. In the future, we plan to support
                                more data source types and the behavior of the provisioner
                                may change.'
                              properties:
                                apiGroup:
                                  description: APIGroup is the group for the resource
                                    being referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                            resources:
                              description: 'Resources represents the minimum resources
                                the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                              properties:
                                limits:
                                  additionalProperties:
                                    type: string
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    type: string
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                              type: object
                            selector:
                              description: A label query over volumes to consider
                                for binding.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            storageClassName:
                              description: 'Name of the StorageClass required by the
                                claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                              type: string
                            volumeMode:
                              description: volumeMode defines what type of volume
                                is required by the claim. Value of Filesystem is implied
                                when not included in claim spec.
                              type: string
                            volumeName:
                              description: VolumeName is the binding reference to
                                the PersistentVolume backing this claim.
                              type: string
                          type: object
                        status:
                          description: 'Status represents the current information/status
                            of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          properties:
                            accessModes:
                              description: 'AccessModes contains the actual access
                                modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                              items:
                                type: string
                              type: array
                            capacity:
                              additionalProperties:
                                type: string
                              description: Represents the actual resources of the
                                underlying volume.
                              type: object
                            conditions:
                              description: Current Condition of persistent volume
                                claim. If underlying persistent volume is being resized
                                then the Condition will be set to 'ResizeStarted'.
                              items:
                                description: PersistentVolumeClaimCondition contails
                                  details about state of pvc
                                properties:
                                  lastProbeTime:
                                    description: Last time we probed the condition.
                                    format: date-time
                                    type: string
                                  lastTransitionTime:
                                    description: Last time the condition transitioned
                                      from one status to another.
                                    format: date-time
                                    type: string
                                  message:
                                    description: Human-readable message indicating
                                      details about last transition.
                                    type: string
                                  reason:
                                    description: Unique, this should be a short, machine
                                      understandable string that gives the reason
                                      for condition's last transition. If it reports
                                      "ResizeStarted" that means the underlying persistent
                                      volume is being resized.
                                    type: string
                                  status:
                                    type: string
                                  type:
                                    description: PersistentVolumeClaimConditionType
                                      is a valid value of PersistentVolumeClaimCondition.Type
                                    type: string
                                required:
                                - status
                                - type
                                type: object
                              type: array
                            phase:
                              description: Phase represents the current phase of PersistentVolumeClaim.
                              type: string
                          type: object
                      type: object
                  type: object
                tolerations:
                  description: If specified, the pod's tolerations.
                  items:
                    description: The pod this Toleration is attached to tolerates
                      any taint that matches the triple <key,value,effect> using the
                      matching operator <operator>.
                    properties:
                      effect:
                        description: Effect indicates the taint effect to match. Empty
                          means match all taint effects. When specified, allowed values
                          are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Key is the taint key that the toleration applies
                          to. Empty means match all taint keys. If the key is empty,
                          operator must be Exists; this combination means to match
                          all values and all keys.
                        type: string
                      operator:
                        description: Operator represents a key's relationship to the
                          value. Valid operators are Exists and Equal. Defaults to
                          Equal. Exists is equivalent to wildcard for value, so that
                          a pod can tolerate all taints of a particular category.
                        type: string
                      tolerationSeconds:
                        description: TolerationSeconds represents the period of time
                          the toleration (which must be of effect NoExecute, otherwise
                          this field is ignored) tolerates the taint. By default,
                          it is not set, which means tolerate the taint forever (do
                          not evict). Zero and negative values will be treated as
                          0 (evict immediately) by the system.
                        format: int64
                        type: integer
                      value:
                        description: Value is the taint value the toleration matches
                          to. If the operator is Exists, the value should be empty,
                          otherwise just a regular string.
                        type: string
                    type: object
                  type: array
                tracingConfig:
                  description: TracingConfig configures tracing in Thanos. This is
                    an experimental feature, it may change in any upcoming release
                    in a breaking way.
                  properties:
                    key:
                      description: The key of the secret to select from.  Must be
                        a valid secret key.
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                    optional:
                      description: Specify whether the Secret or its key must be defined
                      type: boolean
                  required:
                  - key
                  type: object
                volumes:
                  description: Volumes allows configuration of additional volumes
                    on the output StatefulSet definition. Volumes specified will be
                    appended to other volumes that are generated as a result of StorageSpec
                    objects.
                  items:
                    description: Volume represents a named volume in a pod that may
                      be accessed by any container in the pod.
                    properties:
                      awsElasticBlockStore:
                        description: 'AWSElasticBlockStore represents an AWS Disk
                          resource that is attached to a kubelet''s host machine and
                          then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                        properties:
                          fsType:
                            description: 'Filesystem type of the volume that you want
                              to mount. Tip: Ensure that the filesystem type is supported
                              by the host operating system. Examples: "ext4", "xfs",
                              "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                            type: string
                          partition:
                            description: 'The partition in the volume that you want
                              to mount. If omitted, the default is to mount by volume
                              name. Examples: For volume /dev/sda1, you specify the
                              partition as "1". Similarly, the volume partition for
                              /dev/sda is "0" (or you can leave the property empty).'
                            format: int32
                            type: integer
                          readOnly:
                            description: 'Specify "true" to force and set the ReadOnly
                              property in VolumeMounts to "true". If omitted, the
                              default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                            type: boolean
                          volumeID:
                            description: 'Unique ID of the persistent disk resource
                              in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                            type: string
                        required:
                        - volumeID
                        type: object
                      azureDisk:
                        description: AzureDisk represents an Azure Data Disk mount
                          on the host and bind mount to the pod.
                        properties:
                          cachingMode:
                            description: 'Host Caching mode: None, Read Only, Read
                              Write.'
                            type: string
                          diskName:
                            description: The Name of the data disk in the blob storage
                            type: string
                          diskURI:
                            description: The URI the data disk in the blob storage
                            type: string
                          fsType:
                            description: Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Ex. "ext4",
                              "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          kind:
                            description: 'Expected values Shared: multiple blob disks
                              per storage account  Dedicated: single blob disk per
                              storage account  Managed: azure managed data disk (only
                              in managed availability set). defaults to shared'
                            type: string
                          readOnly:
                            description: Defaults to false (read/write). ReadOnly
                              here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                        required:
                        - diskName
                        - diskURI
                        type: object
                      azureFile:
                        description: AzureFile represents an Azure File Service mount
                          on the host and bind mount to the pod.
                        properties:
                          readOnly:
                            description: Defaults to false (read/write). ReadOnly
                              here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretName:
                            description: the name of secret that contains Azure Storage
                              Account Name and Key
                            type: string
                          shareName:
                            description: Share Name
                            type: string
                        required:
                        - secretName
                        - shareName
                        type: object
                      cephfs:
                        description: CephFS represents a Ceph FS mount on the host
                          that shares a pod's lifetime
                        properties:
                          monitors:
                            description: 'Required: Monitors is a collection of Ceph
                              monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            items:
                              type: string
                            type: array
                          path:
                            description: 'Optional: Used as the mounted root, rather
                              than the full Ceph tree, default is /'
                            type: string
                          readOnly:
                            description: 'Optional: Defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            type: boolean
                          secretFile:
                            description: 'Optional: SecretFile is the path to key
                              ring for User, default is /etc/ceph/user.secret More
                              info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            type: string
                          secretRef:
                            description: 'Optional: SecretRef is reference to the
                              authentication secret for User, default is empty. More
                              info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          user:
                            description: 'Optional: User is the rados user name, default
                              is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            type: string
                        required:
                        - monitors
                        type: object
                      cinder:
                        description: 'Cinder represents a cinder volume attached and
                          mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                        properties:
                          fsType:
                            description: 'Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Examples:
                              "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                              if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            type: string
                          readOnly:
                            description: 'Optional: Defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            type: boolean
                          secretRef:
                            description: 'Optional: points to a secret object containing
                              parameters used to connect to OpenStack.'
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          volumeID:
                            description: 'volume id used to identify the volume in
                              cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            type: string
                        required:
                        - volumeID
                        type: object
                      configMap:
                        description: ConfigMap represents a configMap that should
                          populate this volume
                        properties:
                          defaultMode:
                            description: 'Optional: mode bits to use on created files
                              by default. Must be a value between 0 and 0777. Defaults
                              to 0644. Directories within the path are not affected
                              by this setting. This might be in conflict with other
                              options that affect the file mode, like fsGroup, and
                              the result can be other mode bits set.'
                            format: int32
                            type: integer
                          items:
                            description: If unspecified, each key-value pair in the
                              Data field of the referenced ConfigMap will be projected
                              into the volume as a file whose name is the key and
                              content is the value. If specified, the listed keys
                              will be projected into the specified paths, and unlisted
                              keys will not be present. If a key is specified which
                              is not present in the ConfigMap, the volume setup will
                              error unless it is marked optional. Paths must be relative
                              and may not contain the '..' path or start with '..'.
                            items:
                              description: Maps a string key to a path within a volume.
                              properties:
                                key:
                                  description: The key to project.
                                  type: string
                                mode:
                                  description: 'Optional: mode bits to use on this
                                    file, must be a value between 0 and 0777. If not
                                    specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that
                                    affect the file mode, like fsGroup, and the result
                                    can be other mode bits set.'
                                  format: int32
                                  type: integer
                                path:
                                  description: The relative path of the file to map
                                    the key to. May not be an absolute path. May not
                                    contain the path element '..'. May not start with
                                    the string '..'.
                                  type: string
                              required:
                              - key
                              - path
                              type: object
                            type: array
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its keys
                              must be defined
                            type: boolean
                        type: object
                      csi:
                        description: CSI (Container Storage Interface) represents
                          storage that is handled by an external CSI driver (Alpha
                          feature).
                        properties:
                          driver:
                            description: Driver is the name of the CSI driver that
                              handles this volume. Consult with your admin for the
                              correct name as registered in the cluster.
                            type: string
                          fsType:
                            description: Filesystem type to mount. Ex. "ext4", "xfs",
                              "ntfs". If not provided, the empty value is passed to
                              the associated CSI driver which will determine the default
                              filesystem to apply.
                            type: string
                          nodePublishSecretRef:
                            description: NodePublishSecretRef is a reference to the
                              secret object containing sensitive information to pass
                              to the CSI driver to complete the CSI NodePublishVolume
                              and NodeUnpublishVolume calls. This field is optional,
                              and  may be empty if no secret is required. If the secret
                              object contains more than one secret, all secret references
                              are passed.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          readOnly:
                            description: Specifies a read-only configuration for the
                              volume. Defaults to false (read/write).
                            type: boolean
                          volumeAttributes:
                            additionalProperties:
                              type: string
                            description: VolumeAttributes stores driver-specific properties
                              that are passed to the CSI driver. Consult your driver's
                              documentation for supported values.
                            type: object
                        required:
                        - driver
                        type: object
                      downwardAPI:
                        description: DownwardAPI represents downward API about the
                          pod that should populate this volume
                        properties:
                          defaultMode:
                            description: 'Optional: mode bits to use on created files
                              by default. Must be a value between 0 and 0777. Defaults
                              to 0644. Directories within the path are not affected
                              by this setting. This might be in conflict with other
                              options that affect the file mode, like fsGroup, and
                              the result can be other mode bits set.'
                            format: int32
                            type: integer
                          items:
                            description: Items is a list of downward API volume file
                            items:
                              description: DownwardAPIVolumeFile represents information
                                to create the file containing the pod field
                              properties:
                                fieldRef:
                                  description: 'Required: Selects a field of the pod:
                                    only annotations, labels, name and namespace are
                                    supported.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                mode:
                                  description: 'Optional: mode bits to use on this
                                    file, must be a value between 0 and 0777. If not
                                    specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that
                                    affect the file mode, like fsGroup, and the result
                                    can be other mode bits set.'
                                  format: int32
                                  type: integer
                                path:
                                  description: 'Required: Path is  the relative path
                                    name of the file to be created. Must not be absolute
                                    or contain the ''..'' path. Must be utf-8 encoded.
                                    The first item of the relative path must not start
                                    with ''..'''
                                  type: string
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, requests.cpu and requests.memory)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      type: string
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                              required:
                              - path
                              type: object
                            type: array
                        type: object
                      emptyDir:
                        description: 'EmptyDir represents a temporary directory that
                          shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                        properties:
                          medium:
                            description: 'What type of storage medium should back
                              this directory. The default is "" which means to use
                              the node''s default medium. Must be an empty string
                              (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                            type: string
                          sizeLimit:
                            description: 'Total amount of local storage required for
                              this EmptyDir volume. The size limit is also applicable
                              for memory medium. The maximum usage on memory medium
                              EmptyDir would be the minimum value between the SizeLimit
                              specified here and the sum of memory limits of all containers
                              in a pod. The default is nil which means that the limit
                              is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                            type: string
                        type: object
                      fc:
                        description: FC represents a Fibre Channel resource that is
                          attached to a kubelet's host machine and then exposed to
                          the pod.
                        properties:
                          fsType:
                            description: 'Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Ex. "ext4",
                              "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                            type: string
                          lun:
                            description: 'Optional: FC target lun number'
                            format: int32
                            type: integer
                          readOnly:
                            description: 'Optional: Defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                            type: boolean
                          targetWWNs:
                            description: 'Optional: FC target worldwide names (WWNs)'
                            items:
                              type: string
                            type: array
                          wwids:
                            description: 'Optional: FC volume world wide identifiers
                              (wwids) Either wwids or combination of targetWWNs and
                              lun must be set, but not both simultaneously.'
                            items:
                              type: string
                            type: array
                        type: object
                      flexVolume:
                        description: FlexVolume represents a generic volume resource
                          that is provisioned/attached using an exec based plugin.
                        properties:
                          driver:
                            description: Driver is the name of the driver to use for
                              this volume.
                            type: string
                          fsType:
                            description: Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Ex. "ext4",
                              "xfs", "ntfs". The default filesystem depends on FlexVolume
                              script.
                            type: string
                          options:
                            additionalProperties:
                              type: string
                            description: 'Optional: Extra command options if any.'
                            type: object
                          readOnly:
                            description: 'Optional: Defaults to false (read/write).
                              ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                            type: boolean
                          secretRef:
                            description: 'Optional: SecretRef is reference to the
                              secret object containing sensitive information to pass
                              to the plugin scripts. This may be empty if no secret
                              object is specified. If the secret object contains more
                              than one secret, all secrets are passed to the plugin
                              scripts.'
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                        required:
                        - driver
                        type: object
                      flocker:
                        description: Flocker represents a Flocker volume attached
                          to a kubelet's host machine. This depends on the Flocker
                          control service being running
                        properties:
                          datasetName:
                            description: Name of the dataset stored as metadata ->
                              name on the dataset for Flocker should be considered
                              as deprecated
                            type: string
                          datasetUUID:
                            description: UUID of the dataset. This is unique identifier
                              of a Flocker dataset
                            type: string
                        type: object
                      gcePersistentDisk:
                        description: 'GCEPersistentDisk represents a GCE Disk resource
                          that is attached to a kubelet''s host machine and then exposed
                          to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                        properties:
                          fsType:
                            description: 'Filesystem type of the volume that you want
                              to mount. Tip: Ensure that the filesystem type is supported
                              by the host operating system. Examples: "ext4", "xfs",
                              "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                            type: string
                          partition:
                            description: 'The partition in the volume that you want
                              to mount. If omitted, the default is to mount by volume
                              name. Examples: For volume /dev/sda1, you specify the
                              partition as "1". Similarly, the volume partition for
                              /dev/sda is "0" (or you can leave the property empty).
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            format: int32
                            type: integer
                          pdName:
                            description: 'Unique name of the PD resource in GCE. Used
                              to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            type: string
                          readOnly:
                            description: 'ReadOnly here will force the ReadOnly setting
                              in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            type: boolean
                        required:
                        - pdName
                        type: object
                      gitRepo:
                        description: 'GitRepo represents a git repository at a particular
                          revision. DEPRECATED: GitRepo is deprecated. To provision
                          a container with a git repo, mount an EmptyDir into an InitContainer
                          that clones the repo using git, then mount the EmptyDir
                          into the Pod''s container.'
                        properties:
                          directory:
                            description: Target directory name. Must not contain or
                              start with '..'.  If '.' is supplied, the volume directory
                              will be the git repository.  Otherwise, if specified,
                              the volume will contain the git repository in the subdirectory
                              with the given name.
                            type: string
                          repository:
                            description: Repository URL
                            type: string
                          revision:
                            description: Commit hash for the specified revision.
                            type: string
                        required:
                        - repository
                        type: object
                      glusterfs:
                        description: 'Glusterfs represents a Glusterfs mount on the
                          host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                        properties:
                          endpoints:
                            description: 'EndpointsName is the endpoint name that
                              details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                            type: string
                          path:
                            description: 'Path is the Glusterfs volume path. More
                              info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                            type: string
                          readOnly:
                            description: 'ReadOnly here will force the Glusterfs volume
                              to be mounted with read-only permissions. Defaults to
                              false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                            type: boolean
                        required:
                        - endpoints
                        - path
                        type: object
                      hostPath:
                        description: 'HostPath represents a pre-existing file or directory
                          on the host machine that is directly exposed to the container.
                          This is generally used for system agents or other privileged
                          things that are allowed to see the host machine. Most containers
                          will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                          --- TODO(jonesdl) We need to restrict who can use host directory
                          mounts and who can/can not mount host directories as read/write.'
                        properties:
                          path:
                            description: 'Path of the directory on the host. If the
                              path is a symlink, it will follow the link to the real
                              path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                            type: string
                          type:
                            description: 'Type for HostPath Volume Defaults to ""
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                            type: string
                        required:
                        - path
                        type: object
                      iscsi:
                        description: 'ISCSI represents an ISCSI Disk resource that
                          is attached to a kubelet''s host machine and then exposed
                          to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                        properties:
                          chapAuthDiscovery:
                            description: whether support iSCSI Discovery CHAP authentication
                            type: boolean
                          chapAuthSession:
                            description: whether support iSCSI Session CHAP authentication
                            type: boolean
                          fsType:
                            description: 'Filesystem type of the volume that you want
                              to mount. Tip: Ensure that the filesystem type is supported
                              by the host operating system. Examples: "ext4", "xfs",
                              "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                            type: string
                          initiatorName:
                            description: Custom iSCSI Initiator Name. If initiatorName
                              is specified with iscsiInterface simultaneously, new
                              iSCSI interface <target portal>:<volume name> will be
                              created for the connection.
                            type: string
                          iqn:
                            description: Target iSCSI Qualified Name.
                            type: string
                          iscsiInterface:
                            description: iSCSI Interface Name that uses an iSCSI transport.
                              Defaults to 'default' (tcp).
                            type: string
                          lun:
                            description: iSCSI Target Lun number.
                            format: int32
                            type: integer
                          portals:
                            description: iSCSI Target Portal List. The portal is either
                              an IP or ip_addr:port if the port is other than default
                              (typically TCP ports 860 and 3260).
                            items:
                              type: string
                            type: array
                          readOnly:
                            description: ReadOnly here will force the ReadOnly setting
                              in VolumeMounts. Defaults to false.
                            type: boolean
                          secretRef:
                            description: CHAP Secret for iSCSI target and initiator
                              authentication
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          targetPortal:
                            description: iSCSI Target Portal. The Portal is either
                              an IP or ip_addr:port if the port is other than default
                              (typically TCP ports 860 and 3260).
                            type: string
                        required:
                        - iqn
                        - lun
                        - targetPortal
                        type: object
                      name:
                        description: 'Volume''s name. Must be a DNS_LABEL and unique
                          within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      nfs:
                        description: 'NFS represents an NFS mount on the host that
                          shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                        properties:
                          path:
                            description: 'Path that is exported by the NFS server.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                            type: string
                          readOnly:
                            description: 'ReadOnly here will force the NFS export
                              to be mounted with read-only permissions. Defaults to
                              false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                            type: boolean
                          server:
                            description: 'Server is the hostname or IP address of
                              the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                            type: string
                        required:
                        - path
                        - server
                        type: object
                      persistentVolumeClaim:
                        description: 'PersistentVolumeClaimVolumeSource represents
                          a reference to a PersistentVolumeClaim in the same namespace.
                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                        properties:
                          claimName:
                            description: 'ClaimName is the name of a PersistentVolumeClaim
                              in the same namespace as the pod using this volume.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                            type: string
                          readOnly:
                            description: Will force the ReadOnly setting in VolumeMounts.
                              Default false.
                            type: boolean
                        required:
                        - claimName
                        type: object
                      photonPersistentDisk:
                        description: PhotonPersistentDisk represents a PhotonController
                          persistent disk attached and mounted on kubelets host machine
                        properties:
                          fsType:
                            description: Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Ex. "ext4",
                              "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          pdID:
                            description: ID that identifies Photon Controller persistent
                              disk
                            type: string
                        required:
                        - pdID
                        type: object
                      portworxVolume:
                        description: PortworxVolume represents a portworx volume attached
                          and mounted on kubelets host machine
                        properties:
                          fsType:
                            description: FSType represents the filesystem type to
                              mount Must be a filesystem type supported by the host
                              operating system. Ex. "ext4", "xfs". Implicitly inferred
                              to be "ext4" if unspecified.
                            type: string
                          readOnly:
                            description: Defaults to false (read/write). ReadOnly
                              here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          volumeID:
                            description: VolumeID uniquely identifies a Portworx volume
                            type: string
                        required:
                        - volumeID
                        type: object
                      projected:
                        description: Items for all in one resources secrets, configmaps,
                          and downward API
                        properties:
                          defaultMode:
                            description: Mode bits to use on created files by default.
                              Must be a value between 0 and 0777. Directories within
                              the path are not affected by this setting. This might
                              be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode
                              bits set.
                            format: int32
                            type: integer
                          sources:
                            description: list of volume projections
                            items:
                              description: Projection that may be projected along
                                with other supported volume types
                              properties:
                                configMap:
                                  description: information about the configMap data
                                    to project
                                  properties:
                                    items:
                                      description: If unspecified, each key-value
                                        pair in the Data field of the referenced ConfigMap
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified
                                        which is not present in the ConfigMap, the
                                        volume setup will error unless it is marked
                                        optional. Paths must be relative and may not
                                        contain the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: The key to project.
                                            type: string
                                          mode:
                                            description: 'Optional: mode bits to use
                                              on this file, must be a value between
                                              0 and 0777. If not specified, the volume
                                              defaultMode will be used. This might
                                              be in conflict with other options that
                                              affect the file mode, like fsGroup,
                                              and the result can be other mode bits
                                              set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: The relative path of the
                                              file to map the key to. May not be an
                                              absolute path. May not contain the path
                                              element '..'. May not start with the
                                              string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its keys must be defined
                                      type: boolean
                                  type: object
                                downwardAPI:
                                  description: information about the downwardAPI data
                                    to project
                                  properties:
                                    items:
                                      description: Items is a list of DownwardAPIVolume
                                        file
                                      items:
                                        description: DownwardAPIVolumeFile represents
                                          information to create the file containing
                                          the pod field
                                        properties:
                                          fieldRef:
                                            description: 'Required: Selects a field
                                              of the pod: only annotations, labels,
                                              name and namespace are supported.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                          mode:
                                            description: 'Optional: mode bits to use
                                              on this file, must be a value between
                                              0 and 0777. If not specified, the volume
                                              defaultMode will be used. This might
                                              be in conflict with other options that
                                              affect the file mode, like fsGroup,
                                              and the result can be other mode bits
                                              set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: 'Required: Path is  the relative
                                              path name of the file to be created.
                                              Must not be absolute or contain the
                                              ''..'' path. Must be utf-8 encoded.
                                              The first item of the relative path
                                              must not start with ''..'''
                                            type: string
                                          resourceFieldRef:
                                            description: 'Selects a resource of the
                                              container: only resources limits and
                                              requests (limits.cpu, limits.memory,
                                              requests.cpu and requests.memory) are
                                              currently supported.'
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                type: string
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                        required:
                                        - path
                                        type: object
                                      type: array
                                  type: object
                                secret:
                                  description: information about the secret data to
                                    project
                                  properties:
                                    items:
                                      description: If unspecified, each key-value
                                        pair in the Data field of the referenced Secret
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified
                                        which is not present in the Secret, the volume
                                        setup will error unless it is marked optional.
                                        Paths must be relative and may not contain
                                        the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: The key to project.
                                            type: string
                                          mode:
                                            description: 'Optional: mode bits to use
                                              on this file, must be a value between
                                              0 and 0777. If not specified, the volume
                                              defaultMode will be used. This might
                                              be in conflict with other options that
                                              affect the file mode, like fsGroup,
                                              and the result can be other mode bits
                                              set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: The relative path of the
                                              file to map the key to. May not be an
                                              absolute path. May not contain the path
                                              element '..'. May not start with the
                                              string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  type: object
                                serviceAccountToken:
                                  description: information about the serviceAccountToken
                                    data to project
                                  properties:
                                    audience:
                                      description: Audience is the intended audience
                                        of the token. A recipient of a token must
                                        identify itself with an identifier specified
                                        in the audience of the token, and otherwise
                                        should reject the token. The audience defaults
                                        to the identifier of the apiserver.
                                      type: string
                                    expirationSeconds:
                                      description: ExpirationSeconds is the requested
                                        duration of validity of the service account
                                        token. As the token approaches expiration,
                                        the kubelet volume plugin will proactively
                                        rotate the service account token. The kubelet
                                        will start trying to rotate the token if the
                                        token is older than 80 percent of its time
                                        to live or if the token is older than 24 hours.Defaults
                                        to 1 hour and must be at least 10 minutes.
                                      format: int64
                                      type: integer
                                    path:
                                      description: Path is the path relative to the
                                        mount point of the file to project the token
                                        into.
                                      type: string
                                  required:
                                  - path
                                  type: object
                              type: object
                            type: array
                        required:
                        - sources
                        type: object
                      quobyte:
                        description: Quobyte represents a Quobyte mount on the host
                          that shares a pod's lifetime
                        properties:
                          group:
                            description: Group to map volume access to Default is
                              no group
                            type: string
                          readOnly:
                            description: ReadOnly here will force the Quobyte volume
                              to be mounted with read-only permissions. Defaults to
                              false.
                            type: boolean
                          registry:
                            description: Registry represents a single or multiple
                              Quobyte Registry services specified as a string as host:port
                              pair (multiple entries are separated with commas) which
                              acts as the central registry for volumes
                            type: string
                          tenant:
                            description: Tenant owning the given Quobyte volume in
                              the Backend Used with dynamically provisioned Quobyte
                              volumes, value is set by the plugin
                            type: string
                          user:
                            description: User to map volume access to Defaults to
                              serivceaccount user
                            type: string
                          volume:
                            description: Volume is a string that references an already
                              created Quobyte volume by name.
                            type: string
                        required:
                        - registry
                        - volume
                        type: object
                      rbd:
                        description: 'RBD represents a Rados Block Device mount on
                          the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md'
                        properties:
                          fsType:
                            description: 'Filesystem type of the volume that you want
                              to mount. Tip: Ensure that the filesystem type is supported
                              by the host operating system. Examples: "ext4", "xfs",
                              "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                              TODO: how do we prevent errors in the filesystem from
                              compromising the machine'
                            type: string
                          image:
                            description: 'The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: string
                          keyring:
                            description: 'Keyring is the path to key ring for RBDUser.
                              Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: string
                          monitors:
                            description: 'A collection of Ceph monitors. More info:
                              https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            items:
                              type: string
                            type: array
                          pool:
                            description: 'The rados pool name. Default is rbd. More
                              info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: string
                          readOnly:
                            description: 'ReadOnly here will force the ReadOnly setting
                              in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: boolean
                          secretRef:
                            description: 'SecretRef is name of the authentication
                              secret for RBDUser. If provided overrides keyring. Default
                              is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          user:
                            description: 'The rados user name. Default is admin. More
                              info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: string
                        required:
                        - image
                        - monitors
                        type: object
                      scaleIO:
                        description: ScaleIO represents a ScaleIO persistent volume
                          attached and mounted on Kubernetes nodes.
                        properties:
                          fsType:
                            description: Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Ex. "ext4",
                              "xfs", "ntfs". Default is "xfs".
                            type: string
                          gateway:
                            description: The host address of the ScaleIO API Gateway.
                            type: string
                          protectionDomain:
                            description: The name of the ScaleIO Protection Domain
                              for the configured storage.
                            type: string
                          readOnly:
                            description: Defaults to false (read/write). ReadOnly
                              here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretRef:
                            description: SecretRef references to the secret for ScaleIO
                              user and other sensitive information. If this is not
                              provided, Login operation will fail.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          sslEnabled:
                            description: Flag to enable/disable SSL communication
                              with Gateway, default false
                            type: boolean
                          storageMode:
                            description: Indicates whether the storage for a volume
                              should be ThickProvisioned or ThinProvisioned. Default
                              is ThinProvisioned.
                            type: string
                          storagePool:
                            description: The ScaleIO Storage Pool associated with
                              the protection domain.
                            type: string
                          system:
                            description: The name of the storage system as configured
                              in ScaleIO.
                            type: string
                          volumeName:
                            description: The name of a volume already created in the
                              ScaleIO system that is associated with this volume source.
                            type: string
                        required:
                        - gateway
                        - secretRef
                        - system
                        type: object
                      secret:
                        description: 'Secret represents a secret that should populate
                          this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                        properties:
                          defaultMode:
                            description: 'Optional: mode bits to use on created files
                              by default. Must be a value between 0 and 0777. Defaults
                              to 0644. Directories within the path are not affected
                              by this setting. This might be in conflict with other
                              options that affect the file mode, like fsGroup, and
                              the result can be other mode bits set.'
                            format: int32
                            type: integer
                          items:
                            description: If unspecified, each key-value pair in the
                              Data field of the referenced Secret will be projected
                              into the volume as a file whose name is the key and
                              content is the value. If specified, the listed keys
                              will be projected into the specified paths, and unlisted
                              keys will not be present. If a key is specified which
                              is not present in the Secret, the volume setup will
                              error unless it is marked optional. Paths must be relative
                              and may not contain the '..' path or start with '..'.
                            items:
                              description: Maps a string key to a path within a volume.
                              properties:
                                key:
                                  description: The key to project.
                                  type: string
                                mode:
                                  description: 'Optional: mode bits to use on this
                                    file, must be a value between 0 and 0777. If not
                                    specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that
                                    affect the file mode, like fsGroup, and the result
                                    can be other mode bits set.'
                                  format: int32
                                  type: integer
                                path:
                                  description: The relative path of the file to map
                                    the key to. May not be an absolute path. May not
                                    contain the path element '..'. May not start with
                                    the string '..'.
                                  type: string
                              required:
                              - key
                              - path
                              type: object
                            type: array
                          optional:
                            description: Specify whether the Secret or its keys must
                              be defined
                            type: boolean
                          secretName:
                            description: 'Name of the secret in the pod''s namespace
                              to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                            type: string
                        type: object
                      storageos:
                        description: StorageOS represents a StorageOS volume attached
                          and mounted on Kubernetes nodes.
                        properties:
                          fsType:
                            description: Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Ex. "ext4",
                              "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          readOnly:
                            description: Defaults to false (read/write). ReadOnly
                              here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretRef:
                            description: SecretRef specifies the secret to use for
                              obtaining the StorageOS API credentials.  If not specified,
                              default values will be attempted.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          volumeName:
                            description: VolumeName is the human-readable name of
                              the StorageOS volume.  Volume names are only unique
                              within a namespace.
                            type: string
                          volumeNamespace:
                            description: VolumeNamespace specifies the scope of the
                              volume within StorageOS.  If no namespace is specified
                              then the Pod's namespace will be used.  This allows
                              the Kubernetes name scoping to be mirrored within StorageOS
                              for tighter integration. Set VolumeName to any name
                              to override the default behaviour. Set to "default"
                              if you are not using namespaces within StorageOS. Namespaces
                              that do not pre-exist within StorageOS will be created.
                            type: string
                        type: object
                      vsphereVolume:
                        description: VsphereVolume represents a vSphere volume attached
                          and mounted on kubelets host machine
                        properties:
                          fsType:
                            description: Filesystem type to mount. Must be a filesystem
                              type supported by the host operating system. Ex. "ext4",
                              "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          storagePolicyID:
                            description: Storage Policy Based Management (SPBM) profile
                              ID associated with the StoragePolicyName.
                            type: string
                          storagePolicyName:
                            description: Storage Policy Based Management (SPBM) profile
                              name.
                            type: string
                          volumePath:
                            description: Path that identifies vSphere volume vmdk
                            type: string
                        required:
                        - volumePath
                        type: object
                    required:
                    - name
                    type: object
                  type: array
              type: object
            status:
              description: 'Most recent observed status of the ThanosRuler cluster.
                Read-only. Not included when requesting from the apiserver, only from
                the ThanosRuler Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
              properties:
                availableReplicas:
                  description: Total number of available pods (ready for at least
                    minReadySeconds) targeted by this ThanosRuler deployment.
                  format: int32
                  type: integer
                paused:
                  description: Represents whether any actions on the underlying managed
                    objects are being performed. Only delete actions will be performed.
                  type: boolean
                replicas:
                  description: Total number of non-terminated pods targeted by this
                    ThanosRuler deployment (their labels match the selector).
                  format: int32
                  type: integer
                unavailableReplicas:
                  description: Total number of unavailable pods targeted by this ThanosRuler
                    deployment.
                  format: int32
                  type: integer
                updatedReplicas:
                  description: Total number of non-terminated pods targeted by this
                    ThanosRuler deployment that have the desired version spec.
                  format: int32
                  type: integer
              required:
              - availableReplicas
              - paused
              - replicas
              - unavailableReplicas
              - updatedReplicas
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ThanosRuler
      listKind: ThanosRulerList
      plural: thanosrulers
      singular: thanosruler
    conditions:
    - lastTransitionTime: "2020-11-18T12:59:02Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:59:02Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2020-11-18T12:58:53Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: cluster-version-operator
      operation: Update
      time: "2020-11-18T12:58:53Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T12:58:53Z"
    name: tuneds.tuned.openshift.io
    resourceVersion: "876"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/tuneds.tuned.openshift.io
    uid: 02c372dc-1959-45a0-937e-c2fa909cefa1
  spec:
    conversion:
      strategy: None
    group: tuned.openshift.io
    names:
      kind: Tuned
      listKind: TunedList
      plural: tuneds
      singular: tuned
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: 'Tuned is a collection of rules that allows cluster-wide deployment
            of node-level sysctls and more flexibility to add custom tuning specified
            by user needs.  These rules are translated and passed to all containerized
            tuned daemons running in the cluster in the format that the daemons understand.
            The responsibility for applying the node-level tuning then lies with the
            containerized tuned daemons. More info: https://github.com/openshift/cluster-node-tuning-operator'
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: 'spec is the specification of the desired behavior of Tuned.
                More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
              properties:
                managementState:
                  description: managementState indicates whether the registry instance
                    represented by this config instance is under operator management
                    or not.  Valid values are Force, Managed, Unmanaged, and Removed.
                  pattern: ^(Managed|Unmanaged|Force|Removed)$
                  type: string
                profile:
                  description: Tuned profiles.
                  items:
                    description: A tuned profile.
                    properties:
                      data:
                        description: Specification of the tuned profile to be consumed
                          by the tuned daemon.
                        type: string
                      name:
                        description: Name of the tuned profile to be used in the recommend
                          section.
                        type: string
                    required:
                    - data
                    - name
                    type: object
                  type: array
                recommend:
                  description: Selection logic for all tuned profiles.
                  items:
                    description: Selection logic for a single tuned profile.
                    properties:
                      machineConfigLabels:
                        additionalProperties:
                          type: string
                        description: MachineConfigLabels specifies the labels for
                          a MachineConfig. The MachineConfig is created automatically
                          to apply additional host settings (e.g. kernel boot parameters)
                          profile 'Profile' needs and can only be applied by creating
                          a MachineConfig. This involves finding all MachineConfigPools
                          with machineConfigSelector matching the MachineConfigLabels
                          and setting the profile 'Profile' on all nodes that match
                          the MachineConfigPools' nodeSelectors.
                        type: object
                      match:
                        description: Rules governing application of a tuned profile
                          connected by logical OR operator.
                        items:
                          description: Rules governing application of a tuned profile.
                          properties:
                            label:
                              description: Node or Pod label name.
                              type: string
                            match:
                              description: Additional rules governing application
                                of the tuned profile connected by logical AND operator.
                              items:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              type: array
                            type:
                              description: 'Match type: [node/pod]. If omitted, "node"
                                is assumed.'
                              enum:
                              - node
                              - pod
                              type: string
                            value:
                              description: Node or Pod label value. If omitted, the
                                presence of label name is enough to match.
                              type: string
                          required:
                          - label
                          type: object
                        type: array
                      priority:
                        description: Tuned profile priority. Highest priority is 0.
                        format: int64
                        minimum: 0
                        type: integer
                      profile:
                        description: Name of the tuned profile to recommend.
                        type: string
                    required:
                    - priority
                    - profile
                    type: object
                  type: array
              required:
              - profile
              - recommend
              type: object
            status:
              description: TunedStatus is the status for a Tuned resource
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: Tuned
      listKind: TunedList
      plural: tuneds
      singular: tuned
    conditions:
    - lastTransitionTime: "2020-11-18T12:58:53Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T12:58:53Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      api-approved.kubernetes.io: https://github.com/kubernetes-csi/external-snapshotter/pull/139
      controller-gen.kubebuilder.io/version: v0.3.0
    creationTimestamp: "2020-11-18T13:06:03Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:api-approved.kubernetes.io: {}
            f:controller-gen.kubebuilder.io/version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: csi-snapshot-controller-operator
      operation: Update
      time: "2020-11-18T13:06:03Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T13:06:03Z"
    name: volumesnapshotclasses.snapshot.storage.k8s.io
    resourceVersion: "4800"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/volumesnapshotclasses.snapshot.storage.k8s.io
    uid: cece045f-5387-44fd-a4d5-a3a42abf1d4a
  spec:
    conversion:
      strategy: None
    group: snapshot.storage.k8s.io
    names:
      kind: VolumeSnapshotClass
      listKind: VolumeSnapshotClassList
      plural: volumesnapshotclasses
      singular: volumesnapshotclass
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .driver
        name: Driver
        type: string
      - description: Determines whether a VolumeSnapshotContent created through the
          VolumeSnapshotClass should be deleted when its bound VolumeSnapshot is deleted.
        jsonPath: .deletionPolicy
        name: DeletionPolicy
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: VolumeSnapshotClass specifies parameters that a underlying
            storage system uses when creating a volume snapshot. A specific VolumeSnapshotClass
            is used by specifying its name in a VolumeSnapshot object. VolumeSnapshotClasses
            are non-namespaced
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            deletionPolicy:
              description: deletionPolicy determines whether a VolumeSnapshotContent
                created through the VolumeSnapshotClass should be deleted when its
                bound VolumeSnapshot is deleted. Supported values are "Retain" and
                "Delete". "Retain" means that the VolumeSnapshotContent and its physical
                snapshot on underlying storage system are kept. "Delete" means that
                the VolumeSnapshotContent and its physical snapshot on underlying
                storage system are deleted. Required.
              enum:
              - Delete
              - Retain
              type: string
            driver:
              description: driver is the name of the storage driver that handles this
                VolumeSnapshotClass. Required.
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            parameters:
              additionalProperties:
                type: string
              description: parameters is a key-value map with storage driver specific
                parameters for creating snapshots. These values are opaque to Kubernetes.
              type: object
          required:
          - deletionPolicy
          - driver
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: VolumeSnapshotClass
      listKind: VolumeSnapshotClassList
      plural: volumesnapshotclasses
      singular: volumesnapshotclass
    conditions:
    - lastTransitionTime: "2020-11-18T13:06:03Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T13:06:03Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    - lastTransitionTime: "2020-11-18T13:06:03Z"
      message: approved in https://github.com/kubernetes-csi/external-snapshotter/pull/139
      reason: ApprovedAnnotation
      status: "True"
      type: KubernetesAPIApprovalPolicyConformant
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      api-approved.kubernetes.io: https://github.com/kubernetes-csi/external-snapshotter/pull/139
      controller-gen.kubebuilder.io/version: v0.3.0
    creationTimestamp: "2020-11-18T13:06:02Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:api-approved.kubernetes.io: {}
            f:controller-gen.kubebuilder.io/version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: csi-snapshot-controller-operator
      operation: Update
      time: "2020-11-18T13:06:02Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T13:06:02Z"
    name: volumesnapshotcontents.snapshot.storage.k8s.io
    resourceVersion: "4670"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/volumesnapshotcontents.snapshot.storage.k8s.io
    uid: 58fe115f-2a12-41e5-be3b-ee169733c883
  spec:
    conversion:
      strategy: None
    group: snapshot.storage.k8s.io
    names:
      kind: VolumeSnapshotContent
      listKind: VolumeSnapshotContentList
      plural: volumesnapshotcontents
      singular: volumesnapshotcontent
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - description: Indicates if a snapshot is ready to be used to restore a volume.
        jsonPath: .status.readyToUse
        name: ReadyToUse
        type: boolean
      - description: Represents the complete size of the snapshot in bytes
        jsonPath: .status.restoreSize
        name: RestoreSize
        type: integer
      - description: Determines whether this VolumeSnapshotContent and its physical
          snapshot on the underlying storage system should be deleted when its bound
          VolumeSnapshot is deleted.
        jsonPath: .spec.deletionPolicy
        name: DeletionPolicy
        type: string
      - description: Name of the CSI driver used to create the physical snapshot on
          the underlying storage system.
        jsonPath: .spec.driver
        name: Driver
        type: string
      - description: Name of the VolumeSnapshotClass to which this snapshot belongs.
        jsonPath: .spec.volumeSnapshotClassName
        name: VolumeSnapshotClass
        type: string
      - description: Name of the VolumeSnapshot object to which this VolumeSnapshotContent
          object is bound.
        jsonPath: .spec.volumeSnapshotRef.name
        name: VolumeSnapshot
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: VolumeSnapshotContent represents the actual "on-disk" snapshot
            object in the underlying storage system
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            spec:
              description: spec defines properties of a VolumeSnapshotContent created
                by the underlying storage system. Required.
              properties:
                deletionPolicy:
                  description: deletionPolicy determines whether this VolumeSnapshotContent
                    and its physical snapshot on the underlying storage system should
                    be deleted when its bound VolumeSnapshot is deleted. Supported
                    values are "Retain" and "Delete". "Retain" means that the VolumeSnapshotContent
                    and its physical snapshot on underlying storage system are kept.
                    "Delete" means that the VolumeSnapshotContent and its physical
                    snapshot on underlying storage system are deleted. In dynamic
                    snapshot creation case, this field will be filled in with the
                    "DeletionPolicy" field defined in the VolumeSnapshotClass the
                    VolumeSnapshot refers to. For pre-existing snapshots, users MUST
                    specify this field when creating the VolumeSnapshotContent object.
                    Required.
                  enum:
                  - Delete
                  - Retain
                  type: string
                driver:
                  description: driver is the name of the CSI driver used to create
                    the physical snapshot on the underlying storage system. This MUST
                    be the same as the name returned by the CSI GetPluginName() call
                    for that driver. Required.
                  type: string
                source:
                  description: source specifies from where a snapshot will be created.
                    This field is immutable after creation. Required.
                  properties:
                    snapshotHandle:
                      description: snapshotHandle specifies the CSI "snapshot_id"
                        of a pre-existing snapshot on the underlying storage system.
                        This field is immutable.
                      type: string
                    volumeHandle:
                      description: volumeHandle specifies the CSI "volume_id" of the
                        volume from which a snapshot should be dynamically taken from.
                        This field is immutable.
                      type: string
                  type: object
                volumeSnapshotClassName:
                  description: name of the VolumeSnapshotClass to which this snapshot
                    belongs.
                  type: string
                volumeSnapshotRef:
                  description: volumeSnapshotRef specifies the VolumeSnapshot object
                    to which this VolumeSnapshotContent object is bound. VolumeSnapshot.Spec.VolumeSnapshotContentName
                    field must reference to this VolumeSnapshotContent's name for
                    the bidirectional binding to be valid. For a pre-existing VolumeSnapshotContent
                    object, name and namespace of the VolumeSnapshot object MUST be
                    provided for binding to happen. This field is immutable after
                    creation. Required.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
              required:
              - deletionPolicy
              - driver
              - source
              - volumeSnapshotRef
              type: object
            status:
              description: status represents the current information of a snapshot.
              properties:
                creationTime:
                  description: creationTime is the timestamp when the point-in-time
                    snapshot is taken by the underlying storage system. In dynamic
                    snapshot creation case, this field will be filled in with the
                    "creation_time" value returned from CSI "CreateSnapshotRequest"
                    gRPC call. For a pre-existing snapshot, this field will be filled
                    with the "creation_time" value returned from the CSI "ListSnapshots"
                    gRPC call if the driver supports it. If not specified, it indicates
                    the creation time is unknown. The format of this field is a Unix
                    nanoseconds time encoded as an int64. On Unix, the command `date
                    +%s%N` returns the current time in nanoseconds since 1970-01-01
                    00:00:00 UTC.
                  format: int64
                  type: integer
                error:
                  description: error is the latest observed error during snapshot
                    creation, if any.
                  properties:
                    message:
                      description: 'message is a string detailing the encountered
                        error during snapshot creation if specified. NOTE: message
                        may be logged, and it should not contain sensitive information.'
                      type: string
                    time:
                      description: time is the timestamp when the error was encountered.
                      format: date-time
                      type: string
                  type: object
                readyToUse:
                  description: readyToUse indicates if a snapshot is ready to be used
                    to restore a volume. In dynamic snapshot creation case, this field
                    will be filled in with the "ready_to_use" value returned from
                    CSI "CreateSnapshotRequest" gRPC call. For a pre-existing snapshot,
                    this field will be filled with the "ready_to_use" value returned
                    from the CSI "ListSnapshots" gRPC call if the driver supports
                    it, otherwise, this field will be set to "True". If not specified,
                    it means the readiness of a snapshot is unknown.
                  type: boolean
                restoreSize:
                  description: restoreSize represents the complete size of the snapshot
                    in bytes. In dynamic snapshot creation case, this field will be
                    filled in with the "size_bytes" value returned from CSI "CreateSnapshotRequest"
                    gRPC call. For a pre-existing snapshot, this field will be filled
                    with the "size_bytes" value returned from the CSI "ListSnapshots"
                    gRPC call if the driver supports it. When restoring a volume from
                    this snapshot, the size of the volume MUST NOT be smaller than
                    the restoreSize if it is specified, otherwise the restoration
                    will fail. If not specified, it indicates that the size is unknown.
                  format: int64
                  minimum: 0
                  type: integer
                snapshotHandle:
                  description: snapshotHandle is the CSI "snapshot_id" of a snapshot
                    on the underlying storage system. If not specified, it indicates
                    that dynamic snapshot creation has either failed or it is still
                    in progress.
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: VolumeSnapshotContent
      listKind: VolumeSnapshotContentList
      plural: volumesnapshotcontents
      singular: volumesnapshotcontent
    conditions:
    - lastTransitionTime: "2020-11-18T13:06:02Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T13:06:02Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    - lastTransitionTime: "2020-11-18T13:06:02Z"
      message: approved in https://github.com/kubernetes-csi/external-snapshotter/pull/139
      reason: ApprovedAnnotation
      status: "True"
      type: KubernetesAPIApprovalPolicyConformant
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      api-approved.kubernetes.io: https://github.com/kubernetes-csi/external-snapshotter/pull/139
      controller-gen.kubebuilder.io/version: v0.3.0
    creationTimestamp: "2020-11-18T13:06:01Z"
    generation: 1
    managedFields:
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:api-approved.kubernetes.io: {}
            f:controller-gen.kubebuilder.io/version: {}
        f:spec:
          f:conversion:
            .: {}
            f:strategy: {}
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
        f:status:
          f:storedVersions: {}
      manager: csi-snapshot-controller-operator
      operation: Update
      time: "2020-11-18T13:06:01Z"
    - apiVersion: apiextensions.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:singular: {}
          f:conditions: {}
      manager: kube-apiserver
      operation: Update
      time: "2020-11-18T13:06:01Z"
    name: volumesnapshots.snapshot.storage.k8s.io
    resourceVersion: "4502"
    selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/volumesnapshots.snapshot.storage.k8s.io
    uid: a791653c-1d5c-4739-a2ec-a1697d7b3bff
  spec:
    conversion:
      strategy: None
    group: snapshot.storage.k8s.io
    names:
      kind: VolumeSnapshot
      listKind: VolumeSnapshotList
      plural: volumesnapshots
      singular: volumesnapshot
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Indicates if a snapshot is ready to be used to restore a volume.
        jsonPath: .status.readyToUse
        name: ReadyToUse
        type: boolean
      - description: Name of the source PVC from where a dynamically taken snapshot
          will be created.
        jsonPath: .spec.source.persistentVolumeClaimName
        name: SourcePVC
        type: string
      - description: Name of the VolumeSnapshotContent which represents a pre-provisioned
          snapshot.
        jsonPath: .spec.source.volumeSnapshotContentName
        name: SourceSnapshotContent
        type: string
      - description: Represents the complete size of the snapshot.
        jsonPath: .status.restoreSize
        name: RestoreSize
        type: string
      - description: The name of the VolumeSnapshotClass requested by the VolumeSnapshot.
        jsonPath: .spec.volumeSnapshotClassName
        name: SnapshotClass
        type: string
      - description: The name of the VolumeSnapshotContent to which this VolumeSnapshot
          is bound.
        jsonPath: .status.boundVolumeSnapshotContentName
        name: SnapshotContent
        type: string
      - description: Timestamp when the point-in-time snapshot is taken by the underlying
          storage system.
        jsonPath: .status.creationTime
        name: CreationTime
        type: date
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: VolumeSnapshot is a user's request for either creating a point-in-time
            snapshot of a persistent volume, or binding to a pre-existing snapshot.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            spec:
              description: 'spec defines the desired characteristics of a snapshot
                requested by a user. More info: https://kubernetes.io/docs/concepts/storage/volume-snapshots#volumesnapshots
                Required.'
              properties:
                source:
                  description: source specifies where a snapshot will be created from.
                    This field is immutable after creation. Required.
                  properties:
                    persistentVolumeClaimName:
                      description: persistentVolumeClaimName specifies the name of
                        the PersistentVolumeClaim object in the same namespace as
                        the VolumeSnapshot object where the snapshot should be dynamically
                        taken from. This field is immutable.
                      type: string
                    volumeSnapshotContentName:
                      description: volumeSnapshotContentName specifies the name of
                        a pre-existing VolumeSnapshotContent object. This field is
                        immutable.
                      type: string
                  type: object
                volumeSnapshotClassName:
                  description: 'volumeSnapshotClassName is the name of the VolumeSnapshotClass
                    requested by the VolumeSnapshot. If not specified, the default
                    snapshot class will be used if one exists. If not specified, and
                    there is no default snapshot class, dynamic snapshot creation
                    will fail. Empty string is not allowed for this field. TODO(xiangqian):
                    a webhook validation on empty string. More info: https://kubernetes.io/docs/concepts/storage/volume-snapshot-classes'
                  type: string
              required:
              - source
              type: object
            status:
              description: 'status represents the current information of a snapshot.
                NOTE: status can be modified by sources other than system controllers,
                and must not be depended upon for accuracy. Controllers should only
                use information from the VolumeSnapshotContent object after verifying
                that the binding is accurate and complete.'
              properties:
                boundVolumeSnapshotContentName:
                  description: 'boundVolumeSnapshotContentName represents the name
                    of the VolumeSnapshotContent object to which the VolumeSnapshot
                    object is bound. If not specified, it indicates that the VolumeSnapshot
                    object has not been successfully bound to a VolumeSnapshotContent
                    object yet. NOTE: Specified boundVolumeSnapshotContentName alone
                    does not mean binding       is valid. Controllers MUST always
                    verify bidirectional binding between       VolumeSnapshot and
                    VolumeSnapshotContent to avoid possible security issues.'
                  type: string
                creationTime:
                  description: creationTime is the timestamp when the point-in-time
                    snapshot is taken by the underlying storage system. In dynamic
                    snapshot creation case, this field will be filled in with the
                    "creation_time" value returned from CSI "CreateSnapshotRequest"
                    gRPC call. For a pre-existing snapshot, this field will be filled
                    with the "creation_time" value returned from the CSI "ListSnapshots"
                    gRPC call if the driver supports it. If not specified, it indicates
                    that the creation time of the snapshot is unknown.
                  format: date-time
                  type: string
                error:
                  description: error is the last observed error during snapshot creation,
                    if any. This field could be helpful to upper level controllers(i.e.,
                    application controller) to decide whether they should continue
                    on waiting for the snapshot to be created based on the type of
                    error reported.
                  properties:
                    message:
                      description: 'message is a string detailing the encountered
                        error during snapshot creation if specified. NOTE: message
                        may be logged, and it should not contain sensitive information.'
                      type: string
                    time:
                      description: time is the timestamp when the error was encountered.
                      format: date-time
                      type: string
                  type: object
                readyToUse:
                  description: readyToUse indicates if a snapshot is ready to be used
                    to restore a volume. In dynamic snapshot creation case, this field
                    will be filled in with the "ready_to_use" value returned from
                    CSI "CreateSnapshotRequest" gRPC call. For a pre-existing snapshot,
                    this field will be filled with the "ready_to_use" value returned
                    from the CSI "ListSnapshots" gRPC call if the driver supports
                    it, otherwise, this field will be set to "True". If not specified,
                    it means the readiness of a snapshot is unknown.
                  type: boolean
                restoreSize:
                  description: restoreSize represents the complete size of the snapshot
                    in bytes. In dynamic snapshot creation case, this field will be
                    filled in with the "size_bytes" value returned from CSI "CreateSnapshotRequest"
                    gRPC call. For a pre-existing snapshot, this field will be filled
                    with the "size_bytes" value returned from the CSI "ListSnapshots"
                    gRPC call if the driver supports it. When restoring a volume from
                    this snapshot, the size of the volume MUST NOT be smaller than
                    the restoreSize if it is specified, otherwise the restoration
                    will fail. If not specified, it indicates that the size is unknown.
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  type: string
                  x-kubernetes-int-or-string: true
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: VolumeSnapshot
      listKind: VolumeSnapshotList
      plural: volumesnapshots
      singular: volumesnapshot
    conditions:
    - lastTransitionTime: "2020-11-18T13:06:01Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2020-11-18T13:06:01Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    - lastTransitionTime: "2020-11-18T13:06:01Z"
      message: approved in https://github.com/kubernetes-csi/external-snapshotter/pull/139
      reason: ApprovedAnnotation
      status: "True"
      type: KubernetesAPIApprovalPolicyConformant
    storedVersions:
    - v1beta1
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
